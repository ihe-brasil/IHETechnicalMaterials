<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE spec SYSTEM "../../support/dtd/v3m.dtd">
<spec>
	<header ballotStatus="DSTU">
		<title>HL7 Version 3 Standard: Transport Specification - ebXML, Release 1</title>
		<version>2</version>
		<date>20040315</date>
		<authlist>
			<author>
				<role>Editor</role>
				<name>Paul Knapp</name>
				<email href="pknapp@continovation.com" actuate="auto" show="embed" xlink-form="simple"/>
			</author>
		</authlist>
		<!--	<legalese copyRightDate="2003" copyRightOwner="Health Level Seven, Inc." copyRightNotation="All rights reserved." renderer="RoseTree 2.8.61" renderNotation="This document was rendered into XML using software provided to HL7 by Beeler Consulting LLC." contactEmail="HQ@HL7.org" contactName="HL7 Headquarters Staff" contactNote="Comments or questions about this document may be may be addressed to:"/> -->
	</header>
	<front>
		<div1 title="Notes to Readers" id="prefNotes" numberSectionInd="true">
			<head>Notes to Readers</head>
			<p>This document was approved by the HL7 Board of Directors as a Draft Standard for Trail Use (DSTU) in 2003.</p>
		</div1>
		<div1 title="Draft Standard For Trial Use" id="DSTU" numberSectionInd="true">
			<head>Draft Standard for Trial Use</head>
			<p>As reviewers of this document submit suggestions, and implementers gain field experience with the standard and feed that information in as suggestions, technical amendments to the document may be issued.</p>
			<p>It is planned to commence work on a new version in late 2005. At this time known issues will be addressed and the document will proceed through the normal process for a normative HL7 document. Thank you to all contributors to this document, and to those organizations which are currently implementing this standard and through that effort will contribute to the evolution of this document.
</p>
		</div1>
		
	</front>
	<body>
		<div1 id="ebXMLmessage" ballotStatus="DSTU" ballotNumber="1">
			<head>ebXML Message Delivery &amp; Message Wrapper</head>
			<div2 id="ebXMLmessagePreamble">
				<head>Introduction &amp; Scope</head>
				<p>
					The purpose of the ebXML message wrapper is to provide a secure, flexible transport for exchanging HL7 messages and other content, and potentially other message formats, between message handling interfaces or ebXML Message Service Handlers (ebXML MSH).  This document describes a specific implementation of the ebXML Message Service as described in "Message Service Specification Version 2.0 1 April 2002".
				</p>
			</div2>
			<div2 id="ebXMLmessagesReferences">
				<head>References</head>
				<p>
					<emph role="strong">ebXML – Electronic Business Extensible Markup Language</emph>
				</p>
				<p>
					The ebXML Message Service(ebMS), developed by The Organization for the Advancement of Structured Information Standards [OASIS] January 2002, defines the message enveloping and header document schema used to transfer ebXML messages over a communications protocol such as TCP/IP, HTTP or SMTP and the behavior of software sending and receiving ebXML messages.   The ebMS is defined as a set of layered extensions to the base Simple Object Access Protocol [SOAP] and SOAP Messages with Attachments [SOAPAttach] specifications.  This document provides security and reliability features necessary to support international electronic business.  These security and reliability features are not provided in the SOAP or SOAP with Attachments specifications.
				</p>
				<p> 
					Documents may be found at 
					<loc href="http://www.oasis-open.org/committees/ebxml-msg/">"http://www.oasis-open.org/committees/ebxml-msg/"</loc>
				</p>
				<p>Additionally, CPP/A may be used as a convenient way of expressing trading partner parameters, and BPSS for the message exchange sequencing (business process).  Documents on these additional ebXML services may also be found at the OASIS site listed above.</p>
				<p>
					<emph role="strong">SOAP – Simple Object Access Protocol</emph>
				</p>
				<p>
					SOAP is a lightweight protocol for exchange of information in a decentralized, distributed environment. It is an XML based protocol that consists of three parts: an envelope that defines a framework for describing what is in a message and how to process it, a set of encoding rules for expressing instances of application-defined datatypes, and a convention for representing remote procedure calls and responses.
				</p>
				<p>
					SOAP documents may be found at 
					<loc href="http://www.w3.org/TR/SOAP/">"http://www.w3.org/TR/SOAP/"</loc>.
					<br/>
					SOAP with Attachments documents may be found at 
					<loc href="http://www.w3.org/TR/SOAP-attachments">"http://www.w3.org/TR/SOAP-attachments"</loc>
					<br/>
					MIME (Multipurpose Internet Mail Extensions) documents may be found at 
					<loc href="http://www.ietf.org/rfc/rfc2045.txt">"http://www.ietf.org/rfc/rfc2045.txt"</loc>.
					<br/>
					Internet Message Format documents may be found at 
					<loc href="http://www.ietf.org/rfc/rfc2822.txt">"http://www.ietf.org/rfc/rfc2822.txt". </loc>
				</p>
				<p>
					<emph role="strong">TLS/SSL – Transport Layer Security – Secure Sockets Layer</emph>
				</p>
				<p>
					The IETF protocol Version 1.0 of the Transport Layer Security Version 1.0 (TLS), and it's predecessor the Netscape protocol Secure Sockets Layer Version 3.0 (SSL), provide both communications privacy and authentication over the Internet. The protocols allow client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery.
				</p>
				<p>
					TLS 1.0 documents may be found at 
					<loc href="http://www.ietf.org/rfc/rfc2246.txt">"http://www.ietf.org/rfc/rfc2246.txt"</loc>.
					<br/>
					SSL 3.0 documents may be found at 
					<loc href="http://wp.netscape.com/eng/ssl3/">"http://wp.netscape.com/eng/ssl3/"</loc>.
				</p>
			</div2>
			<div2 id="ebXMLmessagesLowerLevel">
				<head>Lower Level Transports</head>
				<p>
					The ebXML message wrappers and transport architecture as described in this document may be used to exchange messages over a variety of lower level transports such as TCP/IP, HTTP, SMTP and others.  The ebXML "Message Service Specification Version 2.0 1 April 2002" includes appendices describing the requirements for transport of the messages and wrappers over HTTP and SMTP.  This document includes a section titled "2.0 Simple Secure Authenticated TCP Transport" which provides the mechanisms for exchanging the ebXML messages via TCP/IP.
				</p>
				<p>
					The specific transport used to exchange messages is a matter for trading partner agreement, and may require additional transport specific content, such as headers, and/or host routing information, e.g. URL, DNS name, service name etc. However the messages themselves and the message handling architecture, what messages are to be exchanged and when, will be consistent regardless of the means used to exchange messages between two message handling interfaces, the Sending (Initiating) and Receiving ebXML MSHs.
				</p>
			</div2>
			<div2 id="ebXMLpackaging">
				<head>Packaging Specification</head>
				<p>
					An ebXML Message is a lower level communication protocol independent MIME/Multipart message envelope, structured in compliance with the SOAP Messages with Attachments [SOAPATTACH] specification referred to as a 
					<emph>Message Package.</emph>
				</p>
				<p>There are two logical MIME parts within the Message Package:				
				<list role="unordered">
						<item>A MIME part, referred to as the <emph>Header Container</emph>, containing one SOAP 1.1 compliant message.  This XML document is referred to as a SOAP Message for the remainder of this specification.</item>
						<item>Zero or more MIME parts, referred to as <emph>Payload Containers</emph>, containing application level payloads.</item>
					</list>
				</p>
				<p>
					The <emph>SOAP Message</emph> is an XML document that consists of the SOAP <emph role="strong">Envelope</emph> element.  This is the root element of the XML document representing the <emph>SOAP Message</emph>.  The SOAP <emph role="strong">Envelope</emph> element consists of the following:
					<list role="unordered">
						<item>One SOAP <emph role="strong">Header</emph> element.  This is a generic mechanism for adding features to a SOAP Message, including ebXML specific header elements.</item>
						<item>One SOAP <emph role="strong">Body</emph> element.  This is a container for message service handler control data and information related to the payload parts of the message.</item>
					</list>
				</p>
				<p>
					The general structure and composition of an ebXML Message is described in the following figure.
					<graphic source="ebXMLfig1.jpg" xlink-form="simple" xml:attributes="href source" show="embed" actuate="auto"/>
					<br/>
					<emph role="strong">Figure 1 ebXML Message Structure</emph> (Copyright OASIS 2002)
				</p>
			</div2>
			<div2 id="ebXMLmessageDelivery">
				<head>Message Delivery</head>
				<p>
					The HL7 ebXML message delivery system may use the assured delivery mechanisms of ebXML.  The ebXML wrapper provides an element "/SOAP:Envelope/SOAP:Header/eb:MessageHeader/eb:ackRequested" the presence of which in the message body indicates that an ebXML Acknowledgment is required.  This element contains an attribute "eb:signed" which may be set to "true" or "false" to indicate whether or not the ebXML Acknowledgment must be signed by the creator of the acknowledgment
				</p>
				<p>
				The ebXML ACK (transport level ACK) serves the purpose to indicating to the sender that the payoad has been received by the receiver so that it is not retransmitted by the sender.  Implementers are free to not use ebXML ACKs and instead rely on application level ACKs, such as an HL7 Version 3 ACK, to indicate recept of the application message.
                          </p>
				<p>
                          The following section, "Message Exchange with ebXML Acnowledgments", makes use of the ebMS Guaranteed Message Delivery function, and retries, if necessary, are handled by the ebXML MSH software.  In the section "Message Exchange without ebXML Acnowledgments", the ebXML MSH is not responsible for failed delivery attempts, and retries are done by the sending application.  Retries in the latter section will only work if the application-level message exchange pattern (or Business Process) is bidirectional (request-reply, query-response, send-acknowledge), and the response will never be retried.  Message Exchange without ebXML Acnowledgments may be used when reliability and once-only delivery are not important to the parties involved.
                          </p>
				<div3 id="ebXMLmessageExchangeWithAck">
					<head>Message Exchange with ebXML Acknowledgments</head>
					<p>
						<graphic source="ebXMLfig2.jpg" xlink-form="simple" xml:attributes="href source" show="embed" actuate="auto"/>
						<br/>
						<emph role="strong">Figure 2 Message Exchange with ebXML Acknowledgments</emph> (Copyright OASIS 2002)
					</p>
					<p>
						The message exchange architecture requires the Sender (Initiator) to format and send (as a Sending ebXML MSH), via the agreed lower level transport, an ebXML message to the message target (as a Receiving ebXML MSH).  The Receiving ebXML MSH will respond with an ebXML Acknowledgment Message to confirm receipt of the Sender’s message.  The target message interface will then assume the role of the Sending ebXML MSH in the return of a response message with an application message payload and the Initiator, in the role of Receiving ebXML MSH, will confirm receipt of the response message with an ebXML Acknowledgment Message.
					</p>
					<p>
						The rules that apply are as follows:
						<list role="unordered">
							<item>
								The <emph>Sending ebXML MSH</emph> MUST resend the original message if an ebXML <emph>Acknowledgment Message</emph> has not been received from the <emph>Receiving ebXML MSH</emph> and the following are both true:
								<list role="ordered">
									<item>At least the time specified in the <emph role="strong">retryInterval</emph> has passed since the message was last sent, and</item>
									<item>The message has been resent less than the number of times specified in the <emph role="strong">retries</emph> Parameter</item>
								</list>
							</item>
							<item>
								If the <emph>Sending ebXML MSH</emph> does not receive an ebXML <emph>Acknowledgment Message</emph> after the maximum number of retries, the <emph>Sending ebXML MSH</emph> SHOULD notify the application and/or system administrator function of the failure to receive an acknowledgment.
							</item>
							<item>
								If the <emph>Sending ebXML MSH</emph> detects an unrecoverable communications protocol error at the transport protocol level, the <emph>Sending ebXML MSH</emph> SHOULD resend the message if possible, otherwise terminate and if possible reestablish the connection.
							</item>
						</list>
					</p>
					<p>	It is up to trading partners to determine the specific values of the <emph role="strong">retryInterval</emph> and the number of <emph role="strong">retries</emph>.</p>
				</div3>
				<div3 id="ebXMLmessageExchangeWithoutAck">
					<head>Message Exchange without ebXML Acknowledgments</head>
					<p>
						<graphic source="ebXMLfig3.jpg" xlink-form="simple" xml:attributes="href source" show="embed" actuate="auto"/>
						<br/>
						<emph role="strong">Figure 3 Message Exchange without ebXML Acknowledgments</emph> (Copyright OASIS 2002)
					</p>
					<p>
						The message exchange architecture requires the Sender (Initiator) to format and send (as a Sending ebXML MSH), via the agreed lower level transport, an ebXML message to the message target (as a Receiving ebXML MSH).  The target message interface will then assume the role of the Sending ebXML MSH in the return of a response message with an application message payload. Neither the Initiator nor the Target message interfaces will acknowledge receipt of the message from the other message interface.
					</p>
					<p>
						The rules that apply are as follows:
						<list role="unordered">
							<item>
								The <emph>Sending ebXML MSH</emph> MUST resend the original message if a <emph>Message with an application payload </emph>has not been received from the <emph>Receiving ebXML MSH</emph> and the following are both true:
								<list role="ordered">
									<item>At least the time specified in the <emph role="strong">retryInterval </emph>has passed since the message was last sent, and</item>
									<item>The message has been resent less than the number of times specified in the <emph role="strong">retries </emph>Parameter</item>
								</list>
							</item>
							<item>If the <emph>Sending ebXML MSH</emph> does not receive a <emph>Message with an application payload</emph> after the maximum number of retries, the <emph>Sending ebXML MSH</emph> SHOULD notify the application and/or system administrator function of the failure to receive a response.</item>
							<item>If the <emph>Sending ebXML MSH</emph> detects an unrecoverable communications protocol error at the transport protocol level, the <emph>Sending ebXML MSH</emph> SHOULD resend the message if possible, otherwise terminate and if possible reestablish the connection.</item>
						</list>
					</p>
					<p>It is up to trading partners to determine the specific values of the <emph role="strong">retryInterval </emph>and the number of <emph role="strong">retries</emph>.</p>
				</div3>
			</div2>
			<div2 id="ebXMLSequenceNumberProtocol">
				<head>Sequence Number Protocol</head>
				<p>
				To support the Sequence Number Protocol at the ebXML Messaging level see Section 9.1 in the "Message Service Specification Version 2" for ebXML through the inclusion of an optional eb:MessageOrder element in the eb:MessageHeader.
				</p>
			</div2>
			<div2 id="ebXMLmessagesDuplicateHandling">
				<head>Duplicate Message Handling</head>
				<p>
					All nodes involved in the transport of the message from the originator to the ultimate receiver may implement a persistent storage mechanism in order to detect and suppress the forwarding of duplicate messages. The presence of a <emph>/SOAP:Envelope/SOAP:Header/eb:MessageHeader/eb:DuplicateElimination</emph> element in the SOAP Header indicates that duplicate messages should be eliminated and not passed on to the Receiving Application or next message interface.  In the context of this specification:
					<list role="unordered">
						<item>an "identical message" is a message that contains the same ebXML SOAP <emph role="strong">Header</emph>, <emph>Body</emph> and ebXML <emph>Payload </emph>as the earlier <emph>message </emph>that was sent.</item>
						<item>a "duplicate message" is a message that contains the same <emph role="strong">MessageId </emph>as an earlier message that was received.</item>
						<item>the "first message" is the message with the earliest <emph role="strong">Timestamp </emph>in the <emph role="strong">MessageData </emph>element that has the same <emph>RefToMessageId </emph>as the duplicate message.</item>
						<item>for the purpose of this specification an identical message SHALL always be a Duplicate Message</item>
					</list>
				</p>
				<p>
					<graphic source="ebXMLfig4.jpg" xlink-form="simple" xml:attributes="href source" show="embed" actuate="auto"/>
				</p>
				<p>
					<emph role="strong">Figure 4 Resending Unacknowledged Messages</emph> (Copyright OASIS 2002)</p>
				<p>
					The diagram above shows the behavior that MUST be followed by the Sending and Receiving ebXML MSHs when Duplicate Elimination is specified.   Specifically:
					<list role="ordered">
						<item>The sender of the <emph>message  </emph>(e.g. Sending ebXML MSH) MUST resend the "identical message" if no ebXML <emph>Acknowledgment Message</emph> is received.</item>
						<item>When the recipient (Receiving ebXML MSH) of the message receives a "duplicate message", it MUST resend to the sender (Sending ebXML MSH) a message identical to the <emph>first message</emph> that was sent to the sender (Sending ebXML MSH).</item>
						<item>The recipient of the <emph>message </emph>(Receiving ebXML MSH) MUST NOT forward the message a second time to the application/process.</item>
					</list>
				</p>
				<p>	The length of time for which message information should be retained in persistent storage to effectively eliminate duplicates is a an issue for trading partners to determine based upon the nature of the messages being exchanged.</p>
			</div2>
			<div2 id="ebXMLmessageRouters">
				<head>Message Routers</head>
				<p>
					A Message Router is a system or service which accepts connections and messages on behalf of Sending MSHs which don’t know the actual connection route to a given Receiving MSH which serves to route messages between Sending and Receiving MSHs.
				</p>
				<p>
					The Router will authenticate the Sending connection, if required, and receive and acknowledge Client messages in the same manner as a Receiving ebXML MSH, and perform the same duplicate suppression as would a Receiving ebXML MSH.  Once a message is passed to a Router and acknowledged by the Router, the Router assumes responsibility to get the message to the intended target Receiving ebXML MSH.
				</p>
				<p>
					Receiving ebXML MSHs will accept and authenticate connections from Routers and otherwise deal with Routers as if they were the Sending ebXML MSH.
				</p>
			</div2>
			<div2 id="ebXMLmessageElements">
				<head>ebXML Message Elements</head>
				<p>
					Only the elements of specific interest to this implementation are described below, for a description of all elements please refer to "ebXML Message Service Specification Version 2.0 1 April 2002".  The Src (Source) column below indicates whether the element or attribute is populated from the Message Contents (Msg) or the Message Service Handler (MSH).  All items (attributes, elements, parameters and headers) specified below are required unless specified below.  All other ebXML elements and attributes not specified below are permitted but may be ignored by the receiver.
					<table>
						<thead>
							<tr>
								<th>Location</th>
								<th>Src</th>
								<th>Description/Notes</th>
							</tr>
						</thead>
						<tbody>
							<tr>
								<td>
									<emph role="strong">SOAP with Attachments MIME Envelope</emph>
								</td>
								<td>&nbsp;</td>
								<td>&nbsp;</td>
							</tr>
							<tr>
								<td>SOAPAction header</td>
								<td>MSH</td>
								<td>Must be "ebXML"</td>
							</tr>
							<tr>
								<td>Content-Type header</td>
								<td>MSH</td>
								<td>Must be multipart/related</td>
							</tr>
							<tr>
								<td>Content-Type header, @type</td>
								<td>MSH</td>
								<td>Must be text/xml</td>
							</tr>
							<tr>
								<td>Content-Type header, @boundary</td>
								<td>MSH</td>
								<td>The string which is used to mark boundaries between MIME parts and terminate the multipart MIME message.</td>
							</tr>
							<tr>
								<td>Content-Type header, @start</td>
								<td>MSH</td>
								<td>This attribute maps to the Content-ID of the SOAP Envelope MIME part.  </td>
							</tr>
							<tr>
								<td>
									<emph role="strong">SOAP Message</emph>
								</td>
								<td>&nbsp;</td>
								<td>&nbsp;</td>
							</tr>
							<tr>
								<td>Content-ID header</td>
								<td>MSH</td>
								<td>Maps to the SOAP with Attachments MIME Envelope Content-Type start attribute.</td>
							</tr>
							<tr>
								<td>Content-Type header</td>
								<td>MSH</td>
								<td>Must be<emph> text/xml</emph>.</td>
							</tr>
							<tr>
								<td>Content-Type header, @charset</td>
								<td>Msg</td>
								<td>Trading partner specified.</td>
							</tr>
							<tr>
								<td>/?xml/@encoding</td>
								<td>MSH</td>
								<td>Must match the Content-Type @charset setting.</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Header /eb:MessageHeader/eb:From/eb:PartyId</td>
								<td>Msg</td>
								<td>Identification of the message sender.</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Header/eb:MessageHeader/eb:From/eb:PartyId@type</td>
								<td>MSH</td>
								<td>Domain of the contents if not a uri, eg. "urn:isooid' for OIDs.</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Header /eb:MessageHeader/eb:To/eb:PartyId</td>
								<td>Msg</td>
								<td>Identification of the message receiver.</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Header /eb:MessageHeader/eb:To/eb:PartyId@type</td>
								<td>MSH</td>
								<td>Domain of the contents if not a uri, eg. "urn:isooid' for OIDs.</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Header /eb:MessageHeader/eb:To/eb:CPAId</td>
								<td>MSH</td>
								<td>Identification of a Collaboration Protocol Agreement between the sender and receiver.  This will contain the trading partner agreed CPA text reference.</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Header /eb:MessageHeader/eb:To/eb:ConversationId</td>
								<td>MSH</td>
								<td>HL7 makes no use of this element.  Given that this is an ebXML required element the following may be used in the absence of a local trading partner agreement CCYYMMDD-HHMMSS-mmmmm based upon the Sending ebXML MSH connection  When generating responses the eb:ConversationID is taken from the original message.</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Header /eb:MessageHeader/eb:Service</td>
								<td>MSH</td>
								<td>Identification of the message processing service on the receiver’s end of the conversation, recommend <emph>urn:services:HL7MessageProcessing</emph>.For ebXML acknowledgment messages the value must be <emph>urn:oasis:names:tc:ebxml-msg:service</emph>.</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Header /eb:MessageHeader/eb:Action</td>
								<td>Msg</td>
								<td>Identification of the action process within the message processing service on the receiver’s end of the conversation.For ebXML acknowledgment messages the value must be <emph>Acknowledgment</emph>.</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Header /eb:MessageHeader/eb:MessageData/eb:MessageId</td>
								<td>Msg</td>
								<td>A unique message identifier generated by the sender, either a concatenation of message elements, to create a globally unique identifier, or a single message element if that element is globally unique.</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Header /eb:MessageHeader/eb:MessageData/eb:Timestamp</td>
								<td>MSH</td>
								<td>The timestamp for the message determined by the ebXML MSH when the actual message to be sent is created. Note that the format for this element uses xs:dateTime format while HL7 V3 TS type does not?</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Header /eb:MessageHeader/eb:SyncReply</td>
								<td>MSH</td>
								<td>Indicates to the Receiving ebXML MSH, or all of the ebXML MSHs in a route, that they should keep the connection to the Sending ebXML MSH open as a reply from the target ebXML MSH is expected.</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Header /eb:MessageHeader/eb:MessageOrder</td>
								<td>MSH</td>
								<td>Optional element used when message ordering is required.  The @SequenceNumber attribute holds the sequence number.</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Header /eb:MessageHeader/eb:DuplicateElimination</td>
								<td>MSH</td>
								<td>Optional.Indicates to the Receiving ebXML MSH that it should eliminate duplicate messages.</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Header /eb:MessageHeader/eb:ackRequested</td>
								<td>MSH</td>
								<td>Optional.The presence of this element indicates that an ebXML Acknowledgment is required from the next MSH.</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Header /eb:MessageHeader/eb:ackRequested/@eb:signed</td>
								<td>MSH</td>
								<td>"false" indicates that an unsigned ebXML acknowledgment must be returned by the receiver to confirm receipt, if a digitally signed acknowledgment is required then the value must be "true".</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Body /eb:Manifest/eb:Reference/@xlink:href</td>
								<td>MSH</td>
								<td>A URI that identifies the particular MIME part in the Message Package that corresponds to this payload.  The URI should identify the MIME part by its content-id using the cid URI scheme [ add ref to RFC that defines the cid URI scheme].</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Body /eb:Manifest/eb:Reference/eb:Description</td>
								<td>Msg</td>
								<td>Text description of the payload.</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Body /eb:Manifest/eb:Reference/hl7ebxml:Payload/@style</td>
								<td>Msg</td>
								<td>The style or standard to which the message in the payload conforms.  For HL7 messages use  "HL7". Other implementation may define additional values such as "X12", "NCPDP", "CDANET". </td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Body/eb:Manifest /eb:Reference/hl7ebxml:Payload/@encoding</td>
								<td>Msg</td>
								<td>The encoding method for the standard which is used to encode the message in the payload.  For HL7 use "Delimited" or  "XML".  Other implementations may define additional values such as  "Fixed" .</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Body /eb:Manifest/eb:Reference/hl7ebxml:Payload/@version</td>
								<td>Msg</td>
								<td>The version of the standard to which the payload message conforms.</td>
							</tr>
							<tr>
								<td>
									<emph role="strong">Payload</emph>
								</td>
								<td>&nbsp;</td>
								<td>&nbsp;</td>
							</tr>
							<tr>
								<td>Content-ID header</td>
								<td>MSH</td>
								<td>Maps to the /SOAP:Envelope/SOAP:Body /eb:Manifest/eb:Reference/@xlink:href attribute.</td>
							</tr>
							<tr>
								<td>Content-Type header</td>
								<td>MSH</td>
								<td>Must be <emph>application/xml </emph>when the payload is cast in xml, for example HL7 V2 and V3 xml encoded, and<emph> text/plain</emph> when cast as text, for example HL7 V2 VBAR.</td>
							</tr>
							<tr>
								<td>Content-Type header, @charset</td>
								<td>Msg</td>
								<td>Trading partner specified.</td>
							</tr>
						</tbody>
					</table>
				</p>
			</div2>
			<div2 id="ebXMLmessageElementAndAttributes">
				<head>ebXML Element and Attribute Sources</head>
				<p>The tables below detail where in the messages element and attribute contents are sourced.</p>
				<p>
					<emph role="strong">HL7 version 2 Messages</emph>
					<br/>
					<table>
						<thead>
							<tr>
								<th>Location</th>
								<th>Message Source</th>
								<th>Notes</th>
							</tr>
						</thead>
						<tbody>
							<tr>
								<td>/SOAP:Envelope/SOAP:Header /eb:MessageHeader/eb:From/eb:PartyId</td>
								<td>MSH.4 Sending Facility</td>
								<td>&nbsp;</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Header /eb:MessageHeader/eb:To/eb:PartyId</td>
								<td>MSH.6 Receiving Facility</td>
								<td>&nbsp;</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Header /eb:MessageHeader/eb:Service</td>
								<td>
									<emph>urn:services:HL7MessageProcessing</emph>
								</td>
								<td>&nbsp;</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Header /eb:MessageHeader/eb:Action</td>
								<td>MSH.9.3 Message Type</td>
								<td>Third part of the field</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Header /eb:MessageHeader/eb:MessageData/eb:MessageId</td>
								<td>MSH.4 + "-" + MSH.10 Message Control ID</td>
								<td>MSH.4 + "-" + MSH.10 concatenated</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Body /eb:Manifest/eb:Reference/hl7ebxml:Payload/@style</td>
								<td>"HL7"</td>
								<td>&nbsp;</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Body /eb:Manifest/eb:Reference/hl7ebxml:Payload/@encoding</td>
								<td>"Delimited" or "XML"</td>
								<td>Based on actual encoding.</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Body /eb:Manifest/eb:Reference/hl7ebxml:Payload/@version</td>
								<td>MSH.12 Version ID</td>
								<td>&nbsp;</td>
							</tr>
						</tbody>
					</table>
				</p>
				<p>
					<emph role="strong">HL7 Version 3 Messages</emph>.  Note all elements are direct children of the hl7:Message element.
					<table>
						<thead>
							<tr>
								<th>Element/Attribute</th>
								<th>Message Source</th>
								<th>Notes</th>
							</tr>
						</thead>
						<tbody>
							<tr>
								<td>/SOAP:Envelope/SOAP:Header /eb:MessageHeader/eb:From/eb:PartyId</td>
								<td>&lt;sender&gt;&lt;device&gt;&lt;id&gt; root attribute [+ "-" + extension attribute]</td>
								<td>OID [+ "-" + Extension] concatenated</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Header /eb:MessageHeader/eb:To/eb:PartyId</td>
								<td>&lt;receiver&gt;&lt;device&gt;&lt;id&gt; root attribute [+ "-" + extension attribute]</td>
								<td>OID [+ "-" + Extension] concatenated</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Header /eb:MessageHeader/eb:Service</td>
								<td>
									<emph>urn:services:HL7MessageProcessing</emph>
								</td>
								<td>&nbsp;</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Header /eb:MessageHeader/eb:Action</td>
								<td>Root name</td>
								<td>String, e.g. "POLB_IN004410"</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Header /eb:MessageHeader/eb:MessageData/eb:MessageId</td>
								<td>&lt;id&gt; root attribute [+ "-" + extension attribute]</td>
								<td>OID [+ "-" + Extension] concatenated</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Body /eb:Manifest/eb:Reference/hl7ebxml:Payload/@style</td>
								<td>"HL7"</td>
								<td>&nbsp;</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Body /eb:Manifest/eb:Reference/hl7ebxml:Payload/@encoding</td>
								<td>"XML"</td>
								<td>Based on actual encoding.</td>
							</tr>
							<tr>
								<td>/SOAP:Envelope/SOAP:Body /eb:Manifest/eb:Reference/hl7ebxml:Payload/@version</td>
								<td>&lt;versionCode&gt; code attribute</td>
								<td>&nbsp;</td>
							</tr>
						</tbody>
					</table>
				</p>
			</div2>
			<div2 id="ebXMLmessageDocNotes">
				<head>Document Notes</head>
				<p>
					Reliance upon schema location hints when provided in the message may present a potential security risk therefore message senders should not include them in messages and SOAP and ebXML processors are encouraged to ignore them unless the URI provided matches the URI specified in their respective specifications.
				</p>
				<p>
					The examples provided are based on HL7 ballot #6 (December 2003) and therefore do not necessarily reflect the current message standard.
				</p>
				<p>
					XML language encoding is a trading partner issue and therefore the document XML encoding is left to trading partners to determine even though the examples provided in the appendixes show UTF-8.  
				</p>
			</div2>
			<div2 id="ebXMLmessageSamples">
				<head>Sample Messages</head>
				<p>
					The following sections contain sample messages to illustrate the construction of ebXML messages with both HL7 version 2 and version 3 payloads, as well as with xml and non-xml payloads.
					<table>
						<thead>
							<tr>
								<th>Sample</th>
								<th>Title</th>
								<th>Notes</th>
							</tr>
						</thead>
						<tbody>
							<tr>
								<td>1</td>
								<td>HL7 Version 2 Sample Message</td>
								<td>HL7 Version 2 Admit Notification application message which requests an unsigned ebXML Acknowledgment from the interface which receives this message.</td>
							</tr>
							<tr>
								<td>2</td>
								<td>HL7 Version 2 Sample ebXML Acknowledgment</td>
								<td>The unsigned ebXML Acknowlegement message from the receiver of the above message.</td>
							</tr>
							<tr>
								<td>3</td>
								<td>HL7 Version 2 Sample Application Response Message</td>
								<td>HL7 Version 2 Lab response application message which requests an unsigned ebXML Acknowledgment from the interface which receives this message.</td>
							</tr>
							<tr>
								<td>4</td>
								<td>HL7 Version 3 Sample Message</td>
								<td>HL7 Version 3 Admit Notification application message which requests an unsigned ebXML Acknowledgment from the interface which receives this message.</td>
							</tr>
							<tr>
								<td>5</td>
								<td>HL7 Version 2 Sample Message with Signature</td>
								<td>HL7 Version 2 Admit Notification application message which requests a signed ebXML Acknowledgment from the interface which receives this message.</td>
							</tr>
							<tr>
								<td>6</td>
								<td>HL7 Version 2 Sample ebXML Acknowledgment with Error</td>
								<td>An unsigned ebXML Acknowlegement message which reports errors in the received message.</td>
							</tr>
						</tbody>
					</table>
				</p>
				<div3 id="ebXMLmessageSamplesV2">
					<head>HL7 Version 2 Sample Message</head>
					<p>
						<exhibit role="example" id="Sample1">
							<pre>
								<p>
SOAPAction: "ebXML"
Content-Type: multipart/related; boundary="MIME_boundary"; type="text/xml";
start="ebhmheader@example.com"
								
--MIME_boundary
Content-ID: &lt;ebhmheader@example.com&gt;
Content-Type: text/xml; charset = "UTF-8"
								
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;SOAP:Envelope 
  xmlns:SOAP="http://schemas.xmlsoap.org/soap/envelope/"
  xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:hl7ebxml="urn:hl7-org:transport/ebXML/DSTUv1.0"&gt;
  &lt;SOAP:Header&gt;
     &lt;eb:MessageHeader version="2.0" SOAP:mustUnderstand="1"&gt;
		&lt;eb:From&gt;
		&lt;eb:PartyId eb:type="localid"&gt;MCM&lt;/eb:PartyId&gt;
 	&lt;/eb:From&gt;
 	&lt;eb:To&gt;
		&lt;eb:PartyId eb:type="localid"&gt;XYZ&lt;/eb:PartyId&gt;
 	&lt;/eb:To&gt;
	&lt;eb:CPAId&gt;MCM-XYZ&lt;/eb:CPAId&gt;
	&lt;eb:ConversationId&gt;20001215-133003-28572&lt;/eb:ConversationId&gt;
	&lt;eb:Service&gt;urn:services:HL7MessageProcessing&lt;/eb:Service&gt;
	&lt;eb:Action&gt;ADT_A01&lt;/eb:Action&gt;
		&lt;eb:MessageData&gt;
		&lt;eb:MessageId&gt;MCM-MSG00001&lt;/eb:MessageId&gt;
			&lt;eb:Timestamp&gt;2001-02-15T11:17:00Z&lt;/eb:Timestamp&gt;
		&lt;/eb:MessageData&gt;
	&lt;eb:SyncReply eb:version="2.0" SOAP:mustUnderstand="1" 
SOAP:actor="http://schemas.xmlsoap.org/soap/actor/next"/&gt;
	&lt;eb:DuplicateElimination/&gt;
&lt;eb:AckRequested SOAP:mustUnderstand="1" eb:version="2.0" 
eb:signed="false" eb:actor="urn:oasis:names:tc:ebxml-msg:actor:nextMSH"/&gt;
    	&lt;/eb:MessageHeader&gt;
  &lt;/SOAP:Header&gt;
  &lt;SOAP:Body&gt;
&lt;eb:Manifest eb:version="2.0"&gt;
	&lt;eb:Reference xlink:href="cid:ebxmlpayload01@example.com"&gt;
		&lt;eb:Description xml:lang="en-us"&gt;Admit Notification1&lt;/eb:Description&gt;
		&lt;hl7ebxml:Payload style="HL7" encoding="Delimited" version="2.4"/&gt;
		&lt;/eb:Reference&gt;
	&lt;/eb:Manifest&gt;
  &lt;/SOAP:Body&gt;
&lt;/SOAP:Envelope&gt;
								
--MIME_boundary
Content-ID: &lt;ebxmlpayload01@example.com&gt;
Content-Type: text/plain; charset = "UTF-8"
								
MSH|^~\&amp;|ADT1|MCM|LABADT|XYZ|200102151112|SECURITY|ADT^A01^ADT_A01|MSG00001­|P|2.4|12345678||AL|NE&lt;cr&gt;
EVN|A01|200102091109||&lt;cr&gt;
PID|1||PATID1234^5^M11^ADT1^MR^MCM~123456789^^^USSSA^SS||JONES^WILLIAM^A^III||19610615|M­||C|
1200 N ELM STREET^^GREENSBORO^NC^27401-1020|GL|(919)379-1212|(919)271-3434||S||
PATID12345001^2^M10^ADT1^AN^A|123456789|9­87654^NC|&lt;cr&gt;
NK1|1|JONES^BARBARA^K|WI^WIFE||||NK^NEXT OF KIN&lt;cr&gt;
PV1|1|I|2000^2012^01||||004777^LEBAUER^SIDNEY^J.|||SUR||­||ADM|A0­|&lt;cr&gt;
								
--MIME_boundary--
</p>
							</pre>
						</exhibit>
					</p>
				</div3>
				<div3 id="ebXMLmessageSampleAck">
					<head>HL7 Version 2 Sample ebXML Acknowledgment</head>
					<p>
						<exhibit role="example" id="Sample2">
							<pre>
								<p>
SOAPAction: "ebXML"
Content-Type: multipart/related; boundary="MIME_boundary"; type="text/xml";
start="ebhmheader@example.com"
								
--MIME_boundary
Content-ID: &lt;ebhmheader@example.com&gt;
Content-Type: text/xml; charset = "UTF-8"
								
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;SOAP:Envelope 
  xmlns:SOAP="http://schemas.xmlsoap.org/soap/envelope/"
  xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:hl7ebxml="urn:hl7-org:transport/ebXML/DSTUv1.0"&gt;
  &lt;SOAP:Header&gt;
     &lt;eb:MessageHeader version="2.0" SOAP:mustUnderstand="1"&gt;
		&lt;eb:From&gt;
		&lt;eb:PartyId eb:type="localid"&gt;XYZ&lt;/eb:PartyId&gt;
 	&lt;/eb:From&gt;
 	&lt;eb:To&gt;
		&lt;eb:PartyId eb:type="localid"&gt;MCM&lt;/eb:PartyId&gt;
 	&lt;/eb:To&gt;
	&lt;eb:CPAId&gt;MCM-XYZ&lt;/eb:CPAId&gt;
	&lt;eb:ConversationId&gt;20010215-133003-28572&lt;/eb:ConversationId&gt;
	&lt;eb:Service&gt;urn:oasis:names:tc:ebxml-msg:service&lt;/eb:Service&gt;
	&lt;eb:Action&gt;Acknowledgment&lt;/eb:Action&gt;
		&lt;eb:MessageData&gt;
		&lt;eb:MessageId&gt;XYZ-20010215-111800-12345&lt;/eb:MessageId&gt;
			&lt;eb:Timestamp&gt;2001-02-15T11:12:00Z&lt;/eb:Timestamp&gt;
		&lt;eb:RefToMessageId&gt;MCM-MSG00001&lt;/eb:RefToMessageId&gt;
		&lt;/eb:MessageData&gt;
	&lt;eb:DuplicateElimination/&gt;
    	&lt;/eb:MessageHeader&gt;
&lt;eb:Acknowledgment
	SOAP:mustUnderstand="1"
	eb:version="2.0"
	SOAP:actor="urn:oasis:names:tc:ebxml-msg:actor:nextMSH"&gt;
	&lt;eb:Timestamp&gt;2001-02-15T11:17:00Z&lt;/eb:Timestamp&gt;
	&lt;eb:From&gt;
		&lt;eb:PartyId&gt;XYZ&lt;/eb:PartyId&gt;
	&lt;/eb:From&gt;
&lt;/eb:Acknowledgment&gt;
  &lt;/SOAP:Header&gt;
  &lt;SOAP:Body&gt;
  &lt;/SOAP:Body&gt;
&lt;/SOAP:Envelope&gt;
								
--MIME_boundary--
								
							</p>
							</pre>
						</exhibit>
					</p>
				</div3>
				<div3 id="ebXMLmessageSampleRespone">
					<head>HL7 Version 2 Sample Application Response Message</head>
					<p>
						<exhibit role="example" id="Sample3">
							<pre>
								<p>
SOAPAction: "ebXML"
Content-Type: multipart/related; boundary="MIME_boundary"; type="text/xml";
start="ebhmheader@example.com"
								
--MIME_boundary
Content-ID: &lt;ebhmheader@example.com&gt;
Content-Type: text/xml; charset = "UTF-8"
								
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;SOAP:Envelope 
  xmlns:SOAP="http://schemas.xmlsoap.org/soap/envelope/"
  xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:hl7ebxml="urn:hl7-org:transport/ebXML/DSTUv1.0"&gt;
  &lt;SOAP:Header&gt;
     &lt;eb:MessageHeader version="2.0" SOAP:mustUnderstand="1"&gt;
		&lt;eb:From&gt;
		&lt;eb:PartyId eb:type="localid"&gt;XYZ&lt;/eb:PartyId&gt;
 	&lt;/eb:From&gt;
 	&lt;eb:To&gt;
		&lt;eb:PartyId eb:type="localid"&gt;MCM&lt;/eb:PartyId&gt;
 	&lt;/eb:To&gt;
	&lt;eb:CPAId&gt;MCM-XYZ&lt;/eb:CPAId&gt;
	&lt;eb:ConversationId&gt;20010215-133003-28572&lt;/eb:ConversationId&gt;
	&lt;eb:Service&gt;urn:services:HL7MessageProcessing&lt;/eb:Service&gt;
	&lt;eb:Action&gt;ACK&lt;/eb:Action&gt;
		&lt;eb:MessageData&gt;
		&lt;eb:MessageId&gt;XYZ-LAB00001&lt;/eb:MessageId&gt;
			&lt;eb:Timestamp&gt;2001-02-15T11:16:00Z&lt;/eb:Timestamp&gt;
		&lt;eb:RefToMessageId&gt;MCM-MSG00001&lt;/eb:RefToMessageId&gt;
		&lt;/eb:MessageData&gt;
	&lt;eb:DuplicateElimination/&gt;
&lt;eb:AckRequested SOAP:mustUnderstand="1" eb:version="2.0" 
eb:signed="false" eb:actor="urn:oasis:names:tc:ebxml-msg:actor:nextMSH"/&gt;
    	&lt;/eb:MessageHeader&gt;
  &lt;/SOAP:Header&gt;
  &lt;SOAP:Body
        xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"&gt;
&lt;eb:Manifest eb:version="2.0"&gt;
	&lt;eb:Reference xlink:href="cid:ebxmlpayload01@example.com"&gt;
		&lt;eb:Description xml:lang="en-us"&gt;Acknowledge Admit Notification1&lt;/eb:Description&gt;
		&lt;hl7ebxml:Payload style="HL7" encoding="Delimited" version="2.4"/&gt;
		&lt;/eb:Reference&gt;
	&lt;/eb:Manifest&gt;
  &lt;/SOAP:Body&gt;
&lt;/SOAP:Envelope&gt;
								
--MIME_boundary
Content-ID: &lt;ebxmlpayload01@example.com&gt;
Content-Type: text/plain; charset = "UTF-8"
								
MSH|^~\&amp;|LABADT|XYZ|ADT1|MCM|200102151113|SECURITY|ACK^A01^ACK|LAB00001­|P|2.4|12345678||NE|NE&lt;cr&gt;
MSA|CA|MSG00001&lt;cr&gt;
								
--MIME_boundary--
								
							</p>
							</pre>
						</exhibit>
					</p>
				</div3>
				<div3 id="ebXMLmessageSampleV3">
					<head>HL7 Version 3 Sample Message</head>
					<p>
						<exhibit role="example" id="Sample4">
							<pre>
								<p>
SOAPAction: "ebXML"
Content-Type: multipart/related; boundary="MIME_boundary"; type="text/xml";
start="ebhmheader@example.com"
								
--MIME_boundary
Content-ID: &lt;ebhmheader@example.com&gt;
Content-Type: text/xml; charset = "UTF-8"
								
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;SOAP:Envelope 
  xmlns:SOAP="http://schemas.xmlsoap.org/soap/envelope/"
  xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:hl7ebxml="urn:hl7-org:transport/ebXML/DSTUv1.0"&gt;
  &lt;SOAP:Header&gt;
     &lt;eb:MessageHeader version="2.0" SOAP:mustUnderstand="1"&gt;
		&lt;eb:From&gt;
		&lt;eb:PartyId eb:type="urn:isooid"&gt;2.16.840.1.113883.2.4.99.1-700222&lt;/eb:PartyId&gt;
 	&lt;/eb:From&gt;
 	&lt;eb:To&gt;
		&lt;eb:PartyId eb:type="urn:isooid"&gt;2.16.840.1.113883.2.4.99.1-700856&lt;/eb:PartyId&gt;
 	&lt;/eb:To&gt;
	&lt;eb:CPAId&gt;HL7V3&lt;/eb:CPAId&gt;
	&lt;eb:ConversationId&gt;20030718-161000&lt;/eb:ConversationId&gt;
	&lt;eb:Service&gt;urn:services:HL7MessageProcessing&lt;/eb:Service&gt;
	&lt;eb:Action&gt;PORX_IN932000NL&lt;/eb:Action&gt;
		&lt;eb:MessageData&gt;
		&lt;eb:MessageId&gt;2.16.840.1.113883.2.4.99.1.700222.1-34234&lt;/eb:MessageId&gt;
			&lt;eb:Timestamp&gt;2003-07-18T16:10:00.16Z+01&lt;/eb:Timestamp&gt;
		&lt;/eb:MessageData&gt;
	&lt;eb:SyncReply eb:version="2.0" SOAP:mustUnderstand="1" 
SOAP:actor="http://schemas.xmlsoap.org/soap/actor/next"/&gt;
	&lt;eb:DuplicateElimination/&gt;
&lt;eb:AckRequested SOAP:mustUnderstand="1" eb:version="2.0" 
eb:signed="false" eb:actor="urn:oasis:names:tc:ebxml-msg:actor:nextMSH"/&gt;
    	&lt;/eb:MessageHeader&gt;
  &lt;/SOAP:Header&gt;
  &lt;SOAP:Body&gt;
&lt;eb:Manifest eb:version="2.0"&gt;
	&lt;eb:Reference xlink:href="cid:ebxmlpayload01@example.com"&gt;
		&lt;eb:Description xml:lang="en-us"&gt;Observation Message&lt;/eb:Description&gt;
		&lt;hl7ebxml:Payload style="HL7" encoding="XML" version="V3PR1"/&gt;
		&lt;/eb:Reference&gt;
	&lt;/eb:Manifest&gt;
  &lt;/SOAP:Body&gt;
&lt;/SOAP:Envelope&gt;
								
--MIME_boundary
Content-ID: &lt;ebxmlpayload01@example.com&gt;
Content-Type: application/xml; charset = "UTF-8"
								
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;PORX_IN932000NL xmlns="urn:hl7-org:v3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="urn:hl7-org:v3 PORX_IN932000NL.xsd"&gt;
	&lt;id extension="34234" root="2.16.840.1.113883.2.4.99.1.700222.1"/&gt;
	&lt;creationTime value="20030718161000"/&gt;
	&lt;versionCode code="V3PR1"/&gt;
	&lt;interactionId extension="PORX_IN932000NL" root="2.16.840.1.113883"/&gt;
	&lt;processingCode code="P"/&gt;
	&lt;processingModeCode code="T"/&gt;
	&lt;acceptAckCode code="NE"/&gt;	
	&lt;controlActProcess moodCode="RQO"&gt;
		&lt;!-- message payload --&gt;
		...
	&lt;/controlActProcess&gt;
								
	&lt;receiver typeCode="RCV"&gt;
		&lt;telecom use="WP" value="tel:+31303248724"/&gt;	
		&lt;device classCode="DEV" determinerCode="INSTANCE"&gt;
			&lt;!-- receiving application, ID of receiving system --&gt;
			&lt;id  extension="700856" root="2.16.840.1.113883.2.4.99.1"/&gt;
			&lt;name use="L"&gt;
				&lt;given&gt;ZIM&lt;/given&gt;
			&lt;/name&gt;
			&lt;agencyFor classCode="AGNT"&gt;
				&lt;representedOrganization classCode="ORG" determinerCode="INSTANCE"&gt;
				&lt;id  extension="100100" root="2.16.840.1.113883.2.4.99.1"/&gt;			
					&lt;name use="L"&gt;
						&lt;given&gt;ZIM Beheersorganisatie Regio Utrecht&lt;/given&gt;
					&lt;/name&gt;
				&lt;/representedOrganization&gt;
			&lt;/agencyFor&gt;
		&lt;/device&gt;
	&lt;/receiver&gt;
								
	&lt;sender typeCode="SND"&gt;
		&lt;telecom use="WP" value="tel:+31307236354"/&gt;
		&lt;device classCode="DEV" determinerCode="INSTANCE"&gt;
			&lt;!-- sending application, ID of sending system --&gt;
			&lt;id extension="700222" root="2.16.840.1.113883.2.4.99.1"/&gt;
			&lt;name use="L"&gt;
				&lt;given&gt;ABC-ZIS/St.Jozef Ziekenhuis&lt;/given&gt;
			&lt;/name&gt;
			&lt;agencyFor classCode="AGNT"&gt;
				&lt;representedOrganization classCode="ORG" determinerCode="INSTANCE"&gt;
					&lt;id extension="600862" root="2.16.840.1.113883.2.4.99.1"/&gt;
						&lt;name use="L"&gt;
							&lt;given&gt;St.Jozef Ziekenhuis&lt;/given&gt;
						&lt;/name&gt;
				&lt;/representedOrganization&gt;
			&lt;/agencyFor&gt;
		&lt;/device&gt;
	&lt;/sender&gt;
								
&lt;/PORX_IN932000NL&gt;
								
--MIME_boundary--
								
							</p>
							</pre>
						</exhibit>
					</p>
				</div3>
				<div3 id="ebXMLmessageSampleSignature">
					<head>HL7 Version 2 Sample With Signature</head>
					<p>
						<exhibit role="example" id="Sample5">
							<pre>
								<p>
SOAPAction: "ebXML"
Content-Type: multipart/related; boundary="MIME_boundary"; type="text/xml";
start="ebhmheader@example.com"
								
--MIME_boundary
Content-ID: &lt;ebhmheader@example.com&gt;
Content-Type: text/xml; charset = "UTF-8"
								
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;SOAP:Envelope 
  xmlns:SOAP="http://schemas.xmlsoap.org/soap/envelope/"
  xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:hl7ebxml="urn:hl7-org:transport/ebXML/DSTUv1.0"&gt;
  &lt;SOAP:Header&gt;
     &lt;eb:MessageHeader version="2.0" SOAP:mustUnderstand="1"&gt;
		&lt;eb:From&gt;
		&lt;eb:PartyId eb:type="localid"&gt;MCM&lt;/eb:PartyId&gt;
 	&lt;/eb:From&gt;
 	&lt;eb:To&gt;
		&lt;eb:PartyId eb:type="localid"&gt;XYZ&lt;/eb:PartyId&gt;
 	&lt;/eb:To&gt;
	&lt;eb:CPAId&gt;MCM-XYZ&lt;/eb:CPAId&gt;
	&lt;eb:ConversationId&gt;20010215-133003-28572&lt;/eb:ConversationId&gt;
	&lt;eb:Service&gt;urn:services:HL7MessageProcessing&lt;/eb:Service&gt;
	&lt;eb:Action&gt;ADT_A01&lt;/eb:Action&gt;
		&lt;eb:MessageData&gt;
		&lt;eb:MessageId&gt;MCM-MSG00001&lt;/eb:MessageId&gt;
			&lt;eb:Timestamp&gt;2001-02-15T11:14:00Z&lt;/eb:Timestamp&gt;
		&lt;/eb:MessageData&gt;
	&lt;eb:SyncReply eb:version="2.0" SOAP:mustUnderstand="1" 
SOAP:actor="http://schemas.xmlsoap.org/soap/actor/next"/&gt;
	&lt;eb:DuplicateElimination/&gt;
&lt;eb:AckRequested SOAP:mustUnderstand="1" eb:version="2.0" 
eb:signed="true" eb:actor="urn:oasis:names:tc:ebxml-msg:actor:nextMSH"/&gt;
    	&lt;/eb:MessageHeader&gt;
&lt;Signature xmlns="http://www.w3.org/2000/09/xmldsig#"&gt;
	   &lt;SignedInfo&gt;
      &lt;CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/&gt;
      &lt;SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#dsa-sha1"/&gt;
      &lt;Reference URI=""&gt;
	  &lt;Transforms&gt;
	     &lt;Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/&gt;
	     &lt;Transform Algorithm="http://www.w3.org/TR/1999/REC-xpath-19991116"&gt;
		  &lt;XPath&gt; not(ancestor-or-self::node()[@SOAP:actor=
		    &quot;urn:oasis:names:tc:ebxml-msg:actor:nextMSH&quot;]
		    | ancestor-or-self::node()[@SOAP:actor=
		    &quot;http://schemas.xmlsoap.org/soap/actor/next&quot;])
		  &lt;/XPath&gt;
	     &lt;/Transform&gt;
	     &lt;Transform Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/&gt;
	  &lt;/Transforms&gt;
	  &lt;DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/&gt;
	  &lt;DigestValue&gt;...&lt;/DigestValue&gt;
       	&lt;/Reference&gt;
	&lt;Reference URI="cid:ebxmlpayload01@example.com"&gt;
	  &lt;DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/&gt;
	  &lt;DigestValue&gt;...&lt;/DigestValue&gt;
	&lt;/Reference&gt;
   &lt;/SignedInfo&gt;
   &lt;SignatureValue&gt;...&lt;/SignatureValue&gt;
   &lt;KeyInfo&gt;...&lt;/KeyInfo&gt;
&lt;/Signature&gt;
  &lt;/SOAP:Header&gt;
  &lt;SOAP:Body&gt;
&lt;eb:Manifest eb:version="2.0"&gt;
	&lt;eb:Reference xlink:href="cid:ebxmlpayload01@example.com"&gt;
		&lt;eb:Description xml:lang="en-us"&gt;Admit Notification1&lt;/eb:Description&gt;
		&lt;hl7ebxml:Payload style="HL7" encoding="Delimited" version="2.4"/&gt;
		&lt;/eb:Reference&gt;
	&lt;/eb:Manifest&gt;
  &lt;/SOAP:Body&gt;
&lt;/SOAP:Envelope&gt;
								
--MIME_boundary
Content-ID: &lt;ebxmlpayload01@example.com&gt;
Content-Type: text/plain; charset = "UTF-8"
								
MSH|^~\&amp;|ADT1|MCM|LABADT|XYZ|200102151112|SECURITY|ADT^A01^ADT_A01|MSG00001­|P|2.4|12345678||AL|NE&lt;cr&gt;
EVN|A01|200102091109||&lt;cr&gt;
PID|1||PATID1234^5^M11^ADT1^MR^MCM~123456789^^^USSSA^SS||JONES^WILLIAM^A^III||19610615|M||C|
1200 N ELM STREET^^GREENSBORO^NC^27401-1020|GL|(919)379-1212|(919)271-3434||S||
PATID12345001^2^M10^ADT1^AN^A|123456789|987654^NC|&lt;cr&gt;
NK1|1|JONES^BARBARA^K|WI^WIFE||||NK^NEXT OF KIN&lt;cr&gt;
PV1|1|I|2000^2012^01||||004777^LEBAUER^SIDNEY^J.|||SUR||||ADM|A0|&lt;cr&gt;
								
--MIME_boundary-- 
								
							</p>
							</pre>
						</exhibit>
					</p>
				</div3>
				<div3 id="ebXMLmessageSampleAckError">
					<head>HL7 Version 2 Sample ebXML Acknowledgment with Error</head>
					<p>
						<exhibit role="example" id="Sample6">
							<pre>
								<p>
SOAPAction: "ebXML"
Content-Type: multipart/related; boundary="MIME_boundary"; type="text/xml";
start="ebhmheader@example.com"
								
--MIME_boundary
Content-ID: &lt;ebhmheader@example.com&gt;
Content-Type: text/xml; charset = "UTF-8"
								
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;SOAP:Envelope 
  xmlns:SOAP="http://schemas.xmlsoap.org/soap/envelope/"
  xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:hl7ebxml="urn:hl7-org:transport/ebXML/DSTUv1.0"&gt;
  &lt;SOAP:Header&gt;
     &lt;eb:MessageHeader version="2.0" SOAP:mustUnderstand="1"&gt;
		&lt;eb:From&gt;
		&lt;eb:PartyId eb:type="localid"&gt;XYZ&lt;/eb:PartyId&gt;
 	&lt;/eb:From&gt;
 	&lt;eb:To&gt;
		&lt;eb:PartyId eb:type="localid"&gt;MCM&lt;/eb:PartyId&gt;
 	&lt;/eb:To&gt;
	&lt;eb:CPAId&gt;MCM-XYZ&lt;/eb:CPAId&gt;
	&lt;eb:ConversationId&gt;20010215-133003-28572&lt;/eb:ConversationId&gt;
	&lt;eb:Service&gt;urn:oasis:names:tc:ebxml-msg:service&lt;/eb:Service&gt;
	&lt;eb:Action&gt;Acknowledgment&lt;/eb:Action&gt;
		&lt;eb:MessageData&gt;
		&lt;eb:MessageId&gt;XYZ-20010215-111800-12345&lt;/eb:MessageId&gt;
			&lt;eb:Timestamp&gt;2001-02-15T11:12:00Z&lt;/eb:Timestamp&gt;
		&lt;eb:RefToMessageId&gt;MCM-MSG00001&lt;/eb:RefToMessageId&gt;
		&lt;/eb:MessageData&gt;
	&lt;eb:DuplicateElimination/&gt;
    	&lt;/eb:MessageHeader&gt;
&lt;eb:Acknowledgment
	SOAP:mustUnderstand="1"
	eb:version="2.0"
	SOAP:actor="urn:oasis:names:tc:ebxml-msg:actor:nextMSH"&gt;
	&lt;eb:Timestamp&gt;2001-02-15T11:17:00Z&lt;/eb:Timestamp&gt;
	&lt;eb:From&gt;
		&lt;eb:PartyId&gt;XYZ&lt;/eb:PartyId&gt;
	&lt;/eb:From&gt;
&lt;/eb:Acknowledgment&gt;
&lt;eb:ErrorList eb:highestSeverity="error" eb:version="2.0" SOAP:mustUnderstand="1"&gt;
&lt;eb:Error eb:errorCode="DeliveryFailure" eb:severity="error" eb:location="URI of eb:From"&gt;
&lt;eb:Description xml:lang="en-US"&gt;Unsupported message sender&lt;/eb:Description&gt;
&lt;/eb:Error&gt;   
&lt;/eb:ErrorList&gt;
  &lt;/SOAP:Header&gt;
  &lt;SOAP:Body&gt;
  &lt;/SOAP:Body&gt;
&lt;/SOAP:Envelope&gt;
								
--MIME_boundary--
								
							</p>
							</pre>
						</exhibit>
					</p>
				</div3>
			</div2>
		</div1>
		<div1 id="Appendex1">
			<head>Appendex 1</head>
			<p>Trading partners may select from any of the lower level transports detailed in this section to exchange ebXML messages.</p>
			<div2 id="HTTPTransport">
				<head>HTTP Transport</head>
				<p>For specifications on the use of HTTP for the exchange of ebXML messages refer to the ebXML "Message Service Specification Version 2.0 1 April 2002" Appendix B.2.</p>
			</div2>
			<div2 id="SMTPTransport">
				<head>SMTP Transport</head>
				<p>For specifications on the use of SMTP for the exchange of ebXML messages refer to the ebXML "Message Service Specification Version 2.0 1 April 2002" Appendix B.2.</p>
			</div2>
			<div2 id="SimpleSecureAuthTCPTransport">
				<head>Simple Secure Authenticated TCP Transport</head>
				<div3 id="SimpleSecureTCP">
					<head>Simple TCP and Secure TCP</head>
					<p>
					Message exchange may occur over either a simple non-encrypted TCP session or over an encrypted TCP session where either end of the connection may authenticate the identity of the other end.  The following sections describe the establishment of the connection, and the recommended ports, key length, and authentication requirements.
				</p>
					<p>
					When communicating over a secure network the use of encryption, minimum encryption strength and use of authentication is optional.  While communicating parties must respect national/regional legislation and existing agreements the use of encryption, minimum encryption strength and authentication is recommended when communicating over non-secure networks.
				</p>
				</div3>
				<div3 id="SettingUpTCPIP">
					<head>Setting up the TCP/IP connection</head>
					<p>
					In order to establish the TCP/IP connection for message exchange the connection initiator must know the IP address or DNS name of the responding connection and the responder's listening port number.  The responder connection must already be listening for connections from initiators.  The initiating connection contacts the responder's listening port and requests a connection, which is either refused by the responder, or acknowledged by the responder which also supplies a new unique port number for the connection.  The initiator then contacts the indicated new port and completes the connection.
				</p>
					<p>
					If a secure connection, TLS or SSL, is being established then the connections negotiate an encryption algorithm.  The responder then sends its certificate, excluding its private key, to the initiator for acceptance and optionally requests the same from the initiator.  If the initiator's certificate is requested then it is sent to the responder for acceptance.  The connections then exchange a session key, encrypted with the public key of the receiving party, which is used to encrypt messages sent to the other connection.
<graphic source="ebXMLfig5.jpg" xlink-form="simple" xml:attributes="href source" show="embed" actuate="auto"/>
						<br/>
						<emph role="strong">Figure 5 Setting up the TCP/IP connection using TLS/SSL</emph>
					</p>
				</div3>
				<div3 id="TCPIPConnParams">
					<head>TCP/IP connection parameters</head>
					<p>
					The table below provides recommendations for encryption and authentication for Public and Private non-secure connections.  Encryption and authentication of connections over secure lines is optional, and therefore the use of certificates and the table rows below pertaining to certificates and digital signatures need not apply over connections which are otherwise deemed secure.
					<table>
							<thead>
								<tr>
									<th>&nbsp;</th>
									<th>Initiator</th>
									<th>Responder</th>
								</tr>
							</thead>
							<tbody>
								<tr>
									<td>IP address / DNS name</td>
									<td>Any including derived from Network Address Translation</td>
									<td>Any, must resolve to a legal Internet address for Public access</td>
								</tr>
								<tr>
									<td>IP Port</td>
									<td>Any.</td>
									<td>Any, trading partner agreed.443 in the absence of alternative.</td>
								</tr>
								<tr>
									<td>Encryption protocol</td>
									<td>TLS 1.0 or SSL 3.0</td>
									<td>TLS 1.0 and SSL 3.0</td>
								</tr>
								<tr>
									<td>Certificate (X.509)</td>
									<td>Optional, recommended</td>
									<td>Required</td>
								</tr>
								<tr>
									<td>Minimum Public Key Length</td>
									<td>1024 bits</td>
									<td>1024 bits</td>
								</tr>
								<tr>
									<td>Minimum Session Key Length</td>
									<td>128 Bits</td>
									<td>128 Bits</td>
								</tr>
								<tr>
									<td>Digital Signing of Messages</td>
									<td>Optional, trading partner agreement.</td>
									<td>Optional, trading partner agreement.</td>
								</tr>
								<tr>
									<td>Digital Signing of ebXML Acknowledgments</td>
									<td>Optional, trading partner agreement</td>
									<td>Optional, trading partner agreement</td>
								</tr>
							</tbody>
						</table>
					</p>
					<p>
					When using X.509 certificates for authentication the Certificate Authority and Certificate Name structure must be agreed by trading partners.
				</p>
					<p>
					A TCP responder interface will be required to support both SSL 3.0 and TLS 1.0 message encryption, initiator interfaces are required to support either SSL 3.0 or TLS 1.0.  
				</p>
					<p>
					Where mutual authentication is agreed by trading partners both initiators and responders are required to have X.509 certificates, with a minimum Key Length of 1024 Bits, issued by an agreed Certificate Authority(s) and using an agreed Certificate Name structure such that either party can confirm the identify of the other within the concept of ‘identity’ for the message exchange domain.  Both parties are required to confirm the identity of the other party as a legitimate member of the message exchange domain before exchanging messages, and are required to drop or refuse the connection if the party on the other end of the connection is deemed not to be legitimate.
				</p>
					<p>
					The initiator interface is required to have a lookup mechanism to determine: the DNS name or IP address and IP port of the target Responder; the initiator certificate based on the ‘/SOAP:Envelope/SOAP:Header/eb:MessageHeader/eb:From/eb:PartyId’ element contents; and, expected responder certificate name contents of the message target based on the ‘/SOAP:Envelope/SOAP:Header/eb:MessageHeader/eb:To/eb:PartyId’ element contents.
				</p>
				</div3>
			</div2>
		</div1>
	</body>
</spec>
