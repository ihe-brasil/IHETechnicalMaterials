<!-- $Id: mIntCategory.cls,v 1.4 2007/11/18 02:48:41 wbeeler Exp $ -->
<!--<!DOCTYPE spec PUBLIC "DTDVersion-4" "../../support/dtd/v3mDomain.dtd">-->
<spec id="MCAI_DO000000UV-ic" sectionCode="IMMCAI" lastEdit="6/20/2005 6:46:43 PM" rendered="5/30/2008 12:30:57 PM"><header><title>Domain: Message Control Act Infrastructure</title><version>V 00-00</version><ballot type="NormativeStandard" number="1"/><date>5/30/2008</date><authlist><author><role>Control Query Co-Chair</role><name key="Grieve, Graham">Graham Grieve</name><affiliation>Kestral Computing Pty Ltd.</affiliation></author><author><role>Control Query Co-Chair</role><name key="Henderson, Mike">Mike Henderson</name><affiliation>Eastern Informatics</affiliation></author><author><role>Control Query Co-Chair</role><name key="Larson, Joann">Joann Larson</name><affiliation>Kaiser Permanente</affiliation></author><author><role>Primary Contributor</role><name key="Nelson, Dale">Dale Nelson</name><affiliation>Zed-Logic Informatics, LLC</affiliation></author><author><role>Control Query Co-Chair</role><name key="Puyenbroek, Jennifer">Jennifer Puyenbroek</name><affiliation>McKesson Information Solutions</affiliation></author><author><role>Primary Contributor</role><name key="Reis, Larry">Larry Reis</name><affiliation>LR Consulting</affiliation></author><author><role>Primary Contributor</role><name key="Shafarman, Mark">Mark Shafarman</name><affiliation>Oracle Corporation</affiliation></author><author><role>Control Query Co-Chair</role><name key="Spronk, Rene">Rene Spronk</name><affiliation>Ringholm GmbH</affiliation></author><author><role>Primary Contributor</role><name key="Tucker, Mark">Mark Tucker</name><affiliation>Regenstrief Institute for Health Care</affiliation></author></authlist><legalese copyRightDate="2008" copyRightOwner="Health Level Seven, Inc." copyRightNotation="All rights reserved." renderer="RoseTree 4.2.6" renderNotation="This document was rendered into XML using software provided to HL7 by Beeler Consulting LLC." contactEmail="HQ@HL7.org" contactName="HL7 Headquarters Staff" contactNote="Comments or questions about this document may be may be addressed to:"/></header><front><div1 id="prefNotes"><head>Notes to Readers</head><p>This is the normative material for Version 3, Release 1.</p></div1><div1 id="navigate-divs"><head>Message Design Element Navigation</head><artree role="NAVIGATE"><artreeitem><rmimref role="rmim" ref="MCAI_RM700200UV01-rmi" sectID="immcai" sectType="SB" refName="Trigger Event Control Act" refIdentifier="MCAI_RM700200UV01"/><artreeitem><hmdref role="hmd" ref="MCAI_HD700200UV01-hmd" sectID="immcai" sectType="SB" refName="Trigger Event Control Act" refIdentifier="MCAI_HD700200UV01"/><artreeitem><msgref role="msg" ref="MCAI_MT700201UV01-msg" sectID="immcai" sectType="SB" refName="Trigger Event Control Act" refIdentifier="MCAI_MT700201UV01"/></artreeitem><artreeitem><msgref role="msg" ref="MCAI_MT705201UV01-msg" sectID="immcai" sectType="SB" refName="Trigger Event Control Act - PRSC" refIdentifier="MCAI_MT705201UV01"/></artreeitem></artreeitem></artreeitem><artreeitem><rmimref role="rmim" ref="MCAI_RM900000UV01-rmi" sectID="immcai" sectType="SB" refName="Trigger Event Control Act Detected Issue CMET" refIdentifier="MCAI_RM900000UV01"/><artreeitem><hmdref role="hmd" ref="MCAI_HD900000UV01-hmd" sectID="immcai" sectType="SB" refName="Trigger Event Control Act Detected Issue CMET" refIdentifier="MCAI_HD900000UV01"/><artreeitem><msgref role="msg" ref="MCAI_MT900001UV01-msg" sectID="immcai" sectType="SB" refName="Trigger Event Control Act Detected Issue CMET" refIdentifier="MCAI_MT900001UV01"/></artreeitem></artreeitem></artreeitem></artree></div1></front><body><div1 id="intro-MCAI_DO000000UV-ic" ballotStatus="NormativeStandard" ballotNumber="1"><head>Overview</head><div2 id="spec-scope" lastEdit="2004-06-20T14:15:15"><head>Introduction &amp; Scope</head><emph role="strong">Scope</emph><p>The Message Control Act Infrastructure covers the alternate structures of the message Trigger Event Control Acts in the HL7 Composite Message.  Refer to <artref ref="MCCI_DO000000" alt="Transmission Infrastructure"></artref> for details relating to the HL7 Composite Message.
</p><p><emph role="strong">Introduction</emph></p><p>As discussed in <artref ref="MCCI_DO000000" alt="Transmission Infrastructure Introduction"></artref>, the "Trigger Event Control Act" contains administrative information related to the "controlled act" which is being communicated as a messaging interaction.  A Trigger Event Control Act describes the 'action' that is happening to the subject of the message (the payload).  The Trigger Event Control Act contains details about the trigger event for the message such as who, when, where and why.</p><p>In general, the Trigger Event Control Act Infrastructure is intended to promote the reuse of similar structures that are used for the same type of interactions across the domains that contribute content to the HL7 Version 3 messaging standard. This chapter will discuss the alternate forms of the Trigger Event Control Act and an overview of their intended use. </p><p><emph role="strong">Trigger Event Control Act Categories</emph></p><p>The Trigger Event Control Act includes general administrative information related to a controlled act that is being communicated as a messaging interaction. The Trigger Event Control Act varies in structure depending upon the type of message interaction. The categories of message interaction currently recognized are: 
</p><list role="ordered"><item>Action, Information, or State Transition Control messages</item><item>Query and Query Response messages</item><item>Master File / Registry Act messages</item></list><p>Accept-level acknowledgements are a message control function that do not require or allow a Control Act.</p><p>Application-level acknowledgement (functional response) message interactions require the Trigger Event Control Act and, in most cases, include a domain specific application response. Certain interactions will employ the use of <artref ref="COMT_DO000000" alt="Shared Messages"></artref> as the functional response. Although the application acknowledgement (functional response) is normal, an application response message is also allowed to exist with only the Control Act that carries no additional domain content.  If the response is not defined by a domain interaction, the use of a  <artref ref="MCCI_IN999999" alt="Transmission Infrastructure Interaction"></artref> would be appropriate.</p><p>What follows is a brief discussion of each of the above message interaction categories.
</p><p><emph>Action, Information, and State Transition Control Interactions</emph></p><p>These include all messages which convey application content with the exception of Query and Master File / Registry (see below). Messaging interactions occur between an originating application and a receiving application. For reliable messaging interactions, there is a sequence of at least two messaging events. Refer to <artref ref="MCCI_DO000000" alt="Transmission Infrastructure "></artref> for the modes of messaging. The initial message interaction generally passes application content that is the purpose for the messaging interaction sequence.  </p><p>Depending on the receiver responsibilities of the initial message interaction, there might be a second message interaction that is some level of acknowledgement response. The acknowledgement could be by the receiving application or could be a surrogate for the receiving application that may only guarantee delivery of the content to the intended application.   </p><p>Upon receipt of a positive application acknowledgment (response), the payload will indicate what was done (the promise, event, modified object, etc.).  A negative application acknowledgement (rejection) won't contain any of those.  The message interaction id and trigger event id indicate that this is a rejection.  </p><p>The "semantic content" of a message is the combination of the ControlAct and the payload.  To fully understand the trigger event you need both.  The Control Act just says "Please 'do something' with 'this thing'".  The payload is needed to indicate what 'this thing' is.  However, the bulk of the trigger event information is attached to the Control Act:  </p><p>Because this information tends to be reasonably consistent, irrespective of domain, the ControlAct has been defined as a reusable message type and will be referenced in the domain interaction.  This saves committees the trouble of defining the content, simplifies their message types, and ensures consistency.  However, the combination is needed to understand what is really happening. </p><p><emph>Query Specification/Query Response Interactions</emph></p><p>
Query Specification and Query Response interactions have a form of the Control Act that contains elements that are needed to establish and control a logical query session between two applications.  A more complete discussion of the use of the query support provided in this ballot is discussed in the <artref ref="QUQI_DO000003" alt="Query Control, Query Infrastructure (QUQI) domain chapter"></artref>.</p><p><emph>Master File / Registry Act Interactions</emph></p><p>
Master File / Registry Act messaging interactions are the third and last category of message interaction types that require a unique Control Act structure in the current HL7 Version 3 Composite Message Payload Specification.  This infrastructure is presented in detail in the <artref ref="MFMI_DO000000" alt="Master File / Registry Infrastructure (MFMI) domain chapter"></artref>.
</p><p><emph role="strong">Customization and Refinement of Trigger Event Control Acts</emph></p><p>The message types defined in the Message Control Act Infrastructure section of the ballot are highly generic and inclusive. In order to permit expressivity where needed by implementers, most of the attributes and relationships are defined to be optional. The use cases for the general messages are so abstract that most useful constraints are impossible to specify at this level. </p><p>For example, in some cases, it is desirable to indicate a performer as well as an author, for an act.   The performer is the party who actually performs the act; in this case, a notification.  One can presume that there is an author for a control act, however it is not required to record information about the author.  At the same time, while it is generally assumed that only a single author is allowed, many performers can be specified.  </p><p><a name="MCAI_ANCH_NoteToImpl"></a><emph role="strong">Note to implementers: </emph>Message designers and implementers may further refine and constrain Trigger Event Control Acts.  Refer to  <xspecref spec="conformance" ref="CECconstraints1" alt="Refinement, Constraint, and Localization"></xspecref> section for details for rules and principles regarding customization and refinement.</p><p><a name="MCAI_ANCH_NoteToTC"></a><emph role="strong">Note to Technical Committees: </emph>Technical committees are encouraged to create refined versions of Trigger Event Control Acts that tighten the cardinalities of attributes and relationships as they see fit for their specific use cases.  Unlike normal refinement, committee level Trigger Event Control Act R-MIM <emph role="strong">may not omit mention</emph> of attributes and relationships nor mark them as Not Permitted (NP).  To do so would prohibit the use of these attributes in site-specific implementations.  Refer to <xspecref spec="conformance" ref="CECconstraints1" alt="Refinement, Constraint, and Localization"></xspecref> section for details for rules and principles regarding customization and refinement.</p></div2></div1><dmimdivn identifier="dmims-MCAI_DO000000UV" name="Domain Message Information Models" parent="MCAI_DO000000UV-ic" id="dmims-MCAI_DO000000UV-ic"><dmim identifier="MCAI_DM700200UV" name="Trigger Event Control Act Infrastructure Domain Model" familiarName="Trigger Event Control Act Infrastructure D-MIM" parent="MCAI_DO000000UV-ic" id="MCAI_DM700200UV-rmi" sortPrefix="01|99|99|INFRASTRUCTURE DOMAIN MODEL" baseClass="TriggerEventControlAct" lastEdit="2004-07-25T08:37:35"><descriptive identifier="desc-MCAI_DM700200UV" name="Description" parent="MCAI_DM700200UV-rmi" id="desc-MCAI_DM700200UV-rmi" lastEdit="2004-07-25T08:37:35"><p>This D-MIM (which is a duplicate of the R-MIM for this domain) specifies the Trigger Event Control Act structure in the HL7 version 3 composite message payload specification that is used for action, information, and state transition message interactions. This structure specifies the superset of associations and ActRelationshipTypes that domain committees may want to specify for administrative information content that is to accompany a given message interaction.  Provisions for constraining the accompanying information will be made  first by committees concerning functional needs for a specific message  interaction.  Further constraints will be provided by the enforcement of  a conformance profile at the time of specifying the implementation of  the message interaction.</p></descriptive><descriptive identifier="walkthru-MCAI_DM700200UV" name="Design Walk-through" parent="MCAI_DM700200UV-rmi" id="walkthru-MCAI_DM700200UV-rmi" role="walkThrough" lastEdit="2004-07-25T08:37:35"><p>The Trigger Event Control Act plays a central role in the semantics of HL7 communication.  Information in the transmission wrapper helps with message delivery.  The Trigger Event Control Act specifies precisely the nature of the event notification, or the command that is given. The central construct in the trigger Event Control Act is the <emph role="strong">ControlActProcess </emph>class.</p><p>The ControlActProcess class can be seen as a generalization of the HL7 Version 2 "EVN" (event) segment.  The EVN segment specifies the name of the event as well as the time of the event, the person responsible for the event, etc.  These tend to be "facts about the event", rather than "facts of the event". </p><p>There is inherent tension between the two different ways of representing information about the event.  Data about the event can be carried by the ControlActProcess class, or by specific HL7 domain payload.</p><p> Consider a new order for service.  In this case, there is a natural HL7 domain content payload (the "Order") which represents the order, and who ordered it and when, etc.  For these messages, there will be a certain level of duplication between the ControlActProcess associations and the domain content.  </p><p>It is an HL7 design philosophy *not* to duplicate information in ControlActProcess associations that is reasonably found within the carried Domain payload. Some duplication may however be unavoidable.  HL7 message senders should not need to "pluck out" data from the domain content in order to populate the ControlActProcess associations.  The full richness of the ControlActProcess is available as a standard design for use by messages that may need to convey this data.  Using the pre-defined associations and attributes of the ControlActProcess will contribute to HL7's uniformity and consistency.</p><p>The control act process class is the central construct for the transmission wrapper RMIM.  It captures information related to the specific act - the trigger event - that is central to the message.  </p><p>The following <emph role="strong">attributes </emph>are central to using the control act:</p><list role="unordered"><item><emph>classCode</emph>:

Mandatory, constrained to CACT, a control act. </item><item><emph>moodCode</emph>:

The  x_ActMoodIntentEvent domain has been defined for this attribute to specify actual and intended events.</item><item><emph>id</emph>:

 The identifier that has been designated for the control act or notification.</item><item><emph>code</emph>:

 The code indicates the Trigger Event of the act or the notification that has been sent. The values are derived from the MDF, examples include "COMT_<emph role="strong">TE</emph>200200" or "QURX_<emph role="strong">TE</emph>100001".  The codeSystem identifies the HL7 organization. The domain HL7TriggerEventCode has been defined to represent these codes.</item><item><emph>text</emph>:

The text attribute can be used to convey a textual or multimedia description of the Act.</item><item><emph>effectiveTime</emph>:

 The date and time on which the control act or notification was composed and authorized for transmission, i.e. the date and time the event occurred that triggered the interaction.  This date and time will normally differ from the data and time contained in the transmission wrapper.  <p><emph role="strong">Example</emph>: Suspension of a prescription.    A doctor wants to suspend a prescription effective at noon the following day.  The effective time would be noon the following day   Numerous interactions might be triggered (order-entry system to pharmacy, pharmacy to nursing system).  The time associated with each of the messages associated with those interactions would be the message time.  </p></item><item><emph>priorityCode</emph>:
A code, or a set of codes, that identifies the circumstances in which the event happened, shall happen, is planned to happen, or requested to happen.  The default value is R for routine.</item><item><emph>reasonCode</emph>: A code specifying the motivation, cause, or rationale of the Act. The reasonCode should only be used for common reasons that are not related to a prior Act or any other condition expressed in Acts. Example reasons that might qualify for being coded in this field might be: "routine requirement", "infectious disease reporting requirement", "on patient request", or "required by law".  The reasonCode attribute identifies types of reasons, or broad categories of reasons. It is not to be used for the identification of fine-grained reasons for the Act. The value of this attribute shall not be interpreted as a refinement of the trigger event identified in the code attribute; it's value is "for information" only.<p>This attribute shall not be valued if a (detailed) reason for the Act is specified by means of the DetectedIssueEvent class. See below for a discussion of the reason act relationship and the reporting of detected issues in the DetectedIssueEvent class, the reasonCode attribute and the Transmission Wrapper.</p></item><item><emph>languageCode</emph>:
The primary language in which this Act statement is specified, particularly the language of the text attribute.</item></list><p>The following control act <emph role="strong">participations </emph>are defined for the control act.  Note that where the model permits more than one instance of (or requires) a participation or act relationship, cardinality should be constrained as fully as possible in the domain-defined message type.
Note that the location for any of the participants, if provided, will be defined in the R_AssignedPerson CMET.</p><list role="unordered"><item><emph>authorOrPerformer</emph>
There are zero to many parties recorded as author or performer for a control act.  <p>The author of an act is the person who takes responsibility for its creation.  This could be the doctor who orders a test or the public health professional who decides to notify a local, state, or national public health entity. </p><p>The performer of an act is the person who actually and principally carries out the "controlled act".  The performer is rarely used.</p><p>The actual party involved is either a device or a person, and the particular information involved is specified in the Assigned Person, and the Assigned Device CMET.  The reader should note that, in many cases, it is the organization responsible for authoring or performing an act that is recorded as opposed to the person.  In this case, the Assigned Person CMET is still used.  However, the organization that scopes the performer role is recorded.</p></item><item><emph>overseer</emph>: There are zero to many overseers for a control act.   In some cases but by no means all, it is relevant to record information about a person who oversees the work of the acts' author or performer.  This is particularly relevant in instructional situations.  It is possible, but unlikely for there to be many parties acting as overseer.</item><item><emph>dataEnterer</emph>:
If relevant, the party who enters data associated with the control act may be recorded.  It is possible for multiple parties to provide data entry.</item><item><emph>informationRecipient</emph>:
There are zero to many designated information recipients for a control act.  These are the parties who are intended to receive the <emph>information</emph> that is included in the message.  Information recipients are differentiated from message receivers (as shown in the Transmission Wrapper) because the information recipients do not have a role in the actual message management and transmission.<p>To convey an organization instead of person, leave the player empty and use the scoper.</p></item><item><emph>subject</emph>: The control act has zero to many subject acts.  Note that multiple subject acts should be of the same type (for easy and reasonable binding in the XML ITS).  This class provides an entry point into the data structure that is conveyed in the body of the message.  Note that the contextConductionIndicator is always "false", i.e. none of the participations described above are conducted to (inherited by) the domain payload.  Any participations that are required within the domain information model need to be included there.  
				<emph role="strong">Note</emph>: Refer to the <xspecref spec="IMMCAI" ref="MCAI_ANCH_NoteToImpl" alt="Note to Implementors"></xspecref> and <xspecref spec="IMMCAI" ref="MCAI_ANCH_NoteToTC" alt="Note to Technical Committees"></xspecref> regarding Refinement, Constraint, and Localization.
		</item></list><p><emph role="strong">Reporting Errors and Issues</emph></p><p>An application which processes a message may detect various errors and issues related to the structure or the content of a message. </p><list role="unordered"><item>If the errors are related to the secure delivery of the message or its structure then the errors are identified in the Transmission Wrapper. Examples include "Couldn't parse", "Receiver doesn't exist", "Conformance profile unknown". </item><item>If the issues (errors) are related to the information as conveyed by the message, evaluated in context by the processing application, then the  issues are identified by means of the reason act association. The detected issues are related to "business-rule" or "process" problems. Examples include: "drug-drug interaction", "invoice too late".</item></list><p>The <emph role="strong">reason</emph> act relationship is used to convey detected issues.  Following is a list of reason's attributes:</p><list role="unordered"><item><emph>typeCode</emph>: constrained to the value RSON</item><item><emph>contextConductionIndicator</emph>: If true, associations in the control act are conducted across the reason to the DetectedIssueEvent </item></list><p>Refer to the <artref alt="Detected Issue Event R-MIM Walkthrough" ref="MCAI_RM900000"></artref> for details regarding the <emph role="strong">DetectedIssueEvent </emph>that can be used to convey observations made by a system as part of it's processing of a message. </p></descriptive><diagref ref="MCAI_DM700200UV.gif"/></dmim></dmimdivn><subdivn identifier="MCAI_DO000000UV-TriggerEventControlAct" name="Trigger Event Control Act Topic" familiarName="Trigger Event Control Act" parent="MCAI_DO000000UV-ic" id="MCAI_DO000000UV-TriggerEventControlAct-ic" role="BC" sortPrefix="01" baseClass="Trigger Event Control Act" ballotStatus="NormativeStandard" ballotNumber="1"><descriptive identifier="intro-MCAI_DO000000UV-TriggerEventControlAct" name="Introduction" parent="MCAI_DO000000UV-TriggerEventControlAct-ic" id="intro-MCAI_DO000000UV-TriggerEventControlAct-ic" lastEdit="2004-07-09T05:17:09"><p>Refer to the Introduction section.</p></descriptive><approledivn identifier="roles-MCAI_DO000000UV-TriggerEventControlAct" name="Application Roles" parent="MCAI_DO000000UV-TriggerEventControlAct-ic" id="roles-MCAI_DO000000UV-TriggerEventControlAct-ic"><descriptive identifier="arop-MCAI_DO000000UV-TriggerEventControlAct" name="Reference" parent="MCAI_DO000000UV-TriggerEventControlAct-ic" id="arop-MCAI_DO000000UV-TriggerEventControlAct-ic"><p>For details on the interpretation of this section, see <xspecref spec="v3guide.htm" ref="v3gapprole" alt="the discussion of application roles"/> and their relationships in the Version 3 Guide.</p></descriptive><descriptive identifier="arScp-MCAI_DO000000UV-TriggerEventControlAct" name="Introduction" parent="MCAI_DO000000UV-TriggerEventControlAct-ic" id="arScp-MCAI_DO000000UV-TriggerEventControlAct-ic"><p>This domain is limited to the overall infrastructure to be utilized for all domains.  Refer to the specific domain areas for application roles.  The application roles included here are for example purposes only.</p></descriptive><artree><artreeitem><arref role="included" ref="MCAI_AR000002UV01-ar" sectID="immcai" sectType="SB" refName="Trigger Event Control Act Receiver Example" refFamiliarName="Example, Control Act: Receiver" refIdentifier="MCAI_AR000002UV01"/></artreeitem><artreeitem><arref role="included" ref="MCAI_AR000001UV01-ar" sectID="immcai" sectType="SB" refName="Trigger Event Control Act Sender Example" refFamiliarName="Example, Control Act: Sender" refIdentifier="MCAI_AR000001UV01"/></artreeitem></artree><approle identifier="MCAI_AR000002UV01" name="Trigger Event Control Act Receiver Example" familiarName="Example, Control Act: Receiver" parent="MCAI_DO000000UV-TriggerEventControlAct-ic" id="MCAI_AR000002UV01-ar" sortPrefix="01|99|99|22|EXAMPLE|" baseClass="TriggerEventControlAct" ballotStatus="NormativeStandard" ballotNumber="1" hidden="no" lastEdit="2004-02-26T12:01:43"><descriptive identifier="desc-MCAI_AR000002UV01" name="Description" parent="MCAI_AR000002UV01-ar" id="desc-MCAI_AR000002UV01-ar" lastEdit="2004-02-26T12:01:43"><p>This is an example application role for the receiver of a control act message.</p></descriptive><intref role="receives" ref="MCAI_IN700201UV01-int" sectID="immcai" sectType="SB" refName="Trigger Event Control Act Example" refFamiliarName="Trigger Event Control Act Example" refIdentifier="MCAI_IN700201UV01"/></approle><approle identifier="MCAI_AR000001UV01" name="Trigger Event Control Act Sender Example" familiarName="Example, Control Act: Sender" parent="MCAI_DO000000UV-TriggerEventControlAct-ic" id="MCAI_AR000001UV01-ar" sortPrefix="01|99|99|99|SENDER EXAMPLE" baseClass="TriggerEventControlAct" ballotStatus="NormativeStandard" ballotNumber="1" hidden="no" lastEdit="2004-02-26T12:01:49"><descriptive identifier="desc-MCAI_AR000001UV01" name="Description" parent="MCAI_AR000001UV01-ar" id="desc-MCAI_AR000001UV01-ar" lastEdit="2004-02-26T12:01:49"><p>This is an example application role for the sender of a control act message.</p></descriptive><intref role="sends" ref="MCAI_IN700201UV01-int" sectID="immcai" sectType="SB" refName="Trigger Event Control Act Example" refFamiliarName="Trigger Event Control Act Example" refIdentifier="MCAI_IN700201UV01"/></approle></approledivn><triggerdivn identifier="tes-MCAI_DO000000UV-TriggerEventControlAct" name="Trigger Events" parent="MCAI_DO000000UV-TriggerEventControlAct-ic" id="tes-MCAI_DO000000UV-TriggerEventControlAct-ic"><descriptive identifier="teop-MCAI_DO000000UV-TriggerEventControlAct" name="Reference" parent="MCAI_DO000000UV-TriggerEventControlAct-ic" id="teop-MCAI_DO000000UV-TriggerEventControlAct-ic"><p>For details on the interpretation of this section, see <xspecref spec="v3guide.htm" ref="v3gtrigger" alt="the discussion of trigger events"/> in the Version 3 Guide.</p></descriptive><descriptive identifier="teScp-MCAI_DO000000UV-TriggerEventControlAct" name="Introduction" parent="MCAI_DO000000UV-TriggerEventControlAct-ic" id="teScp-MCAI_DO000000UV-TriggerEventControlAct-ic"><p>This domain is limited to the overall infrastructure to be utilized for all domains.  Refer to the specific domain areas for trigger events.  The trigger events included here are for example purposes only.</p></descriptive><trigger identifier="MCAI_TE700201UV01" name="Trigger Event Control Act Example" familiarName="Example, Control Act" parent="MCAI_DO000000UV-TriggerEventControlAct-ic" id="MCAI_TE700201UV01-te" role="Interaction based" sortPrefix="01|99|99||99|EXAMPLE" baseClass="TriggerEventControlAct" ballotStatus="NormativeStandard" ballotNumber="1" lastEdit="2004-06-20T14:25:18"><descriptive identifier="desc-MCAI_TE700201UV01" name="Description" parent="MCAI_TE700201UV01-te" id="desc-MCAI_TE700201UV01-te" lastEdit="2004-06-20T14:25:18"><p>The trigger of the control act.</p></descriptive><intref role="fires" ref="MCAI_IN700201UV01-int" sectID="immcai" sectType="SB" refName="Trigger Event Control Act Example" refFamiliarName="Trigger Event Control Act Example" refIdentifier="MCAI_IN700201UV01"/></trigger></triggerdivn><rmimdivn identifier="rmims-MCAI_DO000000UV-TriggerEventControlAct" name="Refined Message Information Models" parent="MCAI_DO000000UV-TriggerEventControlAct-ic" id="rmims-MCAI_DO000000UV-TriggerEventControlAct-ic"><descriptive identifier="rmop-MCAI_DO000000UV-TriggerEventControlAct" name="Reference" parent="MCAI_DO000000UV-TriggerEventControlAct-ic" id="rmop-MCAI_DO000000UV-TriggerEventControlAct-ic"><p>For details on the interpretation of this section, see <xspecref spec="v3guide.htm" ref="v3grmim" alt="the description of RMIMs"/> in the Version 3 Guide.</p></descriptive><rmim identifier="MCAI_RM700200UV01" name="Trigger Event Control Act" familiarName="Trigger Event Control Act" parent="MCAI_DO000000UV-TriggerEventControlAct-ic" id="MCAI_RM700200UV01-rmi" sortPrefix="01|99|99|" baseClass="TriggerEventControlAct" ballotStatus="NormativeStandard" ballotNumber="1" lastEdit="2004-07-25T08:36:27"><descriptive identifier="desc-MCAI_RM700200UV01" name="Description" parent="MCAI_RM700200UV01-rmi" id="desc-MCAI_RM700200UV01-rmi" lastEdit="2004-07-25T08:36:27"><p>This RMIM specifies the intermediate wrapper structure in the HL7 version 3 composite message payload specification that is used for notification and request for action type message interactions. This structure specifies the superset of associations and ActRelationshipTypes that domain committees may want to specify for administrative information content that is to accompany a given message interaction.  Provisions for constraining the accompanying information to meet implementation requirements will be provided by the enforcement of a conformance profile at the time of specifying the implementation of the message interaction.</p></descriptive><rmimref role="parent" ref="MCAI_DM700200UV-rmi" sectID="immcai" sectType="SB" refName="Trigger Event Control Act Infrastructure Domain Model" refFamiliarName="Trigger Event Control Act Infrastructure D-MIM" refIdentifier="MCAI_DO000000UV"/><diagref ref="MCAI_RM700200UV.gif"/><hmdref role="containedHMD" ref="MCAI_HD700200UV01-hmd" sectID="immcai" sectType="SB" refName="Trigger Event Control Act" refFamiliarName="Trigger Event Control Act" refIdentifier="MCAI_HD700200UV01"/></rmim><rmim identifier="MCAI_RM900000UV01" name="Trigger Event Control Act Detected Issue Local CMET" familiarName="Trigger Event Control Act Detected Issue CMET" parent="MCAI_DO000000UV-TriggerEventControlAct-ic" id="MCAI_RM900000UV01-rmi" sortPrefix="01|99|99|DETECTED ISSUE LOCAL CMET" baseClass="TriggerEventControlAct" ballotStatus="NormativeStandard" ballotNumber="1" lastEdit="2004-07-25T08:44:58"><descriptive identifier="walkthru-MCAI_RM900000UV01" name="Design Walk-through" parent="MCAI_RM900000UV01-rmi" id="walkthru-MCAI_RM900000UV01-rmi" role="walkThrough" lastEdit="2004-07-25T08:44:58"><p>The <emph role="strong">DetectedIssueEvent </emph>can be used to convey observations made by a system as part of it's processing of a message.  This is commonly used for identifying "business rule" or "process" problems that may result in a refusal to carry out a particular request to acknowledge the issue and/or by providing some form of mitigation factors.  The Act or Acts that may cause the adverse outcome are the target of the subject ActRelationship.  The DetectedIssueEvent can be either: </p><list role="unordered"><item><p>detected by a receiver of the Act (and consequently reported back to the sender as an issue in an application acknowledgement)</p></item><item><p>if already known (detected) by the originator of the act, it can be included by the originator.</p></item></list><p>The following list describes the <emph role="strong">attributes </emph>of DetectedIssueEvent:</p><list role="unordered"><item><p><emph>classCode</emph>: Required, mandatory, and constrained to the value ALRT</p></item><item><p><emph>moodCode</emph>: Required, mandatory, and constrained to the value EVN</p></item><item><p><emph>id</emph>: a unique identifier for this DetectedIssue (optional)</p></item><item><p><emph>code</emph>: indicates the type of problem being detected (e.g., drug-drug interaction) while the DetectedIssueEvent.value is used to represent a specific problem code (e.g., specific drug-drug interaction). The code attribute is defined with the domain ActDetectedIssueCode.</p><p><emph role="strong">Examples </emph>of types of issues include:</p><list role="unordered"><item><p>Detection of a drug-drug interaction</p></item><item><p>Identification of a late-submission for an invoice</p></item><item><p>Detection of a requested discharge for a patient which does not meet hospital-defined discharge criteria</p></item><item><p>Detection of insufficient authorization required when executing a query</p></item></list></item><item><p><emph>text</emph>: additional information</p></item><item><p><emph>value</emph>: the specific problem code (e.g. "Drug A causes death when combined with drug B")</p></item></list><p><emph role="strong">Examples involving Prescriptions</emph>:</p><p>If the original message is about "Please suspend this Pharmacy Order", the Control Act would represent the "Please suspend", and the Pharmacy Order would be described (at least at a reference level) in the Payload. </p><p>The following is an explanation of how the ControlActProcess attributes and act relationships would be populated: </p><list role="unordered"><item><p><emph role="strong">code</emph>: <emph role="strong">What </emph>should be done (suspend something)</p></item><item><p><emph role="strong">author</emph>: <emph role="strong">Who </emph>asked for the suspension</p></item><item><p><emph role="strong">reasonCode</emph>: <emph role="strong">Why </emph>ask for the suspension</p></item><item><p><emph role="strong">reason </emph>act relationship: <emph role="strong">Why </emph>ask for the suspension</p></item><item><p><emph role="strong">effectiveTime</emph>: <emph role="strong">When </emph>should it be suspended</p></item><item><p><emph role="strong">performer</emph>: <emph role="strong">Who </emph>should suspend it</p></item><item><p>If this request results in a rejection at the application level, the response has a ControlAct that says "Reject" pointing to a pharmacy order to say "I reject your request to suspend the pharmacy order."</p></item></list><p>The <emph role="strong">Payload </emph>of the Trigger Event Control Act would be the prescription.</p><p><emph>Example of a rejection due to drug-drug interaction</emph></p><p>This is a "business rule" problem. ControlActProcess.reasonCode would not be populated.  DetectedIssueEvent.code = "DRG" representing the concept "Drug-drug interaction".  DetectedIssueEvent.value = "Drug A causes death when combined with drug B".  Also agree that there might be multiple DetectedIssueEvent classes, each having the appropriate code and value attributes regardless of how many problems there are. </p><p><emph>Example of a rejection due medication not in stock:</emph></p><p>ControlActProcess.reasonCode = "out of stock" (OS is the concept code, although it is only listed under the SubstanceAdminSubstitutionReason). That should be sufficient.</p><p><emph>Example of a rejection due to multiple business rules:</emph></p><p>If it breaks multiple business rules, e.g. a drug-drug interaction and an authorization issue and a financial issue.  ControlActProcess.reasonCode would not be populated and then there would be three instances of DetectedIssueEvent to identify the three issues. </p><p>The management of the DetectedIssueEvent can be conveyed via the target <emph role="strong">DetectedIssueManagement </emph>Act class of the targetOf ActRelationship.  The targetOf.typeCode is MITGT which will allow for removing or lessening the effect of the detected issue.  The DetectedIssueManagement.code attribute is defined by the domain ActDetectedIssueManagementCode.  </p><p>Examples of issue management types include:</p><list role="unordered"><item><p>Compassionate Refill (e.g. if patient lost subscribed medication)</p></item><item><p>Emergency Override (to allow data to be made available even if there is insufficient authorization to execute a query)</p></item></list><p>The DetectedIssueManagement class has the following <emph role="strong">attributes</emph>:</p><list role="unordered"><item><p><emph>moodCode</emph>: either DEF or EVN. The moodCode is EVN when the sender wishes to communicate an override request for the DetectedIssue, and DEF when a receiver (usually in an application level negative acknowledgement - NAK) wants to suggest possible override codes to the sender.  <emph role="strong">Version 2 mapping:</emph> planned for v2.6.</p></item><item><p><emph>code</emph>: override type. <emph role="strong">Example</emph>: If a business rule states that a prescription on hold cannot be dispensed, an override type might be "Dispense Held Prescription" to allow the prescription to be dispensed in exception to the rule.  <emph role="strong">Version 2 mapping: </emph>OVR-1, ERR-10</p></item><item><p><emph>text</emph>: override reason, override comments <emph role="strong">Example</emph>: A patient is given a prescription; however, before completing the prescription, the remaining pills are spoiled. The patient returns to their pharmacy and explains the situation to their pharmacist. The pharmacist decides to replace the spoiled drugs; however, when attempting to record the event, a message is returned indicating that the dispense would exceed the maximum amount prescribed. The pharmacist overrides the rule and specifies an Override Reason Code indicating a replacement of lost product.  <emph role="strong">Version 2 mapping: </emph>OVR-2, ERR-11, OVR-3) </p></item></list><p>The ActOrderRequired class has the following attributes</p><list role="unordered"><item><p><emph>code</emph>: action to be taken. Example: After submitting a dispense transaction, a response is returned to the user indicating that the patient may be abusing drugs. Given the sensitivity of this warning, the error is returned with an indicator stating that the patient should not be informed of the error with the implication that steps should be taken to rule out or confirm the warning.  <emph role="strong">Version 2 mapping:</emph> ERR-9.</p></item></list><p>The ActOrderRequired class has the following association:</p><list role="unordered"><item><p><emph>subject</emph>: identifies the party involved in the action identified by ActOrderRequired. V<emph role="strong">ersion 2 mapping: </emph>ERR-12</p></item></list></descriptive><rmimref role="parent" ref="MCAI_DM700200UV-rmi" sectID="immcai" sectType="SB" refName="Trigger Event Control Act Infrastructure Domain Model" refFamiliarName="Trigger Event Control Act Infrastructure D-MIM" refIdentifier="MCAI_DO000000UV"/><diagref ref="MCAI_RM900000UV.gif"/><hmdref role="containedHMD" ref="MCAI_HD900000UV01-hmd" sectID="immcai" sectType="SB" refName="Trigger Event Control Act Detected Issue CMET" refFamiliarName="Trigger Event Control Act Detected Issue CMET" refIdentifier="MCAI_HD900000UV01"/></rmim></rmimdivn><hmddivn identifier="hmds-MCAI_DO000000UV-TriggerEventControlAct" name="Hierarchical Message Descriptions" parent="MCAI_DO000000UV-TriggerEventControlAct-ic" id="hmds-MCAI_DO000000UV-TriggerEventControlAct-ic"><descriptive identifier="hdop-MCAI_DO000000UV-TriggerEventControlAct" name="Reference" parent="MCAI_DO000000UV-TriggerEventControlAct-ic" id="hdop-MCAI_DO000000UV-TriggerEventControlAct-ic"><p>For details on the interpretation of this section, see <xspecref spec="v3guide.htm" ref="v3ghmd" alt="the description of HMDs"/> in the Version 3 Guide.</p></descriptive><hmd identifier="MCAI_HD700200UV01" name="Trigger Event Control Act" familiarName="Trigger Event Control Act" parent="MCAI_RM700200UV01-rmi" id="MCAI_HD700200UV01-hmd" sortPrefix="01|99|99|" baseClass="TriggerEventControlAct" ballotStatus="NormativeStandard" ballotNumber="1" lastEdit="2004-07-25T08:37:51"><descriptive identifier="desc-MCAI_HD700200UV01" name="Description" parent="MCAI_HD700200UV01-hmd" id="desc-MCAI_HD700200UV01-hmd" lastEdit="2004-07-25T08:37:51"><p>This HMD specifies the Trigger Event Control Act structure in the HL7 version 3 composite message specification that is used for action, information, and state transition control message interactions. This structure specifies the superset of associations and ActRelationshipTypes that domain committees may want to specify for administrative information content that is to accompany a given message interaction.</p><p>Examples:</p><list role="unordered"><item>Sender asks addressee to do something depending on the focal Act of the payload. An example is "fulfill this order". Addressee has responsibilities to either reject the message (application response) or to act on it in an appropriate way (specified by the specific receiver responsibilities for the interaction).</item><item>Sender sends payload to addressee as information. Addressee does not have responsibilities beyond serving addressee's own interest (i.e., read and memorize as it sees fit.) This is equivalent to an FYI on a memo. </item><item>Sender transmits a status change pertaining to the focal act of the payload. This status of the focal act is the final state of the state transition. This can be either a request or a command, according to the mood of the control act.  </item></list></descriptive><hmdextref role="tabular" ref="MCAI_HD700200UV01"/><rmimref role="parent" ref="MCAI_RM700200UV01-rmi" sectID="immcai" sectType="SB" refName="Trigger Event Control Act" refFamiliarName="Trigger Event Control Act" refIdentifier="MCAI_RM700200UV01"/><msgref role="definedMsgType" ref="MCAI_MT700201UV01-msg" sectID="immcai" sectType="SB" refName="Trigger Event Control Act" refFamiliarName="Trigger Event Control Act" refIdentifier="MCAI_MT700201UV01"/><msgref role="definedMsgType" ref="MCAI_MT705201UV01-msg" sectID="immcai" sectType="SB" refName="Trigger Event Control Act - PRSC" refFamiliarName="Trigger Event Control Act - PRSC" refIdentifier="MCAI_MT705201UV01"/></hmd><hmd identifier="MCAI_HD900000UV01" name="Trigger Event Control Act Detected Issue CMET" familiarName="Trigger Event Control Act Detected Issue CMET" parent="MCAI_RM900000UV01-rmi" id="MCAI_HD900000UV01-hmd" sortPrefix="01|99|99|DETECTED ISSUE CMET" baseClass="TriggerEventControlAct" ballotStatus="NormativeStandard" ballotNumber="1" lastEdit="2004-07-25T08:44:39"><descriptive identifier="desc-MCAI_HD900000UV01" name="Description" parent="MCAI_HD900000UV01-hmd" id="desc-MCAI_HD900000UV01-hmd" lastEdit="2004-07-25T08:44:39"><p>A local Common Message Element Type (CMET) used to refer to the detected issues in the trigger event control acts.  It will not be utilized by itself, but as a reusable model artifact.</p></descriptive><hmdextref role="tabular" ref="MCAI_HD900000UV01"/><rmimref role="parent" ref="MCAI_RM900000UV01-rmi" sectID="immcai" sectType="SB" refName="Trigger Event Control Act Detected Issue Local CMET" refFamiliarName="Trigger Event Control Act Detected Issue CMET" refIdentifier="MCAI_RM900000UV01"/><msgref role="definedMsgType" ref="MCAI_MT900001UV01-msg" sectID="immcai" sectType="SB" refName="Trigger Event Control Act Detected Issue CMET" refFamiliarName="Trigger Event Control Act Detected Issue CMET" refIdentifier="MCAI_MT900001UV01"/></hmd></hmddivn><msgtypedivn identifier="msgs-MCAI_DO000000UV-TriggerEventControlAct" name="Message Type Definitions" parent="MCAI_DO000000UV-TriggerEventControlAct-ic" id="msgs-MCAI_DO000000UV-TriggerEventControlAct-ic"><msgtype identifier="MCAI_MT700201UV01" name="Trigger Event Control Act" familiarName="Trigger Event Control Act" parent="MCAI_HD700200UV01-hmd" id="MCAI_MT700201UV01-msg" sortPrefix="01|99|99|" baseClass="TriggerEventControlAct" ballotStatus="NormativeStandard" ballotNumber="1" lastEdit="2004-07-25T08:37:57"><descriptive identifier="walkthru-MCAI_MT700201UV01" name="Design Walk-through" parent="MCAI_MT700201UV01-msg" id="walkthru-MCAI_MT700201UV01-msg" role="walkThrough" lastEdit="2004-07-25T08:37:57"><p>Domain-specific constraint to constrain the ControlActProcess.reasonCode domain to ActInvoiceReason.</p></descriptive><msgextref role="tabular" ref="MCAI_MT700201UV01"/><hmdref role="parent" ref="MCAI_HD700200UV01-hmd" sectID="immcai" sectType="SB" refName="Trigger Event Control Act" refFamiliarName="Trigger Event Control Act" refIdentifier="MCAI_HD700200UV01"/><intref role="sentIn" ref="MCAI_IN700201UV01-int" sectID="immcai" sectType="SB" refName="Trigger Event Control Act Example" refFamiliarName="Trigger Event Control Act Example" refIdentifier="MCAI_IN700201UV01"/></msgtype><msgtype identifier="MCAI_MT705201UV01" name="Trigger Event Control Act - PRSC" familiarName="Trigger Event Control Act - PRSC" parent="MCAI_HD700200UV01-hmd" id="MCAI_MT705201UV01-msg" sortPrefix="01|99|99|- PRSC" baseClass="TriggerEventControlAct" ballotStatus="NormativeStandard" ballotNumber="1" lastEdit="2004-07-25T08:38:01"><msgextref role="tabular" ref="MCAI_MT705201UV01"/><hmdref role="parent" ref="MCAI_HD700200UV01-hmd" sectID="immcai" sectType="SB" refName="Trigger Event Control Act" refFamiliarName="Trigger Event Control Act" refIdentifier="MCAI_HD700200UV01"/></msgtype><msgtype identifier="MCAI_MT900001UV01" name="Trigger Event Control Act Detected Issue CMET" familiarName="Trigger Event Control Act Detected Issue CMET" parent="MCAI_HD900000UV01-hmd" id="MCAI_MT900001UV01-msg" sortPrefix="01|99|99|DETECTED ISSUE CMET" baseClass="TriggerEventControlAct" ballotStatus="NormativeStandard" ballotNumber="1" lastEdit="2004-07-25T08:44:45"><descriptive identifier="devnote-MCAI_MT900001UV01" name="Design Note" parent="MCAI_MT900001UV01-msg" id="devnote-MCAI_MT900001UV01-msg" role="designComment" lastEdit="2004-07-25T08:44:45"><p>A local Common Message Element Type (CMET) used to refer to the detected issues in the trigger event control acts.  It will not be utilized by itself, but as a reusable model artifact.</p></descriptive><msgextref role="tabular" ref="MCAI_MT900001UV01"/><hmdref role="parent" ref="MCAI_HD900000UV01-hmd" sectID="immcai" sectType="SB" refName="Trigger Event Control Act Detected Issue CMET" refFamiliarName="Trigger Event Control Act Detected Issue CMET" refIdentifier="MCAI_HD900000UV01"/></msgtype></msgtypedivn><interactiondivn identifier="ints-MCAI_DO000000UV-TriggerEventControlAct" name="Interactions" parent="MCAI_DO000000UV-TriggerEventControlAct-ic" id="ints-MCAI_DO000000UV-TriggerEventControlAct-ic"><descriptive identifier="inop-MCAI_DO000000UV-TriggerEventControlAct" name="Reference" parent="MCAI_DO000000UV-TriggerEventControlAct-ic" id="inop-MCAI_DO000000UV-TriggerEventControlAct-ic"><p>For details on the interpretation of this section, see <xspecref spec="v3guide.htm" ref="v3gintact" alt="the definition of Interactions"/> in the Version 3 Guide.</p></descriptive><descriptive identifier="intScp-MCAI_DO000000UV-TriggerEventControlAct" name="Introduction" parent="MCAI_DO000000UV-TriggerEventControlAct-ic" id="intScp-MCAI_DO000000UV-TriggerEventControlAct-ic"><p>This domain is limited to the overall infrastructure to be utilized for all domains.  Refer to the specific domain areas for interactions.</p></descriptive><interaction identifier="MCAI_IN700201UV01" name="Trigger Event Control Act Example" familiarName="Trigger Event Control Act Example" parent="MCAI_DO000000UV-TriggerEventControlAct-ic" id="MCAI_IN700201UV01-int" role="interaction" sortPrefix="01|99|99|99|EXAMPLE" baseClass="TriggerEventControlAct" ballotStatus="NormativeStandard" ballotNumber="1" lastEdit="2004-06-20T14:19:34"><descriptive identifier="desc-MCAI_IN700201UV01" name="Description" parent="MCAI_IN700201UV01-int" id="desc-MCAI_IN700201UV01-int" lastEdit="2004-06-20T14:19:34"><p>Sender asks addressee to do something depending on the focal Act of the payload.  An example is "fulfill this order".  Addressee has responsibilities to either reject the message or to act on it in an appropriate way (specified by the specific receiver responsibilities for the interaction).</p></descriptive><arref role="sendrole" ref="MCAI_AR000001UV01-ar" sectID="immcai" sectType="SB" refName="Trigger Event Control Act Sender Example" refFamiliarName="Example, Control Act: Sender" refIdentifier="MCAI_AR000001UV01"/><arref role="rcvrole" ref="MCAI_AR000002UV01-ar" sectID="immcai" sectType="SB" refName="Trigger Event Control Act Receiver Example" refFamiliarName="Example, Control Act: Receiver" refIdentifier="MCAI_AR000002UV01"/><teref role="trigger" ref="MCAI_TE700201UV01-te" sectID="immcai" sectType="SB" refName="Trigger Event Control Act Example" refFamiliarName="Example, Control Act" refIdentifier="MCAI_TE700201UV01"/><msgref role="transwrap" ref="MCCI_MT000100UV01-msg" sectID="immcci" sectType="SB" refName="Send Message Payload" refIdentifier="MCCI_MT000100UV01"/><msgref role="msgtype" ref="MCAI_MT700201UV01-msg" sectID="immcai" sectType="SB" refName="Trigger Event Control Act" refIdentifier="MCAI_MT700201UV01"/></interaction></interactiondivn></subdivn><indexdivn identifier="cindx-MCAI_DO000000UV" name="Common Message Elements Indexes" parent="MCAI_DO000000UV-ic" id="cindx-MCAI_DO000000UV-ic"><indexlist identifier="cindx-List-1" name="Common Message Elements Defined in this Domain" parent="cindx-MCAI_DO000000UV-ic" id="MCAI_DO000000UV-icc1id"/><indexlist identifier="cindx-List-2" name="Common Message Elements Used by this Domain" parent="cindx-MCAI_DO000000UV-ic" id="MCAI_DO000000UV-icc2id"/></indexdivn><indexdivn identifier="indx-MCAI_DO000000UV" name="Interaction Indexes" parent="MCAI_DO000000UV-ic" id="indx-MCAI_DO000000UV-ic"><indexlist identifier="indx-List-1" name="Interaction Index by Application Role" parent="indx-MCAI_DO000000UV-ic" id="MCAI_DO000000UV-ic1id"/><indexlist identifier="indx-List-2" name="Interaction Index by Trigger Event" parent="indx-MCAI_DO000000UV-ic" id="MCAI_DO000000UV-ic2id"/><indexlist identifier="indx-List-3" name="Interaction Index by Message Type" parent="indx-MCAI_DO000000UV-ic" id="MCAI_DO000000UV-ic3id"/></indexdivn></body></spec>

