<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
   <head><script src="../../support/js/tree.js" type="text/javascript"></script><script src="../../support/js/setTopFrameText.js" type="text/javascript"></script><script src="../../support/js/swapcss.js" type="text/javascript"></script><script type="text/javascript">
			if (find('heading')) setHeadingTextFromFileName(document.location.href);
			</script><title>HL7 Common Terminology Services</title>
      <link rel="stylesheet" type="text/css" href="../../support/css/v3m.css" title="v3m" />
   </head>
   <body>
      <div class="section">
         <h1>HL7 Common Terminology Services</h1>
         <table cellspacing="0" cellpadding="3" border="1">
            <tr>
               <td align="center"><img src="../../support/graphics/ansilogo.gif" alt="ANSI" /><br />ANSI/HL7 V3 CTS, R1-2005<br />HL7 Version 3 Standard: Common Terminology Services, Release 1<br />4/21/2005<img width="5" alt="spacer" src="../../support/graphics/spacer.gif" /></td>
            </tr>
         </table>
         <table style="border-width:0" width="100%" cellpadding="6">
            <tr>
               <td valign="top" align="left">Editor/Principal Contributor</td>
               <td valign="top" align="left">Harold Solbrig<br /><a href="mailto:solbrig@mayo.edu">solbrig@mayo.edu</a><br />Mayo Clinic/Foundation
               </td>
            </tr>
            <tr>
               <td valign="top" align="left">Principal Contributor</td>
               <td valign="top" align="left">Tony Weida<br /><a href="mailto:tweida@apelon.com">tweida@apelon.com</a><br />Apelon, Inc.
               </td>
            </tr>
            <tr>
               <td valign="top" align="left">Principal Contributor</td>
               <td valign="top" align="left">Larry Streepy<br /><a href="mailto:streepy@healthlanguage.com">streepy@healthlanguage.com</a><br />Health Language, Inc.
               </td>
            </tr>
            <tr>
               <td valign="top" align="left">Contributor</td>
               <td valign="top" align="left">David Markwell<br /><a href="mailto:david@clincial-info.co.uk">david@clincial-info.co.uk</a><br />Clinical Information Consultancy
               </td>
            </tr>
            <tr>
               <td valign="top" align="left">Contributor</td>
               <td valign="top" align="left">Keith Campbell<br /></td>
            </tr>
            <tr>
               <td valign="top" align="left">Vocabulary Co-Chair/Contributor</td>
               <td valign="top" align="left">Stanley Huff, M.D.<br /><a href="mailto:stan.huff@ihc.com">stan.huff@ihc.com</a><br />Intermountain Health Care
               </td>
            </tr>
            <tr>
               <td valign="top" align="left">Vocabulary Co-Chair</td>
               <td valign="top" align="left">Christopher Chute, M.D., Dr P.H.<br /><a href="mailto:chute@mayo.edu">chute@mayo.edu</a><br />Mayo Clinic/Foundation
               </td>
            </tr>
            <tr>
               <td valign="top" align="left">Vocabulary Co-Chair</td>
               <td valign="top" align="left">Ted Klein<br /><a href="mailto:kci@tklein.com">kci@tklein.com</a><br />Klein Consulting, Inc.
               </td>
            </tr>
            <tr>
               <td valign="top" align="left">Vocabulary Co-Chair</td>
               <td valign="top" align="left">Paul Frosdick<br /><a href="mailto:paul.frosdick@nhsia.nhs.uk">paul.frosdick@nhsia.nhs.uk</a><br />NHS Information Authority
               </td>
            </tr>
         </table>
         <p class="copyright">Last Published: 05/29/2008 3:18 PM</p>
         <p class="copyright">HL7® Version 3 Standard, © 2008 Health 
            Level Seven®, Inc.  All Rights Reserved.
         </p>
         <p class="copyright">HL7 and Health Level Seven are registered 
            trademarks of Health Level Seven, Inc.  Reg. U.S. Pat &amp; TM Off
         </p>
         <hr title="Separator for header" />
         <div class="body">
            <div class="foundationtoc">
               <h2><a name="contents">Table of Contents</a></h2>
               
               <div class="toc1"><a href="#prefBegin">Preface</a></div>
               <div class="toc2">i  <a href="#CTSIntro">Introduction</a></div>
               
               <div class="toc1">1  <a href="#CTSScope">Scope and Design of the HL7 Common Terminology Server</a></div>
               <div class="toc2">1.1  <a href="#CTSOutline">Outline</a></div>
               <div class="toc2">1.2  <a href="#CTSDesignPrincipals">Design Principals</a></div>
               <div class="toc2">1.3  <a href="#CTSOther">Other Relevant Work</a></div>
               <div class="toc2">1.4  <a href="#CTSintroVersions">Revision History and Versions</a></div>
               <div class="toc2">1.5  <a href="#CTSStateExtensions">Stateful and Session Extensions</a></div>
               
               <div class="toc1">2  <a href="#CTSModules">CTS Modules</a></div>
               <div class="toc2">2.1  <a href="#CTSMandVAPI">The Message and Vocabulary API</a></div>
               <div class="toc2">2.2  <a href="#CTSRuntime">Runtime and Browsing Functions</a></div>
               <div class="toc3">2.2.1  <a href="#CTSGenActorClasses">General HL7 CTS User (Actor) Classes</a></div>
               <div class="toc3">2.2.2  <a href="#CTSGenUserClasses">The Divided Requirements Profile</a></div>
               <div class="toc2">2.3  <a href="#CTSTrans">Translation</a></div>
               <div class="toc2">2.4  <a href="#CTSisc">Individual Specification Components</a></div>
               
               <div class="toc1">3  <a href="#CTSModFunctions">Synopsis of Module Functions</a></div>
               <div class="toc2">3.1  <a href="#CTSMessLayRunFun">Message Layer Runtime Functions</a></div>
               <div class="toc2">3.2  <a href="#CTSVocabLayerRunFun">Vocabulary Layer Runtime Functions</a></div>
               <div class="toc2">3.3  <a href="#CTSCodeTrans">Code Mapping Functions</a></div>
               <div class="toc2">3.4  <a href="#CTSMessLayBrowFun">Message Layer Browsing Functions</a></div>
               <div class="toc2">3.5  <a href="#CTSVocLayBrowFun">Vocabulary Layer Browsing Functions</a></div>
               
               <div class="toc1">4  <a href="#CTSMessAPIMod">The CTS Message API Model</a></div>
               <div class="toc2">4.1  <a href="#CTSMessAPIintro">Introduction</a></div>
               <div class="toc3">4.1.1  <a href="#CTSMessAPINot">Notation</a></div>
               <div class="toc2">4.2  <a href="#CTSMessAPIVoc">Vocabulary Domain</a></div>
               <div class="toc3">4.2.1  <a href="#CTSMessAPIAddConst">Additional Constraints
                     						Note: In this context, constraint refers to constraints on model itself, not attribute domains.</a></div>
               <div class="toc2">4.3  <a href="#CTSValueSet">Value Set</a></div>
               <div class="toc3">4.3.1  <a href="#CTSMessAPIlinkingt">Linking Vocabulary Domains to Value sets</a></div>
               <div class="toc3">4.3.2  <a href="#CTSMessAPIDefVal">Defining Value sets</a></div>
               <div class="toc3">4.3.3  <a href="#CTSMessAPIDefValsetcontent">Defining Value Set Content</a></div>
               <div class="toc3">4.3.4  <a href="#CTSMessAPIIncValSets">Including other value sets in a value set</a></div>
               <div class="toc3">4.3.5  <a href="#CTSMessAPIHeadCodes">Head codes</a></div>
               <div class="toc2">4.4  <a href="#CTSMessAPIRegCodeSys">Registered Code System</a></div>
               
               <div class="toc1">5  <a href="#CTSMessAPISpec">The CTS Message API Specification</a></div>
               <div class="toc2">5.1  <a href="#CTSMessAPIIntro">Introduction</a></div>
               <div class="toc2">5.2  <a href="#CTSCommMsgEle">Common CTS Message Elements</a></div>
               <div class="toc3">5.2.1  <a href="#CTSBasicDataEle">Basic Data Elements</a></div>
               <div class="toc3">5.2.2  <a href="#CTSConceptCodes">Concept Codes</a></div>
               <div class="toc3">5.2.3  <a href="#CTSIndentSec">Service Identification Section</a></div>
               <div class="toc3">5.2.4  <a href="#CTSExcepts">Exceptions</a></div>
               <div class="toc2">5.3  <a href="#CTSCommMsgRTAPI">The CTS Message Runtime API</a></div>
               <div class="toc3">5.3.1  <a href="#CTSMessRTIdSect">Message Runtime Identification Section</a></div>
               <div class="toc3">5.3.2  <a href="#CTSValCodedAtt">Validate a Coded Attribute</a></div>
               <div class="toc3">5.3.3  <a href="#CTSValTransCodeAtt">Validate the Translation(s) of a Coded Attribute</a></div>
               <div class="toc3">5.3.4  <a href="#CTSTransCodedAtt">Translate a Coded Attribute</a></div>
               <div class="toc3">5.3.5  <a href="#CTSFillDetCodedAtt">Fill in the Details of a Coded Attribute</a></div>
               <div class="toc3">5.3.6  <a href="#CTSDetOneCodedAtt">Determine Whether One Coded Attribute Subsumes a Second</a></div>
               <div class="toc3">5.3.7  <a href="#CTSTestTwoCodedAtt">Test Whether Two Coded Attributes are Equivalent</a></div>
               <div class="toc3">5.3.8  <a href="#CTSExpandVocDom">Expand a Vocabulary Domain</a></div>
               <div class="toc2">5.4  <a href="#CTSMessBrowAPI">CTS Message Browsing API</a></div>
               <div class="toc3">5.4.1  <a href="#CTSMessBrowIDinfo">Message Browser Identification Information</a></div>
               <div class="toc3">5.4.2  <a href="#CTSMessBrowDescSect">Message Browser Description Section</a></div>
               <div class="toc3">5.4.3  <a href="#CTSLookUpVocabDom">Look Up a Vocabulary Domain</a></div>
               <div class="toc3">5.4.4  <a href="#CTSLookUpValSet">Look Up a Value Set</a></div>
               <div class="toc3">5.4.5  <a href="#CTSLookUpDetInformCodeSys">Look up Detailed Information About a Code System</a></div>
               <div class="toc3">5.4.6  <a href="#CTSGetValueForVocabDom">Look up the Value Set for a Vocabulary Domain and Context</a></div>
               <div class="toc3">5.4.7  <a href="#CTSDetWhetConceptCode">Determine Whether a Concept Code is in a Value Set</a></div>
               
               <div class="toc1">6  <a href="#CTSVocAPISpec">Vocabulary API Model</a></div>
               <div class="toc2">6.1  <a href="#CTSVocabAPIIntro">Introduction</a></div>
               <div class="toc2">6.2  <a href="#CTSVocabAPICodeSys">CodeSystem</a></div>
               <div class="toc2">6.3  <a href="#CTSVocabAPICodedConcept">CodedConcept</a></div>
               <div class="toc2">6.4  <a href="#CTSVocabAPIConceptDes">ConceptDesignation</a></div>
               <div class="toc2">6.5  <a href="#CTSVocabAPIConceptProp">ConceptProperty</a></div>
               <div class="toc2">6.6  <a href="#CTSVocabAPIConceptRel">ConceptRelationship</a></div>
               
               <div class="toc1">7  <a href="#CTSVocabAPISpec">Vocabulary API Specification</a></div>
               <div class="toc2">7.1  <a href="#CTSVocabAPISpecIntro">Introduction</a></div>
               <div class="toc2">7.2  <a href="#CTSVocabAPIBasicTypes">Basic Types</a></div>
               <div class="toc3">7.2.1  <a href="#CTSVocabAPICodedDataElem">Coded Data Elements</a></div>
               <div class="toc3">7.2.2  <a href="#CTSVocabAPIServicesID">Service Identification Section</a></div>
               <div class="toc3">7.2.3  <a href="#CTSVocabAPIExceptions">Exceptions</a></div>
               <div class="toc2">7.3  <a href="#CTSVocabRTAPI">The CTS Vocabulary Runtime API</a></div>
               <div class="toc3">7.3.1  <a href="#CTSVocabRTAPICodeSys">Code Systems Supported by the API</a></div>
               <div class="toc3">7.3.2  <a href="#CTSVocabRTAPILookCodeSys">Look up Identifying Information About a Code System</a></div>
               <div class="toc3">7.3.3  <a href="#CTSVocabRTAPIValiConcept">Validate a Concept Identifier</a></div>
               <div class="toc3">7.3.4  <a href="#CTSVocabRTAPILookupDesigforcon">Look up a Designation for a Concept Identifier</a></div>
               <div class="toc3">7.3.5  <a href="#CTSVocabRTAPIDetWheterTwoConcodes">Determine Whether Two Concept Codes are Related</a></div>
               <div class="toc2">7.4  <a href="#CTSVocabBrowsingAPI">The CTS Vocabulary Browsing API</a></div>
               <div class="toc3">7.4.1  <a href="#CTSVocabBrowsingAPICodeSystSupt">Code Systems Supported by the API</a></div>
               <div class="toc3">7.4.2  <a href="#CTSVocabBrowsingAPISearchConCodesbyTxt">Search for Concept Codes by Designation Text</a></div>
               <div class="toc3">7.4.3  <a href="#CTSVocabBrowsingAPISearchConCodesbyProp">Search for Concept Codes by Property</a></div>
               <div class="toc3">7.4.4  <a href="#CTSVocabBrowsingAPIRetComplDesc">Return a Complete Description of a Coded Concept</a></div>
               <div class="toc3">7.4.5  <a href="#CTSVocabBrowsingAPILkupDesigConCode">Look up Designations for a Specific Concept Code</a></div>
               <div class="toc3">7.4.6  <a href="#CTSVocabBrowsingAPILkupPropConCode">Look up Properties for a Concept Code</a></div>
               <div class="toc3">7.4.7  <a href="#CTSVocabBrowsingAPIRetListConCode">Return a List of Related ConceptCodes</a></div>
               <div class="toc3">7.4.8  <a href="#CTSVocabBrowsingAPIFurtExpRetNode">Further Expand a Returned Node</a></div>
               
               <div class="toc1">8  <a href="#CTScodeTranMod">Code Mapping Model</a></div>
               <div class="toc2">8.1  <a href="#CTScodeTransModIntro">Introduction</a></div>
               <div class="toc2">8.2  <a href="#CTScodeTransCodeSysTrans">CTS Code Mapping</a></div>
               <div class="toc2">8.3  <a href="#CTScodeTransTransEntry">MapEntry</a></div>
               
               <div class="toc1">9  <a href="#CTScodeTranSpec">Code Mapping Specification</a></div>
               <div class="toc2">9.1  <a href="#CTScodeTransSpecIntro">Introduction</a></div>
               <div class="toc2">9.2  <a href="#CTScodeTransSpecId">Mapping Service Identification</a></div>
               <div class="toc2">9.3  <a href="#CTScodeTranSpecSupTrans">Code Map</a></div>
               <div class="toc2">9.4  <a href="#CTScodeTranExceptions">Exceptions</a></div>
               <div class="toc2">9.5  <a href="#CTScodeTranSpecTranConCode">Map a Concept Code</a></div>
               
               <div class="toc1">10  <a href="#CTSLangBind">CTS Programming Language Bindings (Informative)</a></div>
               <div class="toc2">10.1  <a href="#CTSLangBindIDLJava">Translating from IDL into Java</a></div>
               <div class="toc2">10.2  <a href="#CTSLangBindIDLWSDL">Translating from IDL to WSDL</a></div>
               <h3>Appendices</h3>
               
               <div class="toc1">A  <a href="#annexA">Annex A:   Summary of Service Requirements (Informative)</a></div>
               <div class="toc2">A.1  <a href="#AppendIntro">Introduction</a></div>
               <div class="toc2">A.2  <a href="#ServerInfoServices">Server information services</a></div>
               <div class="toc3">A.2.1  <a href="#ServerInfoServicesIntro">Introduction</a></div>
               <div class="toc3">A.2.2  <a href="#ServerInfoservRetInfoCap">Retrieve information about the capabilities and version of the server</a></div>
               <div class="toc3">A.2.3  <a href="#ServerInfoservRetInfoTerm">Retrieve information about terminologies accessible via the server</a></div>
               <div class="toc2">A.3  <a href="#TermMetaServ">Terminology metadata services</a></div>
               <div class="toc3">A.3.1  <a href="#TermMetaServIntro">Introduction</a></div>
               <div class="toc3">A.3.2  <a href="#TermMetaServRetInfo">Retrieve information about a terminology accessible via the server</a></div>
               <div class="toc3">A.3.3  <a href="#TermMetaServRetProps">Retrieve details of properties of concepts or terms in this terminology</a></div>
               <div class="toc3">A.3.4  <a href="#TermMetaServRetRela">Retrieve details of relationship types used in this terminology</a></div>
               <div class="toc3">A.3.5  <a href="#TermMetaServRetSerCri">Retrieve details of search criteria supported for this terminology</a></div>
               <div class="toc2">A.4  <a href="#TermContServ">Terminology content services</a></div>
               <div class="toc3">A.4.1  <a href="#TermContServRetInfo">Introduction</a></div>
               <div class="toc3">A.4.2  <a href="#TermContServRetProps">Retrieve the properties of a concept or term</a></div>
               <div class="toc3">A.4.3  <a href="#TermContServRetCon">Retrieve a set of concepts or terms matching specified text criteria</a></div>
               <div class="toc3">A.4.4  <a href="#TermContServRetRel">Retrieve a set of concepts or terms specified by relationships</a></div>
               <div class="toc3">A.4.5  <a href="#TermContServAll">Retrieve all concepts or terms in a particular vocabulary domain</a></div>
               <div class="toc3">A.4.6  <a href="#TermContServValUni">Validate a unique identifier</a></div>
               <div class="toc3">A.4.7  <a href="#MapAndTransCodesA">Mapping and transformation of codes and code phrases</a></div>
               
               <div class="toc1">B  <a href="#CodeSysUsed">Annex B: Code Systems Used in the CTS API (Informative)</a></div>
               
               <div class="toc1">C  <a href="#IDLRendering">Annex C: IDL Specification for the CTS API (Normative)</a></div>
               <div class="toc2">C.1  <a href="#TypesIDL">Basic HL7 Data Types</a></div>
               <div class="toc2">C.2  <a href="#CTSMAPIIdl">IDL Definition of CTS Message API</a></div>
               <div class="toc2">C.3  <a href="#CTSVAPIIdl">IDL Definition of CTS Vocabulary API</a></div>
               
               <div class="toc1">D  <a href="#XMLRendering">Annex D: XML Binding of the CTS API (Normative)</a></div>
               <div class="toc2">D.1  <a href="#MessageRuntimeWSDL">WSDL Binding for the CTS Message Runtime API</a></div>
               <div class="toc2">D.2  <a href="#MessageBrowserWSDL">WSDL Binding for the CTS Message Browser API</a></div>
               <div class="toc2">D.3  <a href="#MessageBrowserWSDL">WSDL Binding for the CTS Vocabulary Runtime API</a></div>
               <div class="toc2">D.4  <a href="#MessageBrowserWSDL">WSDL Binding for the CTS Vocabulary Browser API</a></div>
               <div class="toc2">D.5  <a href="#MessageBrowserWSDL">WSDL Binding for the CTS Code Mapping API</a></div>
               <hr />
            </div>
            <div class="subSection">
               <div class="header">
                  <h3><a name="prefBegin">Preface</a></h3>
               </div>
            </div>
            <div class="subSection">
               <!--divN/head-->
               <div class="header"><span class="icon"> </span><span class="number"><a name="CTSIntro"></a>i </span><span class="title">Introduction</span></div>
               <div class="body">
                  <p>
                     The Health Level Seven (HL7) Version 3 standards are based on a Reference Information Model (RIM) which is flexible and general
                     in structure. Representation of information within this model is dependent on the availability of terminological resources
                     which can be used to populate the properties of the model with appropriate semantic content.  Whenever possible, the HL7 Version
                     3 standard references existing terminological resources instead of attempting to create a new resource within the standard
                     itself.
                     
                  </p>
                  <p>
                     These external terminological resources can vary considerably in both content and structure. The HL7 standard needs to be
                     able to identify a minimum set of characteristics that any terminological resource must posses if it is to be used in a HL7
                     messaging environment.  One approach to this task would be to specify a common data structure which all terminological resources
                     would have to fit.  This approach, however, is not without drawbacks.  First, a common data structure would have to represent
                     a &#8216;least common denominator&#8217;, which could mask more advanced content and functional characteristics that might be particular
                     to a specific terminology.  Another drawback is that this approach puts much of the responsibility for maintaining and updating
                     the content on the HL7 standards body rather than the individual terminology developers.
                  </p>
                  <p>
                     The Common Terminology Services (CTS) specification was developed as an alternative to a common data structure.  Instead of
                     specifying what an external terminology must look like, HL7 has chosen to identify the common functional characteristics that
                     an external terminology must be able to provide.  As an example, an HL7 compliant terminology service will need to be able
                     to determine whether a given concept code is valid within the particular resource.  Instead of describing a table keyed by
                     the resource identifier and concept code, the CTS specification describes an Application Programming Interface (API) call
                     that takes a resource identifier and concept code as input and returns a true/false value.  Each terminology developer is
                     free to implement this API call in whatever way is most appropriate for them.
                  </p>
                  <p>
                     This document describes a set of API calls that represent the core functionality that will be needed by basic HL7 Version
                     3 applications.
                     
                  </p>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSIntroRevisions"></a>i - a </span><span class="title">Revision History</span></div>
                     <div class="body">
                        <ul style="margin-left:20px;">
                           <li><strong>04/12/3005</strong> - Minor typo corrections 
                           </li>
                           <li><strong>11/28/2004</strong> - Incorporated results of San Antonio ballot (Spring, 2004)
                           </li>
                           <li><strong>11/26/2004</strong> - Minor typos, etc. as submitted by Tony Weida (Apelon)
                           </li>
                           <li><strong>03/12/2004</strong>- Incorporated results of San Diego ballot (Winter, 2003)
                           </li>
                           <li><strong>11/01/2003</strong> - Final committee draft - released for ballot.
                           </li>
                        </ul>
                     </div>
                  </div>
               </div>
            </div>
            <hr title="Separator from body" />
            <div class="subSection">
               <!--divN/head-->
               <div class="header"><span class="icon"><img src="../../support/graphics/NormativeStandard.gif" alt="NormativeStandard" /></span><span class="number"><a name="CTSScope"></a>1 </span><span class="title">Scope and Design of the HL7 Common Terminology Server</span></div>
               <div class="body">
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSOutline"></a>1.1 </span><span class="title">Outline</span></div>
                     <div class="body">
                        <p>
                           The HL7 Common Terminology Services (HL7 CTS) defines an Application Programming Interface (API) that can be used by HL7 Version
                           3 software when accessing terminological content.  Before proceeding, we need to first state some things that the CTS specification
                           is not designed to do.
                        </p>
                        <ul style="margin-left:20px;">
                           <li>The current version of CTS is not intended to be a complete terminology service. The scope of CTS is restricted to the functionality
                              needed to design, implement and deploy an HL7 Version 3 compliant software package.  In much the same spirit as the XML/SGML
                              relationship, the HL7 CTS is meant to represent a proper subset of functionality that may be provided by more sophisticated
                              APIs such as that represented by the OMG TQS specification.
                              
                           </li>
                           <li>CTS is not intended to be a general purpose query language.  It is intended to specify only the specific services needed in
                              the HL7 implementation.
                              
                           </li>
                           <li>  CTS does not specify how the service is to be implemented.  It is intentionally silent when it comes to service advertising
                              and discovery, establishing and maintaining connections, and the delivery and routing of messages.  It is presumed that a
                              CTS implementation will use the underlying architecture that is most appropriate for the given implementation circumstances.
                           </li>
                        </ul>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSDesignPrincipals"></a>1.2 </span><span class="title">Design Principals</span></div>
                     <div class="body">
                        <p>The following general principles were used while developing the HL7 CTS specification:</p>
                        <ol>
                           <li>It shall be easy to write programs that use HL7 CTS.</li>
                           <li>
                              The intent of the HL7 CTS is to specify core services only.
                           </li>
                           <li>
                              The design of HL7 CTS shall be formal and concise.
                           </li>
                           <li>
                              The initial implementation technology for HL7 CTS will include XML. 
                           </li>
                           <li>
                              HL7 CTS shall be compatible with the nomenclature, model and approach expressed in the HL7 Vocabulary document, the Version
                              3 RIM and its derivative structures.
                           </li>
                           <li>
                              Whenever possible, the HL7 CTS shall remain a consistent subset of the Object Management Group (OMG) Terminology Query Services
                              (TQS) provided that the TQS terminology model does not conflict with other HL7 CTS design principles.   If it is discovered
                              that the TQS model is conflicting with HL7 CTS design principles or is incomplete, or incorrect, good faith efforts should
                              be made to notify the appropriate revision task force.
                           </li>
                           <li>
                              HL7 CTS should limit the assumptions about the form and structure of a terminology to those necessary to support HL7 implementations.
                           </li>
                        </ol>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSOther"></a>1.3 </span><span class="title">Other Relevant Work</span></div>
                     <div class="body">
                        <p>
                           There is no generally accepted standard for terminology services but there are several sources of material on this topic.
                        </p>
                        <ul style="margin-left:20px;">
                           <li><a href="http://www.omg.org/technology/documents/formal/lexicon_query_service.htm"><strong>The OMG Terminology Query Services (TQS)  specification</strong></a><br />
                              TQS specifies a full terminology service, but is not widely implemented and vendor support is minimal. The specification is
                              considered by some to be too "heavyweight" and also assumes a particular technical solution (CORBA). Since reliance on the
                              TQS standard is not an assumption of the HL7 standard, a more general approach to terminology services is needed - at least
                              to cover those areas in which HL7 is terminology dependent.
                              				
                           </li>
                           <li><a href="http://www.w3.org/TR/owl-features/"><strong>The DAML + OIL and OWL Web Ontology Language</strong></a><br />
                              While this is not strictly a terminology server specification it contains elements from the representation of ontological
                              aspects that are relevant to some of the large scale terminologies such as SNOMED Clinical Terms, NHS Clinical Terms Version
                              3 and GALEN. However, this web based proposal is also a heavy weight specification that is unlikely to facilitate early widespread
                              implementation.
                              				
                           </li>
                           <li><strong>API specifications specific to individual terminologies</strong><br />
                              							An example of this is the <a href="http://www.clininfo.co.uk/main/ct3.htm">"Read Code - Version 3 API"</a> specified for the NHS Clinical Terms in 1996 and revised in 1998. Work is proceeding to develop a SNOMED CT API based on
                              similar principles. There is an informal understanding that this specific API will converge with or utlize elements of the
                              CTS where tese are appropriate. A COM implementation of this is supported by at least one freeware coding engine <a href="http://www.clininfo.co.uk/main/ct3.htm"> (CLUE).</a> Specifications of this type identify many of the general functions needed to access a terminology. However, they are inevitably
                              specific to the needs of a particular terminology. Explicit support for a single defined terminology model allows efficient
                              implementation within an operational environment at the expense of the flexibility to access other terminologies.
                              				
                           </li>
                           <li><strong>General purpose RDBS interfaces including SQL and ODBC</strong><br />
                              						For "simple" code lists, a simple SQL query may be the most efficient way to look up a code. In addition to the code-value
                              / code-meaning pairs, however, many coding schemes have other relevant properties that may only be accessed through a secondary
                              service. This does not prevent the use of SQL but it requires a common model against which queries can be run and an efficient
                              means of returning the properties required. These additional properties apply to the scheme as a whole as well as to individual
                              entries in the terminology.
                              				
                           </li>
                           <li><strong>Terminology Query Language (TQL)</strong><br />TQL, formerly based on an SQL-like syntax, today implements as a URI-based language specific to terminology servers designed
                              by Michael Hogarth and colleagues from the University of California. TQL provides a rich mechanism that deals specifically
                              with common properties and relationships in terminological models. A <a href="http://jterm.ucdavis.edu">working Java-based implementation of TQL</a> can be downloaded for free from the web.
                              				
                           </li>
                        </ul>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSintroVersions"></a>1.4 </span><span class="title">Revision History and Versions</span></div>
                     <div class="body">
                        <p>
                           The version of the CTS API described in this document does very little when it comes to handling revisions and revision history.
                           Much of this effort has been deliberately postponed until a subsequent release.  The approach that we are taking is to get
                           a functional API out and in place and then enhance and revise it as needed.
                           
                        </p>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSStateExtensions"></a>1.5 </span><span class="title">Stateful and Session Extensions</span></div>
                     <div class="body">
                        <p> The CTS specification has been designed in a way that allows stateless/session independent operations.  While this allows
                           a wider variety of implementations, it does have the potential to negatively impact the performance of systems that could
                           take advantage of previously fetched references to value sets, concepts, etc.  It is not the intent of this specification
                           to preclude or prohibit such implementations.  Vendors who extend the CTS API to allow stateful and/or session-based implementations
                           are strongly encouraged to submit the extensions to the HL7 Vocabulary Technical Committee for inclusion in a subsequent version
                           of this specification.
                        </p>
                     </div>
                  </div>
               </div>
            </div>
            <div class="subSection">
               <!--divN/head-->
               <div class="header"><span class="icon"><img src="../../support/graphics/NormativeStandard.gif" alt="NormativeStandard" /></span><span class="number"><a name="CTSModules"></a>2 </span><span class="title">CTS Modules</span></div>
               <div class="body">
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSMandVAPI"></a>2.1 </span><span class="title">The Message and Vocabulary API</span></div>
                     <div class="body">
                        <p>
                           There are two distinct layers between HL7 Version 3 message processing applications and the target vocabularies.  The upper
                           layer, the <strong>Message API</strong>, communicates with the messaging software, and does so in terms of vocabulary domains, contexts, value sets, coded attributes
                           and other artifacts of the HL7 message model. The lower layer, the <strong>Vocabulary API</strong>, communicates with the terminology service software, and does so in terms of code systems, concept codes, designations, relationships
                           and other terminology specific entities.
                        </p>
                        <p>
                           <table width="90%">
                              <tr>
                                 <td class="figure"><pre><br /><img class="graphic" src="graphics/ctsFig1.gif" alt="ctsFig1.gif" /><br /><br /></pre></td>
                              </tr>
                           </table>
                        </p>
                        <p>The Message API is specific to HL7.  Its primary purpose is to allow a wide variety of message processing applications to
                           create, validate and translate CD-derived data types in a consistent and reproducible fashion.  
                        </p>
                        <p>
                           The Vocabulary API is intended to be generic<a name="fn-src1"></a><a href="#fn1"><sup style="font-size: smaller">1</sup></a>. It allows applications to query different terminologies<a name="fn-src2"></a><a href="#fn2"><sup style="font-size: smaller">2</sup></a>  in a consistent, well-defined fashion.  The Message API utilizes the Vocabulary API. The following figure shows an example
                           of a Message/Vocabulary interaction sequence.  In this example, an application requests that the Message Runtime Service fill
                           out the details of a CD-derived attribute.  The service, in turn, makes multiple calls to the Vocabulary API service in order
                           to get concept code designations, code system names, release versions, etc.
                        </p>
                        <p>
                           <table width="90%">
                              <tr>
                                 <td class="figure"><pre><br /><img class="graphic" src="graphics/ctsFig2.gif" alt="ctsFig2.gif" /><br /><br /></pre></td>
                              </tr>
                           </table>
                        </p>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSRuntime"></a>2.2 </span><span class="title">Runtime and Browsing Functions</span></div>
                     <div class="body">
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSGenActorClasses"></a>2.2.1 </span><span class="title">General HL7 CTS User (Actor) Classes</span></div>
                           <div class="body">
                              <p>The classes of actors that are anticipated to be users of the HL7 CTS API include:</p>
                              <ul style="margin-left:20px;">
                                 <li><strong>Message Creation Software</strong> &#8211; Software that is involved in the creation of HL7 messages.  From a vocabulary perspective, this process involves the translation
                                    of internal messages and data into the syntax and semantics of the HL7 Version 3 standard.
                                    
                                 </li>
                                 <li><strong>Message Processing Software</strong> &#8211; Software that receives, decodes and acts on the content of standard HL7 Version 3 messages.  This process may include validation,
                                    translation and inferencing steps.
                                    
                                 </li>
                                 <li><strong>RIM Modelers</strong> &#8211; The combination of people and tools that create and define HL7 Message content.
                                    
                                 </li>
                                 <li><strong>Software Developers</strong> &#8211; The people who build the software that creates, validates and processes HL7 Version 3 messages.
                                    
                                 </li>
                                 <li><strong>Vocabulary Translators</strong> &#8211; A combination of tools and people that translate the abstract HL7 Version 3 specification into the structure and terms
                                    of actual data processing applications.
                                    
                                 </li>
                              </ul>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSGenUserClasses"></a>2.2.2 </span><span class="title">The Divided Requirements Profile</span></div>
                           <div class="body">
                              <p>
                                 The first two actor classes &#8211; message creation and message processing &#8211; have a different requirements profile than do the
                                 succeeding three:
                              </p>
                              <ul style="margin-left:20px;">
                                 <li>Performance &#8211; High throughput and scalability are paramount for message creation and processing.  Modeling and mapping is
                                    considerably more tolerant of variable and potentially sub-optimal response times.
                                 </li>
                                 <li>Reliability &#8211; Message creation and processing software requires highly reliable software, while the modeling and authoring
                                    environment can tolerate some degree of unreliability and occasional failures.
                                 </li>
                                 <li>Functionality &#8211; Once solidified, the functional requirements of message creation and processing software will remain fixed.
                                    Any additional capabilities beyond those requirements will not be used.  Authoring and modeling, however, will continue to
                                    create new and different browsing and viewing demands, and any (useful) functional capabilities may be drawn upon at random
                                    times.
                                 </li>
                              </ul>
                              <p>Throughout the rest of this document, the message creation and processing profile will be referred to as the Runtime profile
                                 and the authoring and browsing as the Browser profile.
                              </p>
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSTrans"></a>2.3 </span><span class="title">Translation</span></div>
                     <div class="body">
                        <p>One additional functional area still needs to be specified &#8211; concept code translation between different code systems.  The
                           ability to translate between code sets for different realms is an integral part of the messaging API.  It is specified as
                           a separate interface at the vocabulary layer because translation is not specific to a single vocabulary.  Translation services
                           have the potential to be developed independently from one or more of the terminologies included in the translation process.
                           
                        </p>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSisc"></a>2.4 </span><span class="title">Individual Specification Components</span></div>
                     <div class="body">
                        <p>     The message/vocabulary split can be combined with the two requirements profiles to yield five separate modules:</p>
                        <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                           <caption align="BOTTOM"><a name="spec_comp"> </a>
                              			Table
                              			1: Specification Components
                           </caption>
                           <thead>
                              <tr>
                                 <th colspan="1"> </th>
                                 <th colspan="1">Runtime</th>
                                 <th colspan="1">Browser</th>
                              </tr>
                           </thead>
                           <tr>
                              <td colspan="1"><strong>Message API</strong></td>
                              <td colspan="1">Message Runtime</td>
                              <td colspan="1">Message Browser</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>Vocabulary API</strong></td>
                              <td colspan="1">Vocabulary Runtime</td>
                              <td colspan="1">Vocabulary Browser</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>Translation</strong></td>
                              <td colspan="2" align="center">Vocabulary Translation</td>
                           </tr>
                        </table>
                        <p>This specification is written in a fashion that should make it possible for each of these areas to be developed independently
                           and still interoperate.  Some terminology developers may wish to focus exclusively on the Vocabulary API, while some developers
                           may only implement the Runtime API. Theoretically, the Message API would only need to be implemented once, as the underlying
                           HL7 structure is public and available to everyone.  In practice, however, it may be necessary to more tightly couple the Message
                           Runtime with the Vocabulary Runtime to achieve the desired performance.
                        </p>
                     </div>
                  </div>
               </div>
            </div>
            <div class="subSection">
               <!--divN/head-->
               <div class="header"><span class="icon"><img src="../../support/graphics/NormativeStandard.gif" alt="NormativeStandard" /></span><span class="number"><a name="CTSModFunctions"></a>3 </span><span class="title">Synopsis of Module Functions</span></div>
               <div class="body">
                  <p>The following sections contain a brief synopsis of the functionality of each of the five modules described above. Some parameters
                     and utility functions have been omitted for the sake of clarity.  This is strictly a high level overview and all of the functions
                     below will be described in considerably more detail later in this document.
                  </p>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSMessLayRunFun"></a>3.1 </span><span class="title">Message Layer Runtime Functions</span></div>
                     <div class="body">
                        <p>The Message Layer Runtime Module describes the services used by the message creation, processing and translation software.</p>
                        <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                           <caption align="BOTTOM"><a name="rt_functions123"> </a>
                              			Table
                              			2: Message Layer Runtime Functions
                           </caption>
                           <thead>
                              <tr>
                                 <th colspan="1">Function</th>
                                 <th colspan="1">Inputs</th>
                                 <th colspan="1">Outputs</th>
                                 <th colspan="1">Description</th>
                              </tr>
                           </thead>
                           <tr>
                              <td colspan="1"><strong>getServiceName</strong></td>
                              <td colspan="1"> <br /></td>
                              <td colspan="1">Service name</td>
                              <td colspan="1">Return the name that was assigned to this service by the service provider.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getServiceVersion</strong></td>
                              <td colspan="1"> <br /></td>
                              <td colspan="1">Version identifier</td>
                              <td colspan="1">Return the current version of the service software.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getServiceDescription</strong></td>
                              <td colspan="1"> <br /></td>
                              <td colspan="1">Service description</td>
                              <td colspan="1">Return a description of the service function, authors, copyrights, etc.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getHL7ReleaseVersion</strong></td>
                              <td colspan="1"> <br /></td>
                              <td colspan="1">Version identifier</td>
                              <td colspan="1">Return the HL7 release version that is currently supported by this service.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getCTSVersion</strong></td>
                              <td colspan="1"> <br /></td>
                              <td colspan="1">Major and minor version number</td>
                              <td colspan="1">Return the CTS version that this service implements.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getSupportedMatchAlgorithms</strong></td>
                              <td colspan="1"> <br /></td>
                              <td colspan="1">List of match algorithms</td>
                              <td colspan="1">Return a list of string match algorithms implemented by this service.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getSupportedVocabularyDomains</strong></td>
                              <td colspan="1">Match text and algorithm, time limit and size limit</td>
                              <td colspan="1">List of vocabulary domain names</td>
                              <td colspan="1">Return a list of the vocabulary domains matching the supplied match text that are recognized by this service.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>validateCode</strong></td>
                              <td colspan="1">Name of the vocabulary domain, code to be validated, application context(realm), flag indicating whether to validate active
                                 concepts only and flag indicating whether to check both errors and warnings or just errors
                              </td>
                              <td colspan="1">List of errors and warnings.</td>
                              <td colspan="1">Validate the coded attribute for the supplied vocabulary domain and context.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>validateTranslation</strong></td>
                              <td colspan="1">Name of the vocabulary domain, coded attribute containing translation(s) to be validated, application context(realm), flag
                                 indicating whether to validate active concepts only and flag indicating whether to check both errors and warnings or just
                                 errors
                              </td>
                              <td colspan="1">List of errors and warnings.</td>
                              <td colspan="1">Validate the CD translations, if any, for the supplied vocabulary domain and context.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>translateCode</strong></td>
                              <td colspan="1">Name of the vocabulary domain, coded attribute to be translated, target coding system, and target application context(realm)</td>
                              <td colspan="1">Translation of the coded attribute.</td>
                              <td colspan="1">Translate the supplied coded attribute into a form that uses the target code system or uses whatever code system is appropriate
                                 for the supplied context
                              </td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>fillInDetails</strong></td>
                              <td colspan="1">Coded attribute and target language code</td>
                              <td colspan="1">Coded attribute value with details supplied.</td>
                              <td colspan="1">Fill in the optional parts of the coded attribute such as the concept display name, the code system name and code system version.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>subsumes</strong></td>
                              <td colspan="1">Parent coded attribute, child coded attribute</td>
                              <td colspan="1">True / False</td>
                              <td colspan="1">Determine whether the parent coded attribute subsumes (or implies) the child.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>areEquivalent</strong></td>
                              <td colspan="1">First coded attribute, second coded attribute</td>
                              <td colspan="1">True / False</td>
                              <td colspan="1">Determine whether the two coded attributes are &#8216;equivalent&#8217;.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>lookupValueSetExpansion</strong></td>
                              <td colspan="1">Name of the vocabulary domain, application context(realm), language for expansion text, flag indicating whether to do a complete
                                 expansion of just one level, time limit and size limit
                              </td>
                              <td colspan="1">Hierarchical expansion of the value set associated with the domain in the supplied context</td>
                              <td colspan="1">Return a hierarchical list of selectable concepts for the supplied vocabulary domain and context.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>expandValueSetExpansionContext</strong></td>
                              <td colspan="1">Opaque expansion context returned from previous lookupValueSetExpansion or expandValueSetExpansionContext call</td>
                              <td colspan="1">Further hierarchical expansion of the value set associated with the domain in the supplied context</td>
                              <td colspan="1">Return further expansion on nested value set contents.</td>
                           </tr>
                        </table>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabLayerRunFun"></a>3.2 </span><span class="title">Vocabulary Layer Runtime Functions</span></div>
                     <div class="body">
                        <p>This set of functions is used by the Message Layer Runtime and Message Layer Browser services as well as the Vocabulary Layer
                           Browser service.  These functions can also be used in a stand-alone fashion.
                        </p>
                        <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                           <caption align="BOTTOM"><a name="vcrt_functions"> </a>
                              			Table
                              			3: Vocabulary Layer Runtime Functions
                           </caption>
                           <thead>
                              <tr>
                                 <th colspan="1">Function</th>
                                 <th colspan="1">Input</th>
                                 <th colspan="1">Output</th>
                                 <th colspan="1">Description</th>
                              </tr>
                           </thead>
                           <tr>
                              <td colspan="1"><strong>getServiceName</strong></td>
                              <td colspan="1"> <br /></td>
                              <td colspan="1">Service name</td>
                              <td colspan="1">Return the name that was assigned to this service by the service provider.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getServiceVersion</strong></td>
                              <td colspan="1"> <br /></td>
                              <td colspan="1">Version identifier</td>
                              <td colspan="1">Return the current version of the service software.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getServiceDescription</strong></td>
                              <td colspan="1"> <br /></td>
                              <td colspan="1">Service description</td>
                              <td colspan="1">Return a description of the service function, authors, copyrights, etc.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getCTSVersion</strong></td>
                              <td colspan="1"> <br /></td>
                              <td colspan="1">Major and minor version number</td>
                              <td colspan="1">Return the CTS version that this service implements.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getSupportedCodeSystems</strong></td>
                              <td colspan="1">Time limit and size limit</td>
                              <td colspan="1">List of code systems and versions supported by the service implementation. </td>
                              <td colspan="1">Return the identifier, name and release versions of all code systems that are supported by the service. </td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>lookupCodeSystemInfo</strong></td>
                              <td colspan="1">Code system name or identifier</td>
                              <td colspan="1">Description of the code system including name, id, description, version, supported languages, supported relations, supported
                                 properties, etc.
                              </td>
                              <td colspan="1">Return detailed information about a specific code system.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>isConceptIdValid</strong></td>
                              <td colspan="1">Code system identifier, concept code and flag indicating whether inactive concepts are considered valid</td>
                              <td colspan="1">True / False
                                 
                              </td>
                              <td colspan="1">Determine whether concept code is currently valid in the specified code system</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>lookupDesignation</strong></td>
                              <td colspan="1">Code system identifier, concept code and target language code</td>
                              <td colspan="1">Designation text</td>
                              <td colspan="1">Return the preferred designation for the concept code in the supplied language</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>areCodesRelated</strong></td>
                              <td colspan="1">Code system identifier, source concept code, target concept code, relationship code, relationship qualifiers. and flag indicating
                                 whether to use only directly related codes or the transitive closure of the relationship
                              </td>
                              <td colspan="1">True/False</td>
                              <td colspan="1">Determine whether the named relationship exists between the source and target codes.</td>
                           </tr>
                        </table>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSCodeTrans"></a>3.3 </span><span class="title">Code Mapping Functions</span></div>
                     <div class="body">
                        <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                           <caption align="BOTTOM"><a name="ct_functions"> </a>
                              			Table
                              			4: Code Mapping Functions
                           </caption>
                           <thead>
                              <tr>
                                 <th colspan="1">Function</th>
                                 <th colspan="1">Input</th>
                                 <th colspan="1">Output</th>
                                 <th colspan="1">Description</th>
                              </tr>
                           </thead>
                           <tr>
                              <td colspan="1"><strong>getServiceName</strong></td>
                              <td colspan="1"> <br /></td>
                              <td colspan="1">Service name</td>
                              <td colspan="1">Return the name that was assigned to this service by the service provider.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getServiceVersion</strong></td>
                              <td colspan="1"> <br /></td>
                              <td colspan="1">Version identifier</td>
                              <td colspan="1">Return the current version of the service software.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getServiceDescription</strong></td>
                              <td colspan="1"> <br /></td>
                              <td colspan="1">Service description</td>
                              <td colspan="1">Return a description of the service function, authors, copyrights, etc.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getCTSVersion</strong></td>
                              <td colspan="1"> <br /></td>
                              <td colspan="1">Major and minor version number</td>
                              <td colspan="1">Return the CTS version that this service implements.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getSupportedMaps</strong></td>
                              <td colspan="1"> <br /></td>
                              <td colspan="1">List of named sets consisting of from code system id, name and version, to code system id, name, and version and a mapping
                                 description
                              </td>
                              <td colspan="1">Return a list of mappings that are supported by this service.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>mapConceptCode</strong></td>
                              <td colspan="1">Source code system identifier and concept code, target code system identifier and name of mapping resource</td>
                              <td colspan="1">Corresponding concept code in target system and quality indicator</td>
                              <td colspan="1">Return the mapping of the supplied concept code from the source code system to the target code system using the named mapping
                                 resource.
                              </td>
                           </tr>
                        </table>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSMessLayBrowFun"></a>3.4 </span><span class="title">Message Layer Browsing Functions</span></div>
                     <div class="body">
                        <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                           <caption align="BOTTOM"><a name="mlb_functions"> </a>
                              			Table
                              			5: Message Layer Browsing Functions
                           </caption>
                           <thead>
                              <tr>
                                 <th colspan="1">Function</th>
                                 <th colspan="1">Input</th>
                                 <th colspan="1">Output</th>
                                 <th colspan="1">Description</th>
                              </tr>
                           </thead>
                           <tr>
                              <td colspan="1"><strong>getServiceName</strong></td>
                              <td colspan="1"> <br /></td>
                              <td colspan="1">Service name</td>
                              <td colspan="1">Return the name that was assigned to this service by the service provider.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getServiceVersion</strong></td>
                              <td colspan="1"> <br /></td>
                              <td colspan="1">Version identifier</td>
                              <td colspan="1">Return the current version of the service software.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getServiceDescription</strong></td>
                              <td colspan="1"> <br /></td>
                              <td colspan="1">Service description</td>
                              <td colspan="1">Return a description of the service function, authors, copyrights, etc.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getHL7ReleaseVersion</strong></td>
                              <td colspan="1"> <br /></td>
                              <td colspan="1">Version identifier</td>
                              <td colspan="1">Return the HL7 release version that is currently supported by this service.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getCTSVersion</strong></td>
                              <td colspan="1"> <br /></td>
                              <td colspan="1">Major and minor version number</td>
                              <td colspan="1">Return the CTS version that this service implements.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getSupportedMatchAlgorithms</strong></td>
                              <td colspan="1"> </td>
                              <td colspan="1">List of string match algorithms implemented by the browser service
                                 
                              </td>
                              <td colspan="1"> </td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getSupportedAttributes</strong></td>
                              <td colspan="1">Match text and algorithm, time limit and size limit</td>
                              <td colspan="1">List of RIM attributes known to the browser
                                 
                              </td>
                              <td colspan="1">Returns a list of RIM attributes whose name matches the supplied match text that are known to the browser.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getSupportedVocabularyDomains</strong></td>
                              <td colspan="1">Match text and algorithm, time limit and size limit</td>
                              <td colspan="1">List of vocabulary domains known to the browser
                                 
                              </td>
                              <td colspan="1">Returns a list of vocabulary domains whose name matches the supplied match text that are known to the browser.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getSupportedValueSets</strong></td>
                              <td colspan="1">Match text and algorithm, time limit and size limit</td>
                              <td colspan="1">List of value sets known to the browser</td>
                              <td colspan="1">Returns a list of value sets whose name matches the supplied match text that are known to the browser.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getSupportedCodeSystems</strong></td>
                              <td colspan="1">Match text and algorithm, time limit and size limit</td>
                              <td colspan="1">List of code systems known to the browser</td>
                              <td colspan="1">Returns a list of code systems whose name matches the supplied match text that are known to the browser.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>lookupVocabularyDomain</strong></td>
                              <td colspan="1">Name of vocabulary domain</td>
                              <td colspan="1">Domain name, description, domains restricted by this domain, list of RIM attributes that use this domain, and list of value
                                 sets that represent this domain
                              </td>
                              <td colspan="1">Look up all of the information known about the supplied vocabulary domain </td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>lookupValueSet</strong></td>
                              <td colspan="1">Value set name or identifier</td>
                              <td colspan="1">Detailed value set description, including name, identifier, description, list of value sets used to construct the set, value
                                 sets that this set helps define, list of concept codes the value set references, etc.
                              </td>
                              <td colspan="1">Look up detailed information on a value set (including vocabulary domains, constructors, etc).</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>lookupCodeSystem</strong></td>
                              <td colspan="1">Code system name or identifier</td>
                              <td colspan="1">Name, id, copyright, release and registration information</td>
                              <td colspan="1">Look up details on a code system</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>lookupValueSetForDomain</strong></td>
                              <td colspan="1">Name of vocabulary domain and application context(realm)</td>
                              <td colspan="1">Name and id of the value set used for this vocabulary domain</td>
                              <td colspan="1">
                                 Return the identifier of the value set that would be used for the vocabulary in the supplied context (if any).
                                 
                              </td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>isCodeInValueSet</strong></td>
                              <td colspan="1">Value set name or identifier, code system identifier and concept code, and indicator whether to include the "head code" as
                                 part of the value set
                              </td>
                              <td colspan="1">True/False
                                 
                              </td>
                              <td colspan="1">
                                 Determine whether the supplied concept code is a valid value in the supplied value set
                                 
                              </td>
                           </tr>
                        </table>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocLayBrowFun"></a>3.5 </span><span class="title">Vocabulary Layer Browsing Functions</span></div>
                     <div class="body">
                        <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                           <caption align="BOTTOM"><a name="vlb_functions"> </a>
                              			Table
                              			6: Vocabulary Layer Browsing Functions
                           </caption>
                           <thead>
                              <tr>
                                 <th colspan="1">Function</th>
                                 <th colspan="1">Input</th>
                                 <th colspan="1">Output</th>
                                 <th colspan="1">Description</th>
                              </tr>
                           </thead>
                           <tr>
                              <td colspan="1"><strong>getServiceName</strong></td>
                              <td colspan="1"> <br /></td>
                              <td colspan="1">Service name</td>
                              <td colspan="1">Return the name that was assigned to this service by the service provider.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getServiceVersion</strong></td>
                              <td colspan="1"> <br /></td>
                              <td colspan="1">Version identifier</td>
                              <td colspan="1">Return the current version of the service software.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getServiceDescription</strong></td>
                              <td colspan="1"> <br /></td>
                              <td colspan="1">Service description</td>
                              <td colspan="1">Return a description of the service function, authors, copyrights, etc.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getCTSVersion</strong></td>
                              <td colspan="1"> <br /></td>
                              <td colspan="1">Major and minor version number</td>
                              <td colspan="1">Return the CTS version that this service implements.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getSupportedMatchAlgorithms</strong></td>
                              <td colspan="1"> </td>
                              <td colspan="1">List of string match algorithms implemented by the browser service
                                 
                              </td>
                              <td colspan="1"> </td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>getSupportedCodeSystems</strong></td>
                              <td colspan="1">Time limit and size limit</td>
                              <td colspan="1">List of supported code systems and their descriptions</td>
                              <td colspan="1"> </td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>lookupConceptCodesByDesignation</strong></td>
                              <td colspan="1">Code system identifier, match text and algorithm, target language code, flag indicating whether non-active concepts should
                                 be retrieved, time limit and size limit
                              </td>
                              <td colspan="1">List of code system identifiers and concept codes.</td>
                              <td colspan="1">Return a list of concept codes that have designations that match the supplied match string in the supplied language, if any.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>lookupConceptCodesByProperty</strong></td>
                              <td colspan="1">Code system identifier, match text and algorithm, target language code, flag indicating whether non-active concepts whould
                                 be retrieved, optional list of property mime types, time limit and size limit
                              </td>
                              <td colspan="1">List of code system id / concept codes.</td>
                              <td colspan="1">Return a list of concept codes that have properties that meet the supplied criteria</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>lookupCompleteCodedConcept</strong></td>
                              <td colspan="1">Code system identifier and concept code</td>
                              <td colspan="1">Everything that is known about the concept (designations, properties, relationships, etc.)</td>
                              <td colspan="1">Return a complete description of the supplied concept code</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>lookupDesignations</strong></td>
                              <td colspan="1">Code system id and concept code, match text and algorithm, target language</td>
                              <td colspan="1">List of designations</td>
                              <td colspan="1">Return all designations for the supplied concept code that match the supplied criteria.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>lookupProperties</strong></td>
                              <td colspan="1">Code system id and concept code, match text and algorithm, list of property codes to search, list of mime types to match and
                                 target language code
                              </td>
                              <td colspan="1">List of concept properties (property code, value, language, mime type)</td>
                              <td colspan="1">Return the properties of the given code system id / concept code that match the supplied criteria.</td>
                           </tr>
                           <tr>
                              <td colspan="1"><strong>lookupCodeExpansion</strong></td>
                              <td colspan="1">Code system id and concept code, relationship code, relationship direction indicator, target languag code, size limit and
                                 time limit
                              </td>
                              <td colspan="1">Hierarchical code expansion list</td>
                              <td colspan="1">Recursively list the concept codes that are related to the supplied concept, including the preferred designation for the codes.</td>
                           </tr>
                        </table>
                     </div>
                  </div>
               </div>
            </div>
            <div class="subSection">
               <!--divN/head-->
               <div class="header"><span class="icon"><img src="../../support/graphics/NormativeStandard.gif" alt="NormativeStandard" /></span><span class="number"><a name="CTSMessAPIMod"></a>4 </span><span class="title">The CTS Message API Model</span></div>
               <div class="body">
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSMessAPIintro"></a>4.1 </span><span class="title">Introduction</span></div>
                     <div class="body">
                        <p>This section describes the model that underlies the <em>CTS Message API</em>.  It describes the relationship between HL7 coded attributes and vocabulary. It is based on the
                           <a href="http://www.hl7.org/library/data-model/met/modelpage.html">HL7_V3_Meta-Model Version 1.16</a> and, with the exception of the coloring scheme, attempts to remain consistent with its notation and data types.  This document
                           does not provide a complete or in-depth model of all the logical entities that might comprise a coding system<a name="fn-src3"></a><a href="#fn3"><sup style="font-size: smaller">3</sup></a>. Its primary purpose is to describe the classes and relationships that have a direct bearing on the contents of HL7 coded
                           attributes from the perspective of a meta-model.
                        </p>
                        <p>The Vocabulary API model describes the CTS model from vocabulary perspective and provides more detail about concept codes,
                           designations, relationships, etc.
                        </p>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSMessAPINot"></a>4.1.1 </span><span class="title">Notation</span></div>
                           <div class="body">
                              <p>In the diagrams that follow, the classes whose instances are solely the responsibility of the HL7 Modeling Groups are colored
                                 green and classes that represent content that is managed by either HL7 or a third party terminology provider are colored 
                                 blue.  Existing meta-model classes will be colored a pale yellow.  The authors of this document have little or no control
                                 over the content and structure of these existing classes &#8211; they are in the model solely as reference points.
                              </p>
                              <p>The descriptions that follow the model use a semi-formal notation based on the model content :
                                 
                              </p>
                              <ul style="margin-left:20px;">
                                 <li>Class names will be represented in <strong>boldface</strong> (e.g. <strong>VocabularyDomain</strong>, <strong>ValueSet</strong>)
                                 </li>
                                 <li>Attribute names will appear in <em>italics</em> (e.g. <em>vocabularyDomain_name</em>, <em>valueSet_id</em>)
                                 </li>
                                 <li>Relationships will be <u>underlined</u> (e.g. a <strong>VocabularyDomain</strong> is <u>represented by</u> zero or more <strong>VocabularyDomainValueSets</strong>)
                                 </li>
                              </ul>
                              <p>
                                 Where appropriate, relationship cardinality will be expressed by the forms below or something similar:
                              </p>
                              <ul style="margin-left:20px;">
                                 <li>1..1 "<strong>Class 1</strong> must  <u>relationship</u> with exactly one <strong>Class 2</strong> "
                                 </li>
                                 <li>0..1      "<strong>Class 1</strong>  may be <u>relationship</u> by at most one <strong>Class 2</strong> "
                                 </li>
                                 <li>1..*     "<strong>Class 1</strong>  must be <u>relationship</u> by one or more <strong>Class 2</strong> "
                                 </li>
                                 <li>0..*     "<strong>Class 1</strong>  may be <u>relationship</u> by zero or more <strong>Class 2</strong> "
                                 </li>
                              </ul>
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSMessAPIVoc"></a>4.2 </span><span class="title">Vocabulary Domain</span></div>
                     <div class="body">
                        <p>
                           A vocabulary domain serves as the link between an HL7 coded attribute and the set(s) of valid concept codes for that attribute.
                           A vocabulary domain represents an abstract conceptual space such as "countries of the world", "the gender of a person used
                           for administrative purposes", etc. 
                        </p>
                        <p>The figure below below shows the relationship between vocabulary domains and HL7 attributes.</p>
                        <p>
                           <table width="90%">
                              <tr>
                                 <td class="figure"><pre><a href="graphics/L-ctsFig3.gif" target="_blank" style="border:0">Link to wide graphic (opens in a new window)</a></pre></td>
                              </tr>
                           </table>
                        </p>
                        <p>An <strong>Attribute_domain_constraint </strong>must <u>constrain</u> the possible values of exactly one RIM <strong>attribute</strong> by <u>limiting the possible values</u> to those described by exactly one <strong>VocabularyDomain</strong>.
                           A <strong>VocabularyDomain</strong> may <u>describe the possible values</u> of zero or more <strong>Attribute_domain_constraints</strong>.  A <strong>DIM_attribute_row </strong> must be <u>based on</u> exactly one <strong>Attribute</strong> from the HL7 model, and serves to express the presence of the attribute in a specific design information model (DIM).  <strong>DIM_attribute_rows</strong> inherit all of the constraints of the <strong>Attribute</strong> that they are <u>based on</u>, and <strong>DIM_attribute_row </strong> may be <u>constrained by</u> zero or more <strong>DIM_attribute_domain_constraints</strong>.
                        </p>
                        <p>
                           A hierarchical message description (HMD) completely defines the structure of a set of messages.  <strong>HMD_attribute_rows </strong> are a part of a HMD, and each HMD_attribute_row is <u>based on</u> exactly one <strong>DIM_attribute_row </strong>.  An <strong>HMD_attribute_row</strong> inherits all of the constraints of the corresponding <strong>DIM_attribute_row </strong> and may be yet further <u>constrained by</u> at most one <strong>HMD_domain_constraint</strong>. 
                        </p>
                        <p>
                           
                           Each <strong>VocabularyDomain</strong> has a unique <em>name</em> along with a <em>description</em> of the conceptual space that it represents.  <strong>VocabularyDomains</strong> that <u>describe the possible values</u> of <strong>DIM_attribute_domain_constraints</strong> or <strong>HMD_domain_constraints</strong><u> restrict</u> the conceptual space of the corresponding <strong>DIM_attribute_domain</strong> or <strong>Attribute_domain_constraint </strong>upon which the domain is based.
                        </p>
                        <p>
                           The example below shows how vocabulary domains might be constrained between the attribute, the DIM attribute row and the HMD
                           attribute row.
                        </p>
                        <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                           <caption align="BOTTOM"><a name="t7"> </a>
                              			Table
                              			7: Sample Vocabulary Domain Restriction
                           </caption>
                           <thead>
                              <tr>
                                 <th colspan="1">Attribute</th>
                                 <th colspan="1">Vocabulary Domain</th>
                                 <th colspan="1">Description</th>
                                 <th colspan="1">Restricts Domain</th>
                              </tr>
                           </thead>
                           <tr>
                              <td colspan="1"><em>sourceCountry</em></td>
                              <td colspan="1">Country</td>
                              <td colspan="1">A country of the world</td>
                              <td colspan="1">-</td>
                           </tr>
                           <tr>
                              <td colspan="1"><em>sourceCountry</em>(DIM)                                         
                              </td>
                              <td colspan="1">HL7MemberCountry</td>
                              <td colspan="1">Any country that is an official member of HL7</td>
                              <td colspan="1">Country</td>
                           </tr>
                           <tr>
                              <td colspan="1"><em>sourceCountry</em>(HMD)                                         
                              </td>
                              <td colspan="1">EUHL7MemberCountry</td>
                              <td colspan="1">Any EU country that is an official member of HL7</td>
                              <td colspan="1">HL7MemberCountry</td>
                           </tr>
                        </table>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSMessAPIAddConst"></a>4.2.1 </span><span class="title">Additional Constraints
                                 						<a name="fn-src4"></a><a href="#fn4"><sup style="font-size: smaller">4</sup></a></span></div>
                           <div class="body">
                              <ul style="margin-left:20px;">
                                 <li>An <strong>Attribute</strong> must be <u>constrained by</u> exactly one <strong>Attribute_domain_constraint </strong>if and only if the <em>attribute type</em> is "coded".
                                 </li>
                                 <li>Any <strong>VocabularyDomain</strong> that describes the possible values of a DIM_attribute_domain_constraint must be <u>based on</u> the <strong>VocabularyDomain</strong> of the corresponding <strong>Attribute</strong>.
                                 </li>
                                 <li>Any <strong>VocabularyDomain</strong> that <u>describes the possible values of</u> a <strong>RIM_attribute_domain_constraint</strong> must be <u>based on</u> the <strong>VocabularyDomain</strong> of the corresponding <strong>DIM_attribute_row </strong> if one exists and on the <strong>VocabularyDomain</strong> of the corresponding Attribute if one doesn&#8217;t.
                                 </li>
                              </ul>
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSValueSet"></a>4.3 </span><span class="title">Value Set</span></div>
                     <div class="body">
                        <p>
                           A vocabulary domain describes a &#8216;conceptual space&#8217; from which the values of an attribute can be drawn.  Before an attribute
                           can be used in a message, however, the actual list of concept codes needs to be defined.  A list of valid concept codes is
                           referred to as a value set.
                        </p>
                        <p>
                           <table width="90%">
                              <tr>
                                 <td class="figure"><pre><a href="graphics/L-ctsFig4.gif" target="_blank" style="border:0">Link to wide graphic (opens in a new window)</a></pre></td>
                              </tr>
                           </table>
                        </p>
                        <p>
                           A <strong>VocabularyDomain</strong> may be <u>represented by</u> zero or more <strong>ValueSets</strong>.  While it is possible for abstract RIM and DIM attributes to not be <u>represented by</u> any <strong>ValueSets</strong> at all, <strong>VocabularyDomains</strong> that <u>describe the possible values of </u>
                           					Coded <strong>Attributes</strong> used in an actual messages must be <u>represented by</u> at least one <strong>Value_set</strong>.
                        </p>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSMessAPIlinkingt"></a>4.3.1 </span><span class="title">Linking Vocabulary Domains to Value sets</span></div>
                           <div class="body">
                              <p>A <strong>VocabularyDomainValueSet</strong> represents an association between exactly one <strong>VocabularyDomain</strong> and exactly one <strong>ValueSet</strong>.  Each association between a <strong>VocabularyDomain</strong> and a <strong>ValueSet</strong> may <u>apply in</u> zero or one <strong>ApplicationContexts</strong>.  An <strong>ApplicationContext</strong> names a specific geopolitical entity (e.g. EU, Canada) and/or practice setting (e.g. veterinary medicine, public health),
                                 etc. and may be a <u>setting_for</u> zero or more <strong>VocabularyDomainValueSet</strong> associations.
                              </p>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSMessAPIDefVal"></a>4.3.2 </span><span class="title">Defining Value sets</span></div>
                           <div class="body">
                              <p>A <strong>ValueSet</strong> may <u>include</u> a list of zero or more <strong>CodedConcepts</strong> drawn from a single <strong>CodeSystem</strong>. A <strong>ValueSet</strong> can represent:
                              </p>
                              <ul style="margin-left:20px;">
                                 <li>All of the <strong>CodedConcepts</strong><u> defined in</u> exactly one <strong>CodeSystem</strong></li>
                                 <li>A specified list of <strong>CodedConcepts</strong> that are <u>defined in</u> exactly one <strong>CodeSystem</strong></li>
                                 <li>The set of <strong>CodedConcepts</strong> represented by another <strong>ValueSet</strong>.
                                 </li>
                              </ul>
                              <p>
                                 The details about each of these forms will be described in the next section.  First we describe the characteristics that all
                                 value sets have in common.
                              </p>
                              <p>
                                 It is anticipated that there will be far too many value sets to be able to assign a unique mnemonic or meaningful name to
                                 all of them.  The primary identifier for a ValueSet is a meaningless numeric identifier, the valueSet_id<a name="fn-src5"></a><a href="#fn5"><sup style="font-size: smaller">5</sup></a>.  The valueSet_name can also contain a unique &#8216;meaningful&#8217; identifier where appropriate.  The valueSet_name is designed for
                                 communication between carbon-based life forms.
                                 
                              </p>
                              <p>A <strong>ValueSet</strong> has a <em>description</em> that describes the intent and purpose of the set.  It also has a <em>definingExpression</em>, which is intended to carry a formal machine readable expression that can be used to construct the <strong>ValueSet</strong>. The meaning and interpretation of <em>definingExpression</em> is not part of this specification. Both <em>description</em> and <em>definingExpression</em> are optional.  The <strong>ValueSet</strong> attribute, <em>allCodes</em>, is described below.
                              </p>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSMessAPIDefValsetcontent"></a>4.3.3 </span><span class="title">Defining Value Set Content</span></div>
                           <div class="body">
                              <p>A <strong>ValueSet</strong> must either be <u>constructed_using</u> at least one other <strong>ValueSet</strong> or it must be <u>based on</u> exactly one <strong>CodeSystem</strong> or both<a name="fn-src6"></a><a href="#fn6"><sup style="font-size: smaller">6</sup></a>. A <strong>CodeSystem</strong><u> defines</u> a set of zero or more <strong>CodedConcepts</strong> which, in turn, signify relevant classes or entities within a particular domain of interest.  <strong>CodeSystems</strong> can range from a simple table of genders to classification systems such as ICD-9 to rich, description-logic based systems
                                 such as OpenGalen or SNOMED-CT.  As many <strong>CodeSystems</strong> undergo periodic revision, it is useful to record the <strong>ReleaseVersion</strong> that was <u>used to define</u> a given <strong>ValueSet</strong> at a particular point in time. A <strong>ValueSet</strong> may be <u>defined_using</u> at most one <strong>ReleaseVersion</strong>.  A <strong>ReleaseVersion</strong> may be <u>used_to_define</u> zero or more <strong>ValueSets</strong>. The <u>defined using</u> relationship is strictly informative, and services may use a later revision of the code system to represent the <strong>ValueSet</strong> content.<a name="fn-src7"></a><a href="#fn7"><sup style="font-size: smaller">7</sup></a>Code systems will be discussed in considerably more detail in a later section describing the CTS Vocabulary API.
                              </p>
                              <div class="subSubSubSection">
                                 <div class="header"><span class="icon"> </span><span class="number"><a name="CTSMessAPIRepCont"></a>4.3.3.1 </span><span class="title">Representing the entire contents of a code system</span></div>
                                 <div class="body">
                                    <p>A <strong>ValueSet</strong> can be defined to include all of the <strong>CodedConcepts</strong><u> defined in</u> the <strong>CodeSystem</strong> upon which the <strong>ValueSet</strong> is <u>based</u> by setting the <em>allCodes</em> attribute to TRUE. A <strong>ValueSet</strong> with <em>allCodes</em> set to TRUE may not <u>include</u> any <strong>CodeReferences</strong>.
                                    </p>
                                    <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                                       <caption align="BOTTOM"><a name="t8"> </a>
                                          			Table
                                          			8: A value set representing an entire code system
                                       </caption>
                                       <thead>
                                          <tr>
                                             <th colspan="1">valueSet_id</th>
                                             <th colspan="1">valueSet_name</th>
                                             <th colspan="1">description</th>
                                             <th colspan="1">all Codes</th>
                                             <th colspan="1">CodeSystem</th>
                                             <th colspan="1">Release Version</th>
                                          </tr>
                                       </thead>
                                       <tr>
                                          <td colspan="1">
                                             2.16.840.1.113883.1.11.1
                                             
                                          </td>
                                          <td colspan="1">AdministrativeGender</td>
                                          <td colspan="1">The gender of a person used for administrative purposes (as opposed to clinical gender)</td>
                                          <td colspan="1">True</td>
                                          <td colspan="1">2.16.840.1.113883.5.1</td>
                                          <td colspan="1">5</td>
                                       </tr>
                                    </table>
                                 </div>
                              </div>
                              <div class="subSubSubSection">
                                 <div class="header"><span class="icon"> </span><span class="number"><a name="CTSMessAPIRepCodeSys"></a>4.3.3.2 </span><span class="title">Representing Selected Parts of a Code System</span></div>
                                 <div class="body">
                                    <p>A <strong>ValueSet</strong> may include zero or more <strong>CodedConcepts</strong><u> defined in</u> the <strong>CodeSystem</strong> on which the <strong>ValueSet</strong> is <u>based</u>.  This is accomplished by <u>including</u> one or more <strong>CodeReferences</strong>.  A <strong>CodeReference</strong> ties a <strong>CodedConcept</strong> to a <strong>ValueSet</strong>.  It must <u>reference</u> exactly one <strong>CodedConcept</strong>. The <em>relation_code</em> attribute, however, implicitly references all of the <strong>CodedConcepts</strong> that are the <u>target of</u> the <strong>ConceptRelationship </strong>with the <u>included</u><strong>CodedConcept</strong>. A <strong>CodeReference</strong> can include or exclude the referenced <strong>CodedConcept</strong> itself. It can include all of the target codes or only the leaf nodes.  These various possibilities are reflected in the
                                       <em>includeReferencedCode</em>, <em>relationship_code</em> and <em>leafOnly</em> attributes described in the following table:
                                    </p>
                                    <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                                       <caption align="BOTTOM"><a name="t9"> </a>
                                          			Table
                                          			9: Code Reference Attribute Options
                                       </caption>
                                       <thead>
                                          <tr>
                                             <th colspan="1"><em>allCodes</em></th>
                                             <th colspan="1"><em>includeReferencedCode</em></th>
                                             <th colspan="1"><em>relationship_code</em></th>
                                             <th colspan="1"><em>leafOnly</em></th>
                                             <th colspan="1">Description</th>
                                          </tr>
                                       </thead>
                                       <tr>
                                          <td colspan="1">True</td>
                                          <td colspan="1">-</td>
                                          <td colspan="1">-</td>
                                          <td colspan="1">-</td>
                                          <td colspan="1">Include all of the codes in the code system.</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">False</td>
                                          <td colspan="1">True</td>
                                          <td colspan="1">-</td>
                                          <td colspan="1">-</td>
                                          <td colspan="1">Include only the referenced concept code</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">False</td>
                                          <td colspan="1">True</td>
                                          <td colspan="1">hasSubtype  </td>
                                          <td colspan="1">False</td>
                                          <td colspan="1">Include the referenced code and all of its subtypes</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">False</td>
                                          <td colspan="1">False</td>
                                          <td colspan="1">hasSubtype  </td>
                                          <td colspan="1">False</td>
                                          <td colspan="1">Include all of the subtypes of the referenced code but not the referenced code itself.
                                             
                                          </td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">False</td>
                                          <td colspan="1">False</td>
                                          <td colspan="1">hasSubtype  </td>
                                          <td colspan="1">True</td>
                                          <td colspan="1">Include only the leaf subtypes of the referenced code
                                             
                                             
                                          </td>
                                       </tr>
                                    </table>
                                    <p>
                                       Attribute combinations other than those described above are not valid.  <em>relation_code</em> should be drawn from the HL7 RelationshipCode code system if possible.
                                    </p>
                                 </div>
                              </div>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSMessAPIIncValSets"></a>4.3.4 </span><span class="title">Including other value sets in a value set</span></div>
                           <div class="body">
                              <p>A <strong>ValueSet</strong> may also be <u>constructed using</u> zero or more additional <strong>ValueSets</strong>.  Including a <strong>ValueSet</strong> means that the <strong>CodedConcepts</strong> represented by the included set are to be included as part of the containing set. <strong>ValueSetConstructors</strong> serve two purposes:
                              </p>
                              <ol>
                                 <li>They allow <strong>ValueSets</strong> to be included by reference, meaning  that changes in the contained set are automatically included in the container.
                                 </li>
                                 <li>They make it possible to include <strong>CodedConcepts</strong>  from more than one <strong>CodeSystem</strong> in a single <strong>ValueSet</strong>.
                                 </li>
                              </ol>
                              <p>A <strong>ValueSetConstructor</strong> connects two <strong>ValueSets</strong> &#8211; the included set and the set being constructed.  <em>includeHeadCode</em> determines whether the head code of the included set  (if any) is to be included as part of the containing value set.
                              </p>
                              <p>The table below shows examples of value set constructors.  The value set "HL7ConformanceInclusion"  includes the contents
                                 of the value set, "InclusionNotMandatory" which, in turn includes the set "InclusionNotRequired".  
                              </p>
                              <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                                 <caption align="BOTTOM"><a name="t10"> </a>
                                    			Table
                                    			10: Example Value Set Constructors
                                 </caption>
                                 <thead>
                                    <tr>
                                       <th colspan="1">usedToBuildSet</th>
                                       <th colspan="1">(name)</th>
                                       <th colspan="1">includedSet</th>
                                       <th colspan="1">(name)</th>
                                       <th colspan="1">Include Head Code</th>
                                    </tr>
                                 </thead>
                                 <tr>
                                    <td colspan="1">2.16.840.1.113883.1.11.10010</td>
                                    <td colspan="1">HL7ConformanceInclusion</td>
                                    <td colspan="1">2.16.840.1.113883.1.11.10012</td>
                                    <td colspan="1">InclusionNotMandatory</td>
                                    <td colspan="1">False</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">2.16.840.1.113883.1.11.10012</td>
                                    <td colspan="1">InclusionNotMandatory</td>
                                    <td colspan="1">2.16.840.1.113883.1.11.10015</td>
                                    <td colspan="1">InclusionNotRequired</td>
                                    <td colspan="1">True</td>
                                 </tr>
                              </table>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSMessAPIHeadCodes"></a>4.3.5 </span><span class="title">Head codes</span></div>
                           <div class="body">
                              <p>
                                 A <strong>ValueSet</strong><u> references</u> a set of <strong>CodedConcepts</strong>. Frequently,  the association between a <strong>ValueSet</strong>  and a collection of <strong>CodedConcepts</strong> implies a subsumption, partitive or other hierarchical relationship where the value set itself represents the &#8216;whole&#8217;(parent)
                                 and the concept codes the individual &#8216;parts&#8217; (children).  When this is the case, there may also be a corresponding concept
                                 code in the code system itself that represents the same &#8216;whole&#8217; or &#8216;parent&#8217; concept. We refer to this corresponding code as
                                 the &#8216;head code&#8217; of the associated value set.
                                 Many coded attributes in the HL7 RIM can have varying degrees of granularity. Using the example above, the InclusionNotRequired
                                 value set has a head code, "NR", and two subsidiary codes "Excluded (X) " and "Required may be empty (RE)".  The second assignment
                                 line above indicates that the valid values for this value set may be "X" for excluded, "RE" for required, but may be empty
                                 and "NR" when the inclusion is not required for a non-specific reason. 
                              </p>
                              <p>
                                 When a value set is used to construct another value set, the head code may or may not be part of the included set.  This provides
                                 the ability to represent what the HL7 community refers to as &#8216;abstract&#8217; and &#8216;specializable&#8217; value sets.  A <strong>ValueSet</strong> may be <u>identified_by</u> at most one <strong>CodedConcept</strong>, which is known as the "head code". A <strong>CodedConcept</strong> may be the <u>head_code_for</u> zero or more <strong>ValueSets</strong>.
                                 
                              </p>
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSMessAPIRegCodeSys"></a>4.4 </span><span class="title">Registered Code System</span></div>
                     <div class="body">
                        <p>
                           Many of the code systems used within HL7 will be supplied by outside parties.  The <strong>CodeSystem</strong> class, defined later in this document, represents the characteristics common to all code systems used within the HL7 environment.
                           HL7 also maintains an internal registry (metadata) about code systems themselves &#8211; a code system registry. This registry is
                           intended to function as a central repository of metadata about any code system that may appear in an HL7 message, be it internal
                           to a site or system or commonly used and sanctioned between systems.
                        </p>
                        <p>
                           Registration does not constitute &#8216;sanctioning&#8217; from an HL7 standpoint. It simply records a reference.  The registration process
                           also assigns a code system identifier (OID) for a code system if one doesn&#8217;t already exist.
                        </p>
                        <p>
                           <table width="90%">
                              <tr>
                                 <td class="figure"><pre><br /><img class="graphic" src="graphics/ctsFig5.gif" alt="ctsFig5.gif" /><br /><br /></pre></td>
                              </tr>
                           </table>
                        </p>
                        <p>A <strong>CodeSystemRegistration</strong> has the following attributes:
                        </p>
                        <ul style="margin-left:20px;">
                           <li><em>sponsor</em> &#8211; the name, address and the like of the person or organization that officially sponsors this code system within HL7
                           </li>
                           <li><em>publisher</em> &#8211; the name, address and the like of the organization responsible for creating and maintaining the code system
                           </li>
                           <li><em>versionReportingMethod</em> &#8211; a description of how and how often new versions are created and distributed
                           </li>
                           <li><em>licensingInformation</em> &#8211; a description of the required licenses, costs and how they are acquired
                           </li>
                           <li><em>inUMLS</em> &#8211; &#8216;true&#8217; means that the coded terms defined in this code system are included in the Unified Medical Language System (UMLS)
                           </li>
                           <li><em>systemSpecificLocatorInfo</em> &#8211; information specific to the code system publisher that serves to define or identify the specific coding system.  Within
                              HL7, systemSpecificLocatorInfo may sometimes used to identify the corresponding Version 2.x HL7 table where appropriate.
                           </li>
                           <li><em>codeSystemType_code</em> &#8211;  A code that identifies whether the code system is maintained and distributed internally by HL7 (I), is maintained and
                              distributed by a third party(E) or is maintained by a third party, but is distributed by HL7 (EI).
                           </li>
                        </ul>
                     </div>
                  </div>
               </div>
            </div>
            <div class="subSection">
               <!--divN/head-->
               <div class="header"><span class="icon"><img src="../../support/graphics/NormativeStandard.gif" alt="NormativeStandard" /></span><span class="number"><a name="CTSMessAPISpec"></a>5 </span><span class="title">The CTS Message API Specification</span></div>
               <div class="body">
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSMessAPIIntro"></a>5.1 </span><span class="title">Introduction</span></div>
                     <div class="body">
                        <p>The CTS Message API (CTSMAPI) is divided into two sections &#8211; the <em>runtime</em> section, which defines the set of functions that are necessary for everyday operation of HL7 Version 3 message software and
                           the <em>browsing</em> section, which is used for authoring and construction of HL7 messages.  Software using the browsing section is presumed to
                           have access to a corresponding runtime section, whereas software in the runtime section may not have access to a browsing
                           section.
                        </p>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSCommMsgEle"></a>5.2 </span><span class="title">Common CTS Message Elements</span></div>
                     <div class="body">
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSBasicDataEle"></a>5.2.1 </span><span class="title">Basic Data Elements</span></div>
                           <div class="body">
                              <p>The following section describes the basic types that are used in the CTS Message API.  Types with the prefix "types::" are
                                 all based on the HL7 Version 3 Data Types and are not described further here.
                              </p>
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <ul style="margin-left:20px;">
                                 <li>CTSVersionId    - a structure that contains the major and minor version of the CTS Specification.  The current version of the specification
                                    would be major:1, minor:0 (1.0)
                                 </li>
                                 <li>CodeSystemId       - A unique code system identifier. In the HL7 context, this should be the ISO Object Identifier (OID) assigned by HL7
                                    if one exists.  Other identifiers such as the DCE UUID, etc. may be used as code system identifiers in non-HL7 settings. In
                                    these situations is the responsibility of the implementor to reconcile any namespace conflicts that may arise between OID's
                                    and the other identifiers..
                                 </li>
                                 <li>CodeSystemName     - the name of a code system.  Both code system id and code system names are unique within the HL7 Version 3 namespace,
                                    but this is not guaranteed to be universally true.
                                 </li>
                                 <li>ConceptCode                - a code that uniquely represents a class or concept within a given code system.</li>
                                 <li>VocabularyDomainName - the unique name of an HL7 vocabulary domain</li>
                                 <li>ReleaseVersionId  - an identifier that uniquely names a release / version within the context of a code system.</li>
                                 <li>ValueSetId                - an ISO Object Identifier (OID) that uniquely identifies a HL7 value set.</li>
                                 <li>ValueSetName      - the unique name or mnemonic for a value set.  Not all value sets will have both ids and names, but when they do, both
                                    must be unique.
                                 </li>
                                 <li>ConceptId         - the combination of a code system identifier and a concept code which together provide a globally unique name for
                                    a concept
                                 </li>
                                 <li>ReleaseVersionId  - the unique identifier of a version or release of one or more code systems</li>
                                 <li>ExpansionContext  &#8211; an opaque blob used to pass contextual information between the server and client</li>
                              </ul>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSConceptCodes"></a>5.2.2 </span><span class="title">Concept Codes</span></div>
                           <div class="body">
                              <p>The Message API uses a number of coded attributes which are described below.</p>
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <ul style="margin-left:20px;">
                                 <li>LanguageCode &#8211; a code for a spoken or written language that follows the rules described in <a href="http://www.ietf.org/rfc/rfc3066.txt"> IETF RFC 3066 &#8211; Tag for Identification of Languages</a>.  This language code consists of multiple subtags separated by hyphens (&#8216;-&#8216;).  The first subtag identifies the major language
                                    code.  It must be drawn from <a href="http://www.loc.gov/standards/iso639-2/">ISO 639.2 -Codes for the representation of names of languages--Part 1: Alpha-2 Code</a> whenever possible. If no two character code is available, it may be drawn from <a href="http://lcweb.loc.gov/standards/iso639-2/langhome.html">ISO 639.2 - Codes for the representation of names of languages--Part 2: Alpha-3 Code</a>.  There are also additional escape mechanisms that aren&#8217;t described further here.<br />
                                    The second subtag is optional. If present, it must be 2-8 characters in length.  If two characters in length, it should contain
                                    a country code drawn from <a href="http://www.iso.org/iso/en/prods-services/iso3166ma/02iso-3166-code-lists/index.html">ISO 3166-1 Two character country codes</a>. If the subtag is 3-8 characters long, it must come from the <a href="http://www.iana.org/assignments/language-tags">IANA language tag registry</a>.  Additional subtags serve to further refine the language.
                                 </li>
                                 <li>RelationshipCode  - a concept code that uniquely identifies a particular relation as it occurs in a code system.  Relationship codes must
                                    be drawn from the HL7 ConceptRelationship code system whenever possible.
                                 </li>
                                 <li>ApplicationContextCode    - a code that identifies a context or realm such as a geopolitical domain, profession or other setting.  </li>
                                 <li>DataTypeCode              - a code that identifies the data type of a RIM attribute (e.g. CD, CE, CS, BIN, ST, etc).</li>
                                 <li>CodingStrengthCode        - a code that identifies how non-codeable elements should be treated within an HL7 attribute (CWE - coded with allowed
                                    exceptions, CNE - coded, no exceptions)
                                 </li>
                                 <li>ValueSetNodeTypeCode      - a code that defines the type of a value set that is returned as a nested list. Types are "A" &#8211; abstract, meaning that
                                    the value set is not selectable, "S" &#8211; specializable, meaning that the values set may be selected but also has further refinements
                                    and "L" &#8211; leaf,  meaning that the node represents a selectable concept code that has no further subdivisions.
                                 </li>
                                 <li>CodeSystemTypeCode - a code that identifies a code system as internally maintained by HL7 (I), externally maintained (E) or externally maintained
                                    but HL7 carries an internal copy (EI).
                                 </li>
                                 <li>MatchAlgorithmCode - a code that identifies a string matching algorithm.  Match algorithm codes are used in internal search functions</li>
                              </ul>
                              <p>The following table lists the code systems and OIDS that are used in the CTS MAPI messages.</p>
                              <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                                 <caption align="BOTTOM"><a name="t11"> </a>
                                    			Table
                                    			11: Coded Data Element OIDS and Names
                                 </caption>
                                 <thead>
                                    <tr>
                                       <th colspan="1">MAPI Data Element</th>
                                       <th colspan="1">Code System OID</th>
                                       <th colspan="1">Code System Name</th>
                                    </tr>
                                 </thead>
                                 <tr>
                                    <td colspan="1">LanguageCode</td>
                                    <td colspan="1">2.16.840.1.113883.6.99</td>
                                    <td colspan="1">ISO 639-1 Two character Alpha Language Codes</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">LanguageCode</td>
                                    <td colspan="1">2.16.840.1.113883.6.100</td>
                                    <td colspan="1">ISO 639-2 Three character Alpha Language Codes</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">RelationshipCode</td>
                                    <td colspan="1">2.16.840.1.113883.5.1088</td>
                                    <td colspan="1">ConceptCodeRelationship</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">ApplicationContextCode</td>
                                    <td colspan="1">2.16.840.1.113883.5.147</td>
                                    <td colspan="1">VocabularyDomainQualifier.RealmOfUse</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">DataTypeCode</td>
                                    <td colspan="1">2.16.840.1.113883.5.1007</td>
                                    <td colspan="1">DataType</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">CodingStrengthCode</td>
                                    <td colspan="1">2.16.840.1.113883.5.147</td>
                                    <td colspan="1">VocabularyDomainQualifier</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">ValueSetNodeTypeCode</td>
                                    <td colspan="1">2.16.840.1.113883.5.24</td>
                                    <td colspan="1">ConceptGenerality</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">CodeSystemType</td>
                                    <td colspan="1">2.16.840.1.113883.5.1085</td>
                                    <td colspan="1">CodeSystemType</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">MatchAlgorithmCode</td>
                                    <td colspan="1">2.16.840.1.113883.5.1094</td>
                                    <td colspan="1">MatchAlgorithm</td>
                                 </tr>
                              </table>
                              <div class="subSubSubSection">
                                 <div class="header"><span class="icon"> </span><span class="number"><a name="CTSMatchAlgorithm"></a>5.2.2.1 </span><span class="title">Text Match Algorithms</span></div>
                                 <div class="body">
                                    <p>Several of the functions in the sections that follow allow a string of text to be passed as a search criteria. This text is
                                       accompanied by a "match algorithm code" that determines how the text will be applied.  The table below lists a set of pre-determined
                                       match algorithms.  If the "required" column is TRUE, all service implementations must support this algorithm in order to be
                                       considered compliant.  If the "required" column if FALSE, it isn't necessary for a service to implement the algorithm, but
                                       if it does, it should use the supplied code to represent the algorithm.  Note that the match algorithm list is not exhaustive.
                                       It is permissible for service implementations to extend the list below with additional, custom match algorithms as appropriate,
                                       although implementers are strongly encouraged to register the algorithm code with HL7 to enable future interoperability.<br /><br /></p>
                                    <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                                       <caption align="BOTTOM"><a name="MatchAlgorithmCodes"> </a>
                                          			Table
                                          			12: Match Algorithm Codes
                                       </caption>
                                       <thead>
                                          <tr>
                                             <th colspan="1">Match Algorithm Code</th>
                                             <th colspan="1">Description</th>
                                             <th colspan="1">Required</th>
                                          </tr>
                                       </thead>
                                       <tr>
                                          <td colspan="1">IdenticalIgnoreCase</td>
                                          <td colspan="1">The lower case representation of the target text must match the lower case representation matchText exacty.</td>
                                          <td colspan="1">TRUE</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">Identical</td>
                                          <td colspan="1">The target text must match the matchText exactly.</td>
                                          <td colspan="1">FALSE</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">StartsWithIgnoreCase</td>
                                          <td colspan="1">The lower case representation of target text must begin with the lower case representation of matchText.</td>
                                          <td colspan="1">TRUE</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">StartsWith</td>
                                          <td colspan="1">The target text must begin with the matchText.</td>
                                          <td colspan="1">FALSE</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">EndsWithIgnoreCase</td>
                                          <td colspan="1">The lower case representation of the target text must end with the lower case representation of matchText.</td>
                                          <td colspan="1">TRUE</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">EndsWith</td>
                                          <td colspan="1">The target text must end with the matchText.</td>
                                          <td colspan="1">FALSE</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">ContainsPhraseIgnoreCase</td>
                                          <td colspan="1">The lower case representation of the target text must contain the lower case representation of the matchText.</td>
                                          <td colspan="1">TRUE</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">ContainsPhrase</td>
                                          <td colspan="1">The target text must contain the matchText.</td>
                                          <td colspan="1">FALSE</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">WordsAnyOrderIgnoreCase</td>
                                          <td colspan="1">The target text must contain all of the words in the match text, but in any order.</td>
                                          <td colspan="1">FALSE</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">WildCardsIgnoreCase</td>
                                          <td colspan="1">The match text may contain zero or more 'wild cards', designated by an asterisk (*). Wild cards match 0 of more characters
                                             in the target string.  The escape character is a backslash('\') meaning that the matchText "a\*b*' would match any string
                                             that begins with the string "a*b".
                                          </td>
                                          <td colspan="1">FALSE</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">RegularExpression</td>
                                          <td colspan="1">The match text may contain regular expressions, as defined in <a href="http://www.w3c.org/TR/xmlschema-2/#regexs"> XML Schema Part 2: Datatypes</a>. 
                                          </td>
                                          <td colspan="1">FALSE</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">NYSIIS</td>
                                          <td colspan="1">New York State Identification and Intelligence System phonetic encoding</td>
                                          <td colspan="1">FALSE</td>
                                       </tr>
                                    </table>
                                 </div>
                              </div>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSIndentSec"></a>5.2.3 </span><span class="title">Service Identification Section</span></div>
                           <div class="body">
                              <p>     The message runtime and browsing API both inherit a common identification interface.</p>
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <ul style="margin-left:20px;">
                                 <li>getServiceName   - returns the name assigned to the service by the service provider</li>
                                 <li>getServiceVersion - returns an implementation-specific service version identifier</li>
                                 <li>getServiceDescription     - returns a description of the service, author, purpose, etc.</li>
                                 <li>getHL7ReleaseVersion      - returns the latest HL7 vocabulary (not RIM) release represented by the service.  </li>
                                 <li>getCTSVersion             - returns the specific CTS version that the service implements (e.g. 1.0)</li>
                              </ul>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSExcepts"></a>5.2.4 </span><span class="title">Exceptions</span></div>
                           <div class="body">
                              <p>
                                 The following table contains the exceptions that can be raised by one or more of the methods described in this chapter.  An
                                 exception is an abnormal condition that prevents a method invocation from completing.
                              </p>
                              <p>The exceptions described below assume that the baseline exception includes a text field where the specific details of the
                                 exception can be spelled out.  The additional attributes below provide further information beyond the basic text.
                              </p>
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <ul style="margin-left:20px;"> - An error that could not be anticipated by the specification has occurred. This includes things like memory faults, I/O
                                 errors, database access errors and any other sort of unexpected event that prevents successful completion of the API call.
                                 possible_cause can carry a more detailed description of what actually occurred. - The vocabularyDomain_name isn&#8217;t recognized by the service    - The applicationContext_code isn&#8217;t recognized by the service
                                 <ol>
                                    <li>A value set id was supplied, but it isn&#8217;t recognized by the service or</li>
                                    <li>Only a value set name was supplied the name isn't recognized by the service</li>
                                    <li>Neither a name or an id was supplied</li>
                                 </ol>  - Both valueSet_id and valueSet_name were supplied in a method call. valueSet_id identified a valid value set but it either
                                 wasn't the same set as that identified by valueSet_name. valueSet_name may identify a different value set or no valid value
                                 set at all. - concept_id.concept_code isn&#8217;t recognized as a valid concept code in the code system identified by concept_id.codeSystem_id - The service doesn't support subsumption testing for the code system named by codeSystem_id.  - The supplied relationship qualifier isn&#8217;t recognized by the service. - the service wasn&#8217;t able to perform the requested translation
                                 <ol>
                                    <li>A code system_id was supplied and wasn&#8217;t recognized by the service</li>
                                    <li>A code system name was supplied, but not the id and the name wasn&#8217;t recognized by the service</li>
                                    <li>Neither the code system name nor the code system id were supplied</li>
                                 </ol> - The expansion context that was supplied by the client is invalid.  This can occur because the context was somehow corrupted
                                 or because a time limit has expired and the context is no longer valid. - The service doesn&#8217;t support subsumption testing on post-coordinated expressions - The service was unable to determine which value set should be used for vocabularyDomain_name and applicationContext_code. - codeSystem_name doesn&#8217;t identify the same code system as codeSystem_id, or it doesn&#8217;t name a code system at all. - The time limit specified for the function call has expired. - The supplied match text was syntactically incorrect for the specified match algorithm. - The supplied match algorithm isn't supported by the service.
                              </ul>
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSCommMsgRTAPI"></a>5.3 </span><span class="title">The CTS Message Runtime API</span></div>
                     <div class="body">
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSMessRTIdSect"></a>5.3.1 </span><span class="title">Message Runtime Identification Section</span></div>
                           <div class="body">
                              <p>The following sections describe the interface methods of the runtime portion of the message API.</p>
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>
                                 The Runtime section inherits the identification information from the Identification section.
                              </p>
                              <p>getSupportedMatchAlgorithms - return a list of match algorithms that are implemented in the service.</p>
                              <p>getSupportedVocabularyDomains - return a list of vocabulary domains that are known to the service.</p>
                              <p>Parameters:</p>
                              <ul style="margin-left:20px;">
                                 <li>matchText - If present and non-null, only vocabulary domains having names that match the text.  If matchtext absent or null, all vocabulary
                                    domains will be returned.
                                 </li>
                                 <li>matchAlgorithm_code - If the matchText is present and non-null, the matchAlgorithm_code determines how the match text is applied. See <a href="#CTSMatchAlgorithm">Text Match Algorithms
                                       			(§
                                       			5.2.2.1 )</a> for details.
                                 </li>
                                 <li>timeout - The time, in milliseconds, that the client is willing to wait for this operation to be completed.  A timeout value of 0
                                    means that there is no time limit on the operation.
                                 </li>
                                 <li>sizeLimit - The maximum number of elements that the service may return.  If exactly sizeLimit items are returned, the client assume
                                    that there were additional itemes that weren't returned.  A sizeLimit of 0 indicates that the number of items that may be
                                    returned is unlimited.
                                 </li>
                              </ul>
                              <p>Exceptions:</p>
                              <ul style="margin-left:20px;">
                                 <li>BadlyFormedMatchText</li>
                                 <li>UnknownMatchAlgorithm</li>
                                 <li>TimeoutError</li>
                                 <li>UnexpectedError</li>
                              </ul>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSValCodedAtt"></a>5.3.2 </span><span class="title">Validate a Coded Attribute</span></div>
                           <div class="body">
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>
                                 A ValidationDetail entry contains a detailed description of an error or warning.
                                 
                              </p>
                              <ul style="margin-left:20px;">
                                 <li>codeInError       - the concept code that the actual error or warning occurred on.  If the error was detected in a concept qualifier
                                    or a translation, this value contains the qualifier name, qualifier value or translation value that was actually in error.
                                 </li>
                                 <li>isError   - TRUE means that the detail entry describes an error. FALSE means that it is a warning.</li>
                                 <li>error_id  - the error identifier (see: <a href="#tvalcode">Table
                                       			13</a> - ValidateCode and ValidateTranslation return codes)
                                 </li>
                                 <li>errorText - a textual explanation of the error or warning</li>
                              </ul>
                              <p>ValidateCodeReturn returns the summary of validateCode call along with the details</p>
                              <ul style="margin-left:20px;">
                                 <li>nErrors   - the number of errors encountered.  If greater than zero,  the code or translation is not valid. </li>
                                 <li>nWarnings - the number of warnings returned.  If a code or translation only has warnings, it can still be transmitted and processed
                                    even though some of the fields may not be correct.
                                 </li>
                                 <li>detail    - a list of the individual errors and/or warnings</li>
                              </ul>
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>validateCode determines whether the coded attribute value contains a valid concept representation for the supplied vocabulary
                                 domain and application context.  If errorCheckOnly is false, it also validates the code system name and displayName attributes
                                 if they are present.  It then recursively validates the qualifiers using the same criteria. Concept codes that have originalText
                                 and no code are always considered invalid. validateCode doesn&#8217;t validate translations.
                              </p>
                              <p>Parameters:</p>
                              <ul style="margin-left:20px;">
                                 <li>vocabularyDomain_name     - vocabulary domain for the supplied coded attribute</li>
                                 <li>codeToValidate            - the HL7 concept code to be validated.  At bare minimum code must contain the code and code system attributes.
                                    
                                 </li>
                                 <li>applicationContext_code   - the context or "realm" in which the code is to be used</li>
                                 <li>activeConceptsOnly        - if true (default), only concept codes that are currently active are considered valid.  If false, the code will be
                                    considered valid as long as it is present in the code system.
                                 </li>
                                 <li>errorCheckOnly            - if true, the concept code will only be checked for errors.  No warnings will be returned</li>
                              </ul>
                              <p>Exceptions:</p>
                              <ul style="margin-left:20px;">
                                 <li>UnknownVocabularyDomain</li>
                                 <li>UnknownApplicationContextCode</li>
                                 <li>UnexpectedError</li>
                              </ul>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSValTransCodeAtt"></a>5.3.3 </span><span class="title">Validate the Translation(s) of a Coded Attribute</span></div>
                           <div class="body">
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>validateTranslation validates the primary code and any translations of an HL7 coded attribute. Any errors or warnings are
                                 returned in the ValidateCodeReturn structure.
                              </p>
                              <p>
                                 Note: the details of what constitutes a valid translation are not covered in this document.  It is presumed that an outside
                                 entity has defined the rules of translation and that this function provides a standardized way to access those rules.  Refer
                                 to <a href="#CTScodeTranMod">Code Mapping Model
                                    			(§
                                    			8 )</a>  for the underlying translation model.
                              </p>
                              <ul style="margin-left:20px;">
                                 <li>vocabularyDomain_name    - vocabulary domain for the supplied coded attribute</li>
                                 <li>codeToValidate           - the HL7 concept code to be validated.  At bare minimum code must contain the code and code system attributes.
                                    
                                 </li>
                                 <li>applicationContext_code  - the context or "realm" in which the code is to be used</li>
                                 <li>activeConceptsOnly       - if true (default), only concept codes that are currently active are considered valid.  If false, the code will be
                                    considered valid as long as it is present in the code system.
                                 </li>
                                 <li>errorCheckOnly           - if true, the concept code will only be checked for errors.  No warnings will be returned</li>
                              </ul>
                              <p>Exceptions:</p>
                              <ul style="margin-left:20px;">
                                 <li>UnknownVocabularyDomain</li>
                                 <li>UnknownApplicationContextCode</li>
                                 <li>UnexpectedError</li>
                              </ul>
                              <div class="subSubSubSection">
                                 <div class="header"><span class="icon"> </span><span class="number"><a name="CTSValCodeValTransRet"></a>5.3.3.1 </span><span class="title">ValidateCode and ValidateTranslation Return codes</span></div>
                                 <div class="body">
                                    <p>The following table lists the validation error identifiers and associated text that can be returned from ValidateCode and/or
                                       ValidateTranslation.
                                    </p>
                                    <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                                       <caption><a name="tvalcode"> </a>
                                          			Table
                                          			13: ValidateCode and ValidateTranslation return codes
                                       </caption>
                                       <thead>
                                          <tr>
                                             <th colspan="1">ID</th>
                                             <th colspan="1">Type</th>
                                             <th colspan="1">Text</th>
                                             <th colspan="1">Description</th>
                                          </tr>
                                       </thead>
                                       <tr>
                                          <td colspan="1">E001</td>
                                          <td colspan="1">E</td>
                                          <td colspan="1">Unknown code system</td>
                                          <td colspan="1">The code system isn&#8217;t recognized by the service.</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">E002</td>
                                          <td colspan="1">E</td>
                                          <td colspan="1">Invalid concept code for code system</td>
                                          <td colspan="1">The concept code isn&#8217;t valid for the supplied (or implied in the case of CS data types) code system.</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">E003</td>
                                          <td colspan="1">E</td>
                                          <td colspan="1">Code system not valid for vocabulary domain</td>
                                          <td colspan="1">The code system is recognized by the service, but it isn&#8217;t valid for the vocabulary domain and application context.</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">E004</td>
                                          <td colspan="1">E</td>
                                          <td colspan="1">Concept code is not active</td>
                                          <td colspan="1">The concept code is valid for the domain, but it is no longer active.  This error occurs only when activeConceptsOnly is true.</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">E005</td>
                                          <td colspan="1">E</td>
                                          <td colspan="1">Concept code is not valid for vocabulary domain</td>
                                          <td colspan="1">The concept code is valid for the code system, but is not allowed in the vocabulary domain and application context.</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">E008</td>
                                          <td colspan="1">E</td>
                                          <td colspan="1">Invalid role name for vocabulary domain</td>
                                          <td colspan="1">The code system and concept code of the qualifier role are legal, but are not valid for the vocabulary domain.</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">E009</td>
                                          <td colspan="1">E</td>
                                          <td colspan="1">Role name must be supplied for vocabulary domain</td>
                                          <td colspan="1">A qualifier was present that didn&#8217;t have a name component and it is required for this vocabulary domain.</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">E010</td>
                                          <td colspan="1">E</td>
                                          <td colspan="1">Invalid value for qualifier</td>
                                          <td colspan="1">The qualifier value is a valid concept code, but is not valid in the context of the qualifier.</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">E011</td>
                                          <td colspan="1">E</td>
                                          <td colspan="1">Invalid translation</td>
                                          <td colspan="1">The translation code system and concept code are valid, but it is not a valid translation of the containing concept code.</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">E013</td>
                                          <td colspan="1">E</td>
                                          <td colspan="1">Missing concept code</td>
                                          <td colspan="1">The concept code field is empty.</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">E014</td>
                                          <td colspan="1">E</td>
                                          <td colspan="1">Unknown coding rationale</td>
                                          <td colspan="1">The coding rationale code is not recognized.</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">W002</td>
                                          <td colspan="1">W</td>
                                          <td colspan="1">Code system name doesn&#8217;t match code system </td>
                                          <td colspan="1">The code system name does not match the code system id.</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">W003</td>
                                          <td colspan="1">W</td>
                                          <td colspan="1">Unknown code system version</td>
                                          <td colspan="1">The version is not recognized for the supplied code system.</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">W004</td>
                                          <td colspan="1">W</td>
                                          <td colspan="1">Display name incorrect for concept code</td>
                                          <td colspan="1">The display name is not correct for the supplied concept code.</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">W005</td>
                                          <td colspan="1">W</td>
                                          <td colspan="1">No HL7 translation present</td>
                                          <td colspan="1">None of the translations have a SH (both Source and HL7) or HL7 coding rationale. </td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">W006</td>
                                          <td colspan="1">W</td>
                                          <td colspan="1">Concept code is not active</td>
                                          <td colspan="1">The supplied concept code is not active and activeConceptsOnly is TRUE.</td>
                                       </tr>
                                    </table>
                                 </div>
                              </div>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSTransCodedAtt"></a>5.3.4 </span><span class="title">Translate a Coded Attribute</span></div>
                           <div class="body">
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>translateCode translates fromCode into the concept code, if any, that is valid for the vocabulary domain in the target code
                                 system or application context.  It returns a complete copy of fromCode with the new translation (if any) appended to the end
                                 of the CD.translation sequence.  If fromCode already contains a valid translation for the target code system or application
                                 context, the return copy of fromCode will match the original.
                              </p>
                              <ul style="margin-left:20px;">
                                 <li>vocabularyDomain_name    - the vocabulary domain of the coded attribute to be translated</li>
                                 <li>fromCode&#8211; the code to be translated</li>
                                 <li>toCodeSystem_id  - (optional) If supplied, translate the code into a concept code (or codes) drawn from this code system rather than determining
                                    the code system from the target context.
                                 </li>
                                 <li>toApplicationContext_code    - (optional) The application context of the translated code.  Used to determine the target value set which, in turn, determines
                                    the target code system. Only one of toCodeSystem_id or targetContext may be specified.  If neither or both are specified an
                                    UnableToTranslate exception will be thrown.
                                 </li>
                              </ul>
                              <p>
                                 translateCode returns an HL7 coded attribute that has been translated into the terms of the target coding system. The target
                                 code system can either be supplied in the call or can be determined from the targetContext.
                              </p>
                              <p>Exceptions:</p>
                              <ul style="margin-left:20px;">
                                 <li>UnknownVocabularyDomain</li>
                                 <li>UnknownCodeSystem</li>
                                 <li>UnknownApplicationContextCode</li>
                                 <li>UnableToTranslate</li>
                                 <li>UnexpectedError</li>
                              </ul>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSFillDetCodedAtt"></a>5.3.5 </span><span class="title">Fill in the Details of a Coded Attribute</span></div>
                           <div class="body">
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>
                                 
                                 fillInDetails returns a complete copy of codeToFillIn with codeSystemName, codeSystemVersion and displayName filled out in
                                 the base code and its qualifiers, if any.  Qualifiers are filled out recursively - if qualifiers are nested or have other
                                 qualifiers, the details are filled in here as well. fillInDetails does not change the code translations. 
                              </p>
                              <p>
                                 Parameters:
                              </p>
                              <ul style="margin-left:20px;">
                                 <li>codeToFillIn      - coded attribute to be completed</li>
                                 <li>displayLanguage_code- language to use for the display name(s)</li>
                              </ul>
                              <p>
                                 Exceptions:
                              </p>
                              <ul style="margin-left:20px;">
                                 <li>UnknownCodeSystem</li>
                                 <li>UnknownConceptCode</li>
                                 <li>UnknownLanguage</li>
                                 <li>UnexpectedError</li>
                              </ul>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSDetOneCodedAtt"></a>5.3.6 </span><span class="title">Determine Whether One Coded Attribute Subsumes a Second</span></div>
                           <div class="body">
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>
                                 subsumes tests whether the parent coded attribute subsumes (is implied by) the child.  If neither parentCode nor childCode
                                 have any qualifiers and both are drawn from the same code system, subsumes returns true if and only if childCode can be determined
                                 to belong to the transitive closure of the <em>hasSubtype</em> relationship graph headed by parentCode.  This document makes no further assertions of the semantics of subsumption beyond
                                 this one case.  
                              </p>
                              <p>
                                 If the service supports subsumption involving qualifiers and/or subsumption tests across multiple code systems, it must define
                                 the appropriate translation semantics.  If the service doesn&#8217;t support qualifier subsumption, it should raise the QualifiersNotSupported
                                 exception if presented with a parentCode or childCode containing qualifiers.  Similarily, if the service doesn&#8217;t support cross-code
                                 system subsumption testing, it should raise SubsumptionNotSupported when supplied with codes with different code systems.
                              </p>
                              <p>Parameters:</p>
                              <ul style="margin-left:20px;">
                                 <li>parentCode       - the parent coded attribute to test</li>
                                 <li>childCode- the child coded attribute to test</li>
                              </ul>
                              <p>subsumes will return &#8216;true&#8217; if the child code can be determined to be a subtype of the parent.  Subsumes will also return
                                 &#8216;true&#8217; if the child and parent codes are equivalent. Translations are ignored in this method.
                              </p>
                              <p>
                                 Exceptions:
                              </p>
                              <ul style="margin-left:20px;">
                                 <li>UnknownCodeSystem</li>
                                 <li>UnknownCode</li>
                                 <li>SubsumptionNotSupported</li>
                                 <li>UnrecognizedQualifier</li>
                                 <li>QualifiersNotSupported</li>
                                 <li>UnexpectedError</li>
                              </ul>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSTestTwoCodedAtt"></a>5.3.7 </span><span class="title">Test Whether Two Coded Attributes are Equivalent</span></div>
                           <div class="body">
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>
                                 areEquivalent determines whether the two supplied codes represent an equivalent concept from the perspective of the service.
                                 It is possible for one or both of the supplied codes to include qualifiers or be drawn from different code systems.  code1
                                 and code2 are considered equivalent if and only if code1 subsumes code2 and code2 subsumes code1.  The semantics of subsumption
                                 are defined in the previous section.
                              </p>
                              <p>Parameters:</p>
                              <ul style="margin-left:20px;">
                                 <li>code1    - first code to test for equivalence</li>
                                 <li>code2    - second code to test</li>
                              </ul>
                              <p>
                                 Exceptions:
                              </p>
                              <ul style="margin-left:20px;">
                                 <li>UnknownCodeSystem</li>
                                 <li>UnknownCode</li>
                                 <li>SubsumptionNotSupported</li>
                                 <li>UnrecognizedQualifier</li>
                                 <li>QualifiersNotSupported</li>
                                 <li>UnexpectedError</li>
                              </ul>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSExpandVocDom"></a>5.3.8 </span><span class="title">Expand a Vocabulary Domain</span></div>
                           <div class="body">
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>
                                 Every value set has a unique identifier.  In addition, some value sets may also have an optional mnemonic or name, which,
                                 if present, must also be unique.
                              </p>
                              <ul style="margin-left:20px;">
                                 <li>ValueSet_id              - the unique value set identifier.</li>
                                 <li>ValueSet_name    - the unique value set name (optional)</li>
                              </ul>
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <ul style="margin-left:20px;">
                                 <li>pathLength     - an integer that defines the distance from the root value set.  The root value set will always have a path length of
                                    0
                                 </li>
                                 <li>nodeType_code   - a concept code drawn from the HL7 ConceptGenerality (2.16.840.1.113883.5.24) code system.  One of:
                                    
                                    <ul>
                                       <li>"S"       - a specializable node.  The concept_id in this node can be selected, but the node can also be further expanded.</li>
                                       <li>"A"       - an abstract node. The concept_id (if any) in this node cannot be selected. The node must be further expanded.
                                          To make a selection
                                       </li>
                                       <li>"L"       - a leaf node.  The concept_id in this node may be selected, but no further expansion is possible.</li>
                                    </ul>
                                 </li>
                                 <li>valueSet - id and name (if any) of the value set associated with this node</li>
                                 <li>concept_id                       - the code system and concept code associated with this node, if any</li>
                                 <li>displayName                      - the display name used to represent this node.  </li>
                                 <li>isExpandable                - TRUE means that this node can be further expanded using the expandValueSetExpansionContext function. canExpand
                                    will only be TRUE for specializable and abstract nodes, and then only when the original lookupValueSetExpansion call was made
                                    with expandAll set to FALSE.
                                 </li>
                                 <li>expansionContext - if isExpandable is TRUE, expansionContext contains whatever is required by the specific service implementation to further
                                    expand the node in a subsequent call.  It is opaque to the client software.
                                 </li>
                              </ul>
                              <p>
                                 The various cases below describe how different sorts of value set definitions would be expanded.
                                 
                              </p>
                              <p>Case 1:  Value set A references all of the codes in a non-hierarchical code system, which contains concept codes 1,2, ..N
                                 
                              </p>
                              <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                                 <caption align="BOTTOM"><a name="t14"> </a>
                                    			Table
                                    			14: ValueSetExpansion Case 1
                                 </caption>
                                 <thead>
                                    <tr>
                                       <th colspan="1">pathLength</th>
                                       <th colspan="1">nodeType_code</th>
                                       <th colspan="1">Concept_id</th>
                                       <th colspan="1">displayName</th>
                                    </tr>
                                 </thead>
                                 <tr>
                                    <td colspan="1"> 0</td>
                                    <td colspan="1">A (abstract)</td>
                                    <td colspan="1">-</td>
                                    <td colspan="1">(A).valueSet_name</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       1
                                    </td>
                                    <td colspan="1">L (leaf)</td>
                                    <td colspan="1">1</td>
                                    <td colspan="1">(1).preferredName</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       1
                                    </td>
                                    <td colspan="1">L (leaf)</td>
                                    <td colspan="1">2</td>
                                    <td colspan="1">(2).preferredName</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       1
                                    </td>
                                    <td colspan="1">L (leaf)</td>
                                    <td colspan="1">&#8230;</td>
                                    <td colspan="1">&#8230;</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       1
                                    </td>
                                    <td colspan="1">L (leaf)</td>
                                    <td colspan="1">N</td>
                                    <td colspan="1">(N).preferredName</td>
                                 </tr>
                              </table>
                              <p>Case 2: Value set B references all of the codes in a hierarchical code system.  The concept code hierarchy is reflected in
                                 concept id (1 is root, 1.1 is first child of root, 1.2 second child, 1.2.1 first child of first child, etc.)
                              </p>
                              <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                                 <caption align="BOTTOM"><a name="t15"> </a>
                                    			Table
                                    			15: ValueSetExpansion Case 2
                                 </caption>
                                 <thead>
                                    <tr>
                                       <th colspan="1">pathLength</th>
                                       <th colspan="1">nodeType_code</th>
                                       <th colspan="1">Concept_id</th>
                                       <th colspan="1">displayName</th>
                                    </tr>
                                 </thead>
                                 <tr>
                                    <td colspan="1">
                                       0
                                    </td>
                                    <td colspan="1">A (abstract)</td>
                                    <td colspan="1">-</td>
                                    <td colspan="1">(B).valueSet_name</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       1
                                    </td>
                                    <td colspan="1">S (specializable)</td>
                                    <td colspan="1">1</td>
                                    <td colspan="1">(1).preferredName</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       2
                                    </td>
                                    <td colspan="1">S (specializable)</td>
                                    <td colspan="1">1.1</td>
                                    <td colspan="1">(1.1).preferredName</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       &#8230;
                                    </td>
                                    <td colspan="1">S (specializable)</td>
                                    <td colspan="1">&#8230;</td>
                                    <td colspan="1">&#8230;</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       n
                                    </td>
                                    <td colspan="1">L (leaf)</td>
                                    <td colspan="1">1.1.1..n</td>
                                    <td colspan="1">(1.1.1.n).preferredName</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       1
                                    </td>
                                    <td colspan="1">S (specializable)</td>
                                    <td colspan="1">2</td>
                                    <td colspan="1">(2).preferredName</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       2
                                    </td>
                                    <td colspan="1">S (specializable)</td>
                                    <td colspan="1">2.1</td>
                                    <td colspan="1">(2.1) preferredName</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       &#8230;
                                    </td>
                                    <td colspan="1">S (specializable)</td>
                                    <td colspan="1">&#8230;</td>
                                    <td colspan="1">&#8230;</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       M
                                    </td>
                                    <td colspan="1">L (leaf)</td>
                                    <td colspan="1">2.1..m</td>
                                    <td colspan="1">(2.1..m).preferredName</td>
                                 </tr>
                              </table>
                              <p>Case 3: Value set C  specifically references concept codes 1,2,3 in a code system. No references include a relationship code
                                 and there is no head code.
                              </p>
                              <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                                 <caption align="BOTTOM"><a name="t16"> </a>
                                    			Table
                                    			16: ValueSetExpansion Case 3
                                 </caption>
                                 <thead>
                                    <tr>
                                       <th colspan="1">pathLength</th>
                                       <th colspan="1">nodeType_code</th>
                                       <th colspan="1">Concept_id</th>
                                       <th colspan="1">displayName</th>
                                    </tr>
                                 </thead>
                                 <tr>
                                    <td colspan="1">
                                       0
                                    </td>
                                    <td colspan="1">A (abstract)</td>
                                    <td colspan="1">-</td>
                                    <td colspan="1">(C).valueSetName</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       1
                                    </td>
                                    <td colspan="1">L (leaf)</td>
                                    <td colspan="1">1</td>
                                    <td colspan="1">(1).preferredName</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       1
                                    </td>
                                    <td colspan="1">L (leaf)</td>
                                    <td colspan="1">2</td>
                                    <td colspan="1">(2).preferredName</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       1
                                    </td>
                                    <td colspan="1">L (leaf)</td>
                                    <td colspan="1">3</td>
                                    <td colspan="1">(3).preferredName</td>
                                 </tr>
                              </table>
                              <p>Case 4: Value set D references concept codes  1,2,3,4 in a code system. No references include a relationship code, but concept
                                 code 4 is defined as the head code.
                              </p>
                              <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                                 <caption align="BOTTOM"><a name="t17"> </a>
                                    			Table
                                    			17: ValueSetExpansion Case 4
                                 </caption>
                                 <thead>
                                    <tr>
                                       <th colspan="1">pathLength</th>
                                       <th colspan="1">nodeType_code</th>
                                       <th colspan="1">Concept_id</th>
                                       <th colspan="1">displayName</th>
                                    </tr>
                                 </thead>
                                 <tr>
                                    <td colspan="1">
                                       0
                                    </td>
                                    <td colspan="1">A (abstract)</td>
                                    <td colspan="1">4</td>
                                    <td colspan="1">(4).preferredName</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       1
                                    </td>
                                    <td colspan="1">L (leaf)</td>
                                    <td colspan="1">1</td>
                                    <td colspan="1">(1).preferredName</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       1
                                    </td>
                                    <td colspan="1">L (leaf)</td>
                                    <td colspan="1">2</td>
                                    <td colspan="1">(2).preferredName</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       1
                                    </td>
                                    <td colspan="1">L (leaf)</td>
                                    <td colspan="1">3</td>
                                    <td colspan="1">(3).preferredName</td>
                                 </tr>
                              </table>
                              <p>Case 5: Value set E references value set D above, with includeHeadCode set to TRUE</p>
                              <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                                 <caption align="BOTTOM"><a name="t18"> </a>
                                    			Table
                                    			18: ValueSetExpansion Case 5
                                 </caption>
                                 <thead>
                                    <tr>
                                       <th colspan="1">pathLength</th>
                                       <th colspan="1">nodeType_code</th>
                                       <th colspan="1">Concept_id</th>
                                       <th colspan="1">displayName</th>
                                    </tr>
                                 </thead>
                                 <tr>
                                    <td colspan="1">
                                       0
                                    </td>
                                    <td colspan="1">A (abstract)</td>
                                    <td colspan="1">-</td>
                                    <td colspan="1">(E).valueSet_name</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       1
                                    </td>
                                    <td colspan="1">S (specializable)</td>
                                    <td colspan="1">4</td>
                                    <td colspan="1">(4).preferredName</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       2
                                    </td>
                                    <td colspan="1">L (leaf)</td>
                                    <td colspan="1">1</td>
                                    <td colspan="1">(1).preferredName</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       2
                                    </td>
                                    <td colspan="1">L (leaf)</td>
                                    <td colspan="1">2</td>
                                    <td colspan="1">(2).preferredName</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       2
                                    </td>
                                    <td colspan="1">L (leaf)</td>
                                    <td colspan="1">3</td>
                                    <td colspan="1">(3).preferredName</td>
                                 </tr>
                              </table>
                              <p>Case 6: Value set F references value set D above, with includeHeadCode set to FALSE</p>
                              <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                                 <caption align="BOTTOM"><a name="t19"> </a>
                                    			Table
                                    			19: ValueSetExpansion Case 6
                                 </caption>
                                 <thead>
                                    <tr>
                                       <th colspan="1">pathLength</th>
                                       <th colspan="1">nodeType_code</th>
                                       <th colspan="1">Concept_id</th>
                                       <th colspan="1">displayName</th>
                                    </tr>
                                 </thead>
                                 <tr>
                                    <td colspan="1">
                                       0
                                    </td>
                                    <td colspan="1">A (abstract)</td>
                                    <td colspan="1">-</td>
                                    <td colspan="1">(F).valueSet_name</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       1
                                    </td>
                                    <td colspan="1">A (abstract)</td>
                                    <td colspan="1">4</td>
                                    <td colspan="1">(4).preferredName</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       2
                                    </td>
                                    <td colspan="1">L (leaf)</td>
                                    <td colspan="1">1</td>
                                    <td colspan="1">(1).preferredName</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       2
                                    </td>
                                    <td colspan="1">L (leaf)</td>
                                    <td colspan="1">2</td>
                                    <td colspan="1">(2).preferredName</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       2
                                    </td>
                                    <td colspan="1">L (leaf)</td>
                                    <td colspan="1">3</td>
                                    <td colspan="1">(3).preferredName</td>
                                 </tr>
                              </table>
                              <p>Case 7: Value set G references concept codes 1.1, 2.1 and 3.1 in a hierarchical code system.  All three references use the
                                 hasSubtype relationship code.  The 1.1 reference includes the referenced code. The 2.1 reference excludes the referenced code.
                                 The 3.1 reference has leafOnly set to true.  G has no head code.
                              </p>
                              <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                                 <caption align="BOTTOM"><a name="t20"> </a>
                                    			Table
                                    			20: ValueSetExpansion Case 7
                                 </caption>
                                 <thead>
                                    <tr>
                                       <th colspan="1">pathLength</th>
                                       <th colspan="1">nodeType_code</th>
                                       <th colspan="1">Concept_id</th>
                                       <th colspan="1">displayName</th>
                                    </tr>
                                 </thead>
                                 <tr>
                                    <td colspan="1">
                                       0
                                    </td>
                                    <td colspan="1">A (abstract)</td>
                                    <td colspan="1">-</td>
                                    <td colspan="1">(G).valueSet_name</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       1
                                    </td>
                                    <td colspan="1">S (specializable)</td>
                                    <td colspan="1">1.1</td>
                                    <td colspan="1">(1.1).preferredName</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       2
                                    </td>
                                    <td colspan="1">S (specializable)</td>
                                    <td colspan="1">1.1.1</td>
                                    <td colspan="1">(1.1.1).preferredName</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       &#8230;
                                    </td>
                                    <td colspan="1">S (specializable)</td>
                                    <td colspan="1">1.1&#8230;.</td>
                                    <td colspan="1">&#8230;</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       n
                                    </td>
                                    <td colspan="1">L (leaf)</td>
                                    <td colspan="1">1.1&#8230;..n</td>
                                    <td colspan="1">(1.1&#8230;.n).preferredName</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       1
                                    </td>
                                    <td colspan="1">A (abstract)</td>
                                    <td colspan="1">1.2</td>
                                    <td colspan="1">(1.2) preferredName</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       2
                                    </td>
                                    <td colspan="1">S (specializable)</td>
                                    <td colspan="1">1.2.1</td>
                                    <td colspan="1">(1.2.1)preferredName</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       &#8230;
                                    </td>
                                    <td colspan="1">S (specializable)</td>
                                    <td colspan="1">1.2.1&#8230;</td>
                                    <td colspan="1">&#8230;</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       m
                                    </td>
                                    <td colspan="1">L (leaf)</td>
                                    <td colspan="1">1.2.1&#8230;m</td>
                                    <td colspan="1">(1.2&#8230;m)preferredName</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       1
                                    </td>
                                    <td colspan="1">A (abstract)</td>
                                    <td colspan="1">1.3</td>
                                    <td colspan="1">(1.3) preferredName</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       2
                                    </td>
                                    <td colspan="1">A (abstract)</td>
                                    <td colspan="1">1.3.1</td>
                                    <td colspan="1">(1.3.1) preferredName</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       &#8230;
                                    </td>
                                    <td colspan="1">A (abstract)</td>
                                    <td colspan="1">1.3.1&#8230;</td>
                                    <td colspan="1">&#8230;</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">
                                       k
                                    </td>
                                    <td colspan="1">L(leaf)</td>
                                    <td colspan="1">1.3.1&#8230;k</td>
                                    <td colspan="1">(1.3.1..k)preferredName</td>
                                 </tr>
                              </table>
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>
                                 lookupValueSetExpansion returns an expansion of the value set associated with the supplied vocabulary domain and optional
                                 context.  The entire vocabulary domain can be expanded all at once (expandAll = TRUE) or can be expanded one level at a time
                                 (expandAll  = FALSE).  If expanding one level at a time, every node that can be further expanded will have isExpandable set
                                 to TRUE, meaning that the expansionContext can be passed to expandValueSetExpansionContext for further expansion.
                              </p>
                              <p>Parameters:</p>
                              <ul style="margin-left:20px;">
                                 <li>vocabularyDomain_name    - vocabulary domain to expand</li>
                                 <li>applicationContext_code&#8211; context in which the vocabulary domain is to be expanded (optional)</li>
                                 <li>language_code    - language to be used for the returned display names</li>
                                 <li>expandAll        - TRUE means expand all nodes to their entire depth, FALSE means expand one level (default: TRUE)</li>
                                 <li>timeout - The time, in milliseconds, that the client is willing to wait for this operation to be completed.  A timeout value of 0
                                    means that there is no time limit on the operation.
                                 </li>
                                 <li>sizeLimit - The maximum number of elements that the service may return.  If exactly sizeLimit items are returned, the client assume
                                    that there were additional itemes that weren't returned.  A sizeLimit of 0 indicates that the number of items that may be
                                    returned is unlimited.
                                 </li>
                              </ul>
                              <p>Exceptions:</p>
                              <ul style="margin-left:20px;">
                                 <li>UnknownVocabularyDomain</li>
                                 <li>UnknownApplicationContextCode</li>
                                 <li>UnknownLanguage</li>
                                 <li>TimeoutError</li>
                                 <li>UnexpectedError</li>
                              </ul>
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>
                                 expandValueSetExpansionContext takes an opaque expansionContext that was previously returned in a ValueSetExpansion entry
                                 and further expands the corresponding node. An additional level.  The return is identical to that of lookupValueSetExpansion,
                                 and all of the initial constraints, including the timeout value still apply.
                              </p>
                              <p>Parameters:</p>
                              <ul style="margin-left:20px;">
                                 <li>expansionContext- context returned by a previous lookupValueSetExpansion or expandValueSetExpansionContext call </li>
                              </ul>
                              <p>Exceptions:</p>
                              <ul style="margin-left:20px;">
                                 <li>InvalidExpansionContext</li>
                                 <li>TimeoutError</li>
                                 <li>UnexpectedError</li>
                              </ul>
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSMessBrowAPI"></a>5.4 </span><span class="title">CTS Message Browsing API</span></div>
                     <div class="body">
                        <p>The second part of the CTS Message API contains a set of functions that can be used to examine and browse attributes, vocabulary
                           domains and value sets.
                        </p>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSMessBrowIDinfo"></a>5.4.1 </span><span class="title">Message Browser Identification Information</span></div>
                           <div class="body">
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>
                                 The message browser inherits the identification information from the interface described in <a href="#CTSIndentSec">Service Identification Section
                                    			(§
                                    			5.2.3 )</a>.
                                 
                              </p>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSMessBrowDescSect"></a>5.4.2 </span><span class="title">Message Browser Description Section</span></div>
                           <div class="body">
                              <p>This section describes several "building block" structures that are used by the service description and then describes how
                                 the information is accessed via the service.
                              </p>
                              <div class="subSubSubSection">
                                 <div class="header"><span class="icon"> </span><span class="number"><a name="CTSMessBrowBB"></a>5.4.2.1 </span><span class="title">Browser Description Building Blocks</span></div>
                                 <div class="body">
                                    <table width="90%">
                                       <tr>
                                          <td class="codefragment"><pre></pre></td>
                                       </tr>
                                    </table>
                                    <p>
                                       RIMAttributeId uniquely identifies a coded attribute in the RIM.
                                    </p>
                                    <ul style="margin-left:20px;">
                                       <li>model_id         - the RIM model identifier</li>
                                       <li>class_name               - the name of the RIM Class</li>
                                       <li>attribute_name   - the name of the attribute within the class</li>
                                    </ul>
                                    <p>The RIMCodedAttribute describes a RIM attribute.</p>
                                    <ul style="margin-left:20px;">
                                       <li>RIMAttribute_id  - the unique attribute identifier</li>
                                       <li>dataType_code    - a code that identifies the attribute data type, drawn from the HL7 DataType code system</li>
                                       <li>codingStrength_code- the attribute strength.  Drawn from the HL7 VocabularyDomainQualifier code system</li>
                                       <li>vocabularyDomain_name- the name of the vocabulary domain associated with the attribute.</li>
                                    </ul>
                                    <table width="90%">
                                       <tr>
                                          <td class="codefragment"><pre></pre></td>
                                       </tr>
                                    </table>
                                    <p>A CodeSystemDescriptor consists of a code sytem identifier, its name, any copyright information and a list of available versions.</p>
                                    <ul style="margin-left:20px;">
                                       <li>codeSystem_id    - the ISO Object Identifier (OID) of the code system
                                          
                                       </li>
                                       <li>codeSystem_name  - the name of the code system. Unique within the HL7 Version 3 context.
                                          
                                       </li>
                                       <li>copyright        - copyright notice for the code system, if any.  If present, the copyright should be displayed whenever code system
                                          is accessed or used.
                                       </li>
                                       <li>availableReleases- the releases of the code system that are currently supported by the service.  In the current version of this specification,
                                          at most one release may be queried for any code system.  Future versions will allow more than one however.
                                       </li>
                                    </ul>
                                 </div>
                              </div>
                              <div class="subSubSubSection">
                                 <div class="header"><span class="icon"> </span><span class="number"><a name="CTSMessBrowID"></a>5.4.2.2 </span><span class="title">Browser Description</span></div>
                                 <div class="body">
                                    <table width="90%">
                                       <tr>
                                          <td class="codefragment"><pre></pre></td>
                                       </tr>
                                    </table>
                                    <p>The message browser description lists all of the various entities that are supported by the particular service.</p>
                                    <ul style="margin-left:20px;">
                                       <li>
                                          <p>getSupportedAttributes - return a list of the RIM attributes that are known to the service and match the supplied criteria.</p>
                                          <p>Parameters:</p>
                                          <ul>
                                             <li>matchText - If present and non-null, only RIM attributes having names that match the text will be returned.  If matchtext absent or
                                                null, all RIM attributes will be returned.
                                             </li>
                                             <li>matchAlgorithm_code - If the matchText is present and non-null, the matchAlgorithm_code determines how the match text is applied. See <a href="#CTSMatchAlgorithm">Text Match Algorithms
                                                   			(§
                                                   			5.2.2.1 )</a> for details.
                                             </li>
                                             <li>timeout - The time, in milliseconds, that the client is willing to wait for this operation to be completed.  A timeout value of 0
                                                means that there is no time limit on the operation.
                                             </li>
                                             <li>sizeLimit - The maximum number of elements that the service may return.  If exactly sizeLimit items are returned, the client assume
                                                that there were additional itemes that weren't returned.  A sizeLimit of 0 indicates that the number of items that may be
                                                returned is unlimited.
                                             </li>
                                          </ul>
                                          <p>Exceptions:</p>
                                          <ul>
                                             <li>BadlyFormedMatchText</li>
                                             <li>UnknownMatchAlgorithm</li>
                                             <li>TimeoutError</li>
                                             <li>UnexpectedError</li>
                                          </ul>
                                       </li>
                                       <li>
                                          <p>getSupportedVocabularyDomains - return a list of the vocabulary domains that are known to the service and match the supplied criteria.</p>
                                          <p>Parameters:</p>
                                          <ul>
                                             <li>matchText - If present and non-null, only vocabulary domains having names that match the text will be returned.  If matchtext absent
                                                or null, all vocabulary domains will be returned.
                                             </li>
                                             <li>matchAlgorithm_code - If the matchText is present and non-null, the matchAlgorithm_code determines how the match text is applied. See <a href="#CTSMatchAlgorithm">Text Match Algorithms
                                                   			(§
                                                   			5.2.2.1 )</a> for details.
                                             </li>
                                             <li>timeout - The time, in milliseconds, that the client is willing to wait for this operation to be completed.  A timeout value of 0
                                                means that there is no time limit on the operation.
                                             </li>
                                             <li>sizeLimit - The maximum number of elements that the service may return.  If exactly sizeLimit items are returned, the client assume
                                                that there were additional itemes that weren't returned.  A sizeLimit of 0 indicates that the number of items that may be
                                                returned is unlimited.
                                             </li>
                                          </ul>
                                          <p>Exceptions:</p>
                                          <ul>
                                             <li>BadlyFormedMatchText</li>
                                             <li>UnknownMatchAlgorithm</li>
                                             <li>TimeoutError</li>
                                             <li>UnexpectedError</li>
                                          </ul>
                                       </li>
                                       <li>
                                          <p>getSupportedValueSets - return a list of the value sets that are known to the service and match the supplied criteria.</p>
                                          <p>Parameters:</p>
                                          <ul>
                                             <li>matchText - If present and non-null, only value sets having names that match the text will be returned.  If matchtext absent or null,
                                                all value sets will be returned.
                                             </li>
                                             <li>matchAlgorithm_code - If the matchText is present and non-null, the matchAlgorithm_code determines how the match text is applied. See <a href="#CTSMatchAlgorithm">Text Match Algorithms
                                                   			(§
                                                   			5.2.2.1 )</a> for details.
                                             </li>
                                             <li>timeout - The time, in milliseconds, that the client is willing to wait for this operation to be completed.  A timeout value of 0
                                                means that there is no time limit on the operation.
                                             </li>
                                             <li>sizeLimit - The maximum number of elements that the service may return.  If exactly sizeLimit items are returned, the client assume
                                                that there were additional itemes that weren't returned.  A sizeLimit of 0 indicates that the number of items that may be
                                                returned is unlimited.
                                             </li>
                                          </ul>
                                          <p>Exceptions:</p>
                                          <ul>
                                             <li>BadlyFormedMatchText</li>
                                             <li>UnknownMatchAlgorithm</li>
                                             <li>TimeoutError</li>
                                             <li>UnexpectedError</li>
                                          </ul>
                                       </li>
                                       <li>
                                          <p>getSupportedCodeSystems - return a list of the code systems that are known to the service and match the supplied criteria.</p>
                                          <p>Parameters:</p>
                                          <ul>
                                             <li>matchText - If present and non-null, only code system names names that match the text will be returned.  If matchtext absent or null,
                                                all code systems will be returned.
                                             </li>
                                             <li>matchAlgorithm_code - If the matchText is present and non-null, the matchAlgorithm_code determines how the match text is applied. See <a href="#CTSMatchAlgorithm">Text Match Algorithms
                                                   			(§
                                                   			5.2.2.1 )</a> for details.
                                             </li>
                                             <li>timeout - The time, in milliseconds, that the client is willing to wait for this operation to be completed.  A timeout value of 0
                                                means that there is no time limit on the operation.
                                             </li>
                                             <li>sizeLimit - The maximum number of elements that the service may return.  If exactly sizeLimit items are returned, the client assume
                                                that there were additional itemes that weren't returned.  A sizeLimit of 0 indicates that the number of items that may be
                                                returned is unlimited.
                                             </li>
                                          </ul>
                                          <p>Exceptions:</p>
                                          <ul>
                                             <li>BadlyFormedMatchText</li>
                                             <li>UnknownMatchAlgorithm</li>
                                             <li>TimeoutError</li>
                                             <li>UnexpectedError</li>
                                          </ul>
                                       </li>
                                    </ul>
                                 </div>
                              </div>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSLookUpVocabDom"></a>5.4.3 </span><span class="title">Look Up a Vocabulary Domain</span></div>
                           <div class="body">
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>The VocabularyDomainValueSet structure contains the description of a value set (see: <a href="#CTSExpandVocDom">Expand a Vocabulary Domain
                                    			(§
                                    			5.3.8 )</a> for details) and the context code, if any, in which the value set applies
                              </p>
                              <ul style="margin-left:20px;">
                                 <li>definedByValueSet	- the value set that defines a vocabulary domain in the specific application context</li>
                                 <li>applicationContext_code - the context in which the value set applies</li>
                              </ul>
                              <p>VocabularyDomainDescription is the structure returned by the lookupVocabularyDomain function.</p>
                              <ul style="margin-left:20px;">
                                 <li>vocabularyDomain_name    - the unique name of the vocabulary domain
                                    
                                 </li>
                                 <li>description                      - a description of the domain
                                    
                                 </li>
                                 <li>restrictsDomain_name     - the vocabulary domain that this domain restricts, if any
                                    
                                 </li>
                                 <li>basisOfDomains           - a list of the domains that are restrictions of this domain, if any
                                    
                                 </li>
                                 <li>constrainsAttributes     - a list of the RIM attributes that use this vocabulary domain, if any
                                    
                                 </li>
                                 <li>representedByValueSets   - a list of the value sets and context that can represent this vocabulary domain, if any</li>
                              </ul>
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>
                                 lookupVocabularyDomain returns detailed information about a vocabulary domain.
                                 
                              </p>
                              <ul style="margin-left:20px;">
                                 <li>vocabularyDomain_name    - the name of the vocabulary domain to look up</li>
                              </ul>
                              <p>
                                 Exceptions:
                              </p>
                              <ul style="margin-left:20px;">
                                 <li>UnknownVocabularyDomain</li>
                                 <li>UnexpectedError</li>
                              </ul>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSLookUpValSet"></a>5.4.4 </span><span class="title">Look Up a Value Set</span></div>
                           <div class="body">
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>
                                 FullValueSetDescription includes a complete description of the value set  including the list of included concept codes and
                                 other value sets.
                              </p>
                              <p>ValueSetConstructor</p>
                              <ul style="margin-left:20px;">
                                 <li>includedValueSet - the identifier and name, if any of a value set that is considered to be part of the containing set
                                    
                                 </li>
                                 <li>includeHeadCode  - TRUE means that the head code, if any, of the included value set is considered to be part of the including set.  FALSE
                                    means that it isn&#8217;t.
                                 </li>
                              </ul>
                              <p>ValueSetCodeReference</p>
                              <ul style="margin-left:20px;">
                                 <li>referenced_code  - a concept code that is referenced by the value set
                                    
                                 </li>
                                 <li>relationship_code-  A relationship code. If present, all of the descendants of the referenced code are consider part of the value set as well,
                                    subject to the leafOnly constraint below. If the relationship is transitive, all descendants are included in the value set.
                                    If the relationship is not transitive, only the direct targets of the referenced code are considered.
                                    
                                 </li>
                                 <li>includeReferencedCode- TRUE means that the referenced code itself is part of the value set. FALSE means that only the children or descendants are
                                    included. includeReferencedCode will always be TRUE when a relationship code is not supplied.
                                    
                                 </li>
                                 <li>leafOnly         - TRUE means only include the leaf nodes of  the relationship. FALSE means include all descendant nodes except, perhaps,
                                    the referenced code itself. leafOnly must always be FALSE if no relationship_code is present.
                                 </li>
                              </ul>
                              <p>ValueSetDescription</p>
                              <ul style="margin-left:20px;">
                                 <li>idAndName-the value set identifier and name, if any
                                    
                                 </li>
                                 <li>description      - a textual description of the value set and its use
                                    
                                 </li>
                                 <li>definingExpression- an expression that defines the set contents (if any)
                                    
                                 </li>
                                 <li>basedOnCodeSystem - the code system id, name and version used to construct the value set
                                    
                                 </li>
                                 <li>allCodes         - TRUE means that all of the codes in the code system are included in the value set.   If TRUE, the value set mustn't
                                    reference any additional code
                                    
                                 </li>
                                 <li>head_code- the concept code that represents the entire value set (if any)</li>
                              </ul>
                              <p>FullValueSetDescription</p>
                              <ul style="margin-left:20px;">
                                 <li>description              - The id, name, description, etc. of the value set
                                    
                                 </li>
                                 <li>constructedUsingValueSets- a list of additional value sets and head code inclusions, if any, that are used to construct this set
                                    
                                 </li>
                                 <li>usedToDefine             - a list of any other value sets that have been constructed using this set
                                    
                                 </li>
                                 <li>referencesCodes          - a list of concept codes that this value set explicitly references.  This will be empty if allCodes is true and
                                    will not include any codes that are implicitly included from other value sets and/or concept code relationships.
                                 </li>
                              </ul>
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>lookupValueSet retrieves a complete description of a value set given either a value set identifier or a value set name.
                                 
                              </p>
                              <p>Parameters:</p>
                              <ul style="margin-left:20px;">
                                 <li>valueSet_id              - the identifier of the value set to look up
                                    
                                 </li>
                                 <li>valueSet_name    - the name of the value set to look up</li>
                              </ul>
                              <p>Either the value set id, the value set name or both may be supplied.  If both are supplied, the name must correctly match
                                 the id or an error will be raised.
                              </p>
                              <p>Exceptions:</p>
                              <ul style="margin-left:20px;">
                                 <li>UnknownValueSet</li>
                                 <li>ValueSetNameIdMismatch</li>
                                 <li>UnexpectedError</li>
                              </ul>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSLookUpDetInformCodeSys"></a>5.4.5 </span><span class="title">Look up Detailed Information About a Code System</span></div>
                           <div class="body">
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>CodeSystemRegistration:</p>
                              <ul style="margin-left:20px;">
                                 <li>sponsor                  - the HL7 member or organization that sponsers the registration
                                    
                                 </li>
                                 <li>publisher        - the name of the official publisher of the code system
                                    
                                 </li>
                                 <li>versionReportingMethod    - how new versions are created and distributed
                                    
                                 </li>
                                 <li>licensingInformation     - licensing requirements for the code system
                                    
                                 </li>
                                 <li>inUMLS           - TRUE means that the code system is contained in the Unified Medical Language System (UMLS)
                                    
                                 </li>
                                 <li>systemSpecificLocatorInfo-  the meaning of this field depends upon the specific publisher.  It serves to further identify the code system information
                                    and is intended to contain things like the HL7 Version 2 table name, etc.
                                    
                                 </li>
                                 <li>codeSystemType_code      - A concept code that specifies whether the code system is internally created and maintained by HL7 (I), externally
                                    created and maintained (E) or externally created but HL7 maintains an internal image for convenience (EI)
                                 </li>
                              </ul>
                              <p>Note: The registration elements above are intended to be descriptive only.  While many of the fields (sponsor, publisher,
                                 versionReportingMethod, etc.) could have additional structure, it wasn't considered necessary within the scope of the present
                                 document
                              </p>
                              <p>CodeSystemInfo</p>
                              <ul style="margin-left:20px;">
                                 <li>description - basic description of the code system - see: <a href="#CTSCodeSystemDescriptor">Table
                                       			</a>CTSCodeSystemDescriptor structure
                                 </li>
                                 <li>registrationInfo - registration information for the code system (if any)</li>
                              </ul>
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>lookupCodeSystem returns detailed information for a code system given either a code system identifier (OID) or name.</p>
                              <ul style="margin-left:20px;">
                                 <li>codeSystem_Id    - the unique code system identifier, which is usually the ISO OID
                                    
                                 </li>
                                 <li>codeSystem_name  - the name of the code system</li>
                              </ul>
                              <p>Either the code system id, the code system name or both may be supplied.  If both the id and name are supplied, the name must
                                 match the id or an error will be raised.
                              </p>
                              <p>Exceptions:</p>
                              <ul style="margin-left:20px;">
                                 <li>UnknownCodeSystem</li>
                                 <li>CodeSystemNameIdMismatch</li>
                                 <li>UnexpectedError</li>
                              </ul>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSGetValueForVocabDom"></a>5.4.6 </span><span class="title">Look up the Value Set for a Vocabulary Domain and Context</span></div>
                           <div class="body">
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>
                                 lookupValueSetForDomain returns the descriptor (id and name if any) of the value set that would be used for the supplied domain
                                 in the application context (if any).
                              </p>
                              <p>Parameters:</p>
                              <ul style="margin-left:20px;">
                                 <li>vocabularyDomain_name    -  name of the vocabulary domain to look up
                                    
                                 </li>
                                 <li>applicationContext_code  - application context (optional)
                                    
                                 </li>
                              </ul>
                              <p>Exceptions:</p>
                              <ul style="margin-left:20px;">
                                 <li>UnknownVocabularyDomain</li>
                                 <li>UnknownApplicationContextCode</li>
                                 <li>NoApplicableValueSet</li>
                                 <li>UnexpectedError</li>
                              </ul>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSDetWhetConceptCode"></a>5.4.7 </span><span class="title">Determine Whether a Concept Code is in a Value Set</span></div>
                           <div class="body">
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>isCodeInValueSet returns true if the supplied concept identifier is included in and can be selected from the value set, false
                                 otherwise.
                              </p>
                              <p>Parameters:</p>
                              <ul style="margin-left:20px;">
                                 <li>valueSet_id              - the identifier of the value set to look up
                                    
                                 </li>
                                 <li>valueSet_name    - the name of the value set to look up
                                    
                                 </li>
                                 <li>includeHeadCode  - TRUE means that the head code (if there is any) is considered to be part of the set. FALSE means that the head code, if
                                    any, is excluded.
                                    
                                 </li>
                                 <li>codeToValidate   - the code system id and concept code to test</li>
                              </ul>
                              <p>Either the value set id, the value set name or both may be supplied.  If both are supplied, the name must correctly match
                                 the id or an error will be raised.
                              </p>
                              <p>Exceptions:</p>
                              <ul style="margin-left:20px;">
                                 <li>UnknownValueSet</li>
                                 <li>ValueSetNameIdMismatch</li>
                                 <li>UnknownConceptCode</li>
                                 <li>UnknownCodeSystem</li>
                                 <li>UnexpectedError</li>
                              </ul>
                           </div>
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="subSection">
               <!--divN/head-->
               <div class="header"><span class="icon"><img src="../../support/graphics/NormativeStandard.gif" alt="NormativeStandard" /></span><span class="number"><a name="CTSVocAPISpec"></a>6 </span><span class="title">Vocabulary API Model</span></div>
               <div class="body">
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabAPIIntro"></a>6.1 </span><span class="title">Introduction</span></div>
                     <div class="body">
                        <p>The following sections describe the model underlying the CTS Vocabulary API.  Note that this document does not provide a complete
                           or in-depth model of all the possible entities that might comprise a coding system<a name="fn-src8"></a><a href="#fn8"><sup style="font-size: smaller">8</sup></a>  - it only describes the classes and relationships that have a direct bearing on the contents of HL7 coded attributes from
                           the vocabulary perspective.
                        </p>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabAPICodeSys"></a>6.2 </span><span class="title">CodeSystem</span></div>
                     <div class="body">
                        <p>
                           <table width="90%">
                              <tr>
                                 <td class="figure"><pre><a href="graphics/L-ctsFig6.gif" target="_blank" style="border:0">Link to wide graphic (opens in a new window)</a></pre></td>
                              </tr>
                           </table>
                        </p>
                        <p>
                           A <strong>CodeSystem</strong> may <u>define</u> zero or more <strong>CodedConcepts</strong>.  A <strong>coded concept</strong> represents a class or concept within a particular domain of discourse. Every <strong>CodedConcept</strong> must be <u>defined in</u> exactly one <strong>CodeSystem</strong>. Once defined, the meaning of a coded concept may not change. Existing coded concepts may be retired and new coded concepts
                           may be added, but once defined, the meaning of a coded concept must remain static.
                        </p>
                        <p>A <strong>CodeSystem</strong> has the following attributes:
                        </p>
                        <ul style="margin-left:20px;">
                           <li><em>codeSystem_id</em> - a globally unique identifier for the code system.  Within the context of HL7, a<em> codeSystemId</em> should take the form of an ISO Object Identifier (OID).  HL7 maintains a registry of code system OIDS, and users are strongly
                              encouraged to register any OID used in these services in the registry.
                              
                           </li>
                           <li><em>codeSystem_name</em> - a short token that uniquely identifies the code system within the context of the HL7 RIM. Within HL7, code system names
                              are recorded in a &#8216;code system of code systems&#8217;  associated with the <strong>CodeSystem</strong> vocabulary domain.  The <em>name</em> is used strictly for communication between carbon-based life forms, and <em>codeSystemId</em> should be used for all computer to computer communication.
                           </li>
                           <li><em>fullName</em> - The official name of the <strong>CodeSystem</strong>. For systems that are registered in the HL7 <strong>CodeSystem</strong> vocabulary domain, <em>fullName</em> is the preferred English <strong>ConceptDesignation</strong> for the  <strong>CodedConcept</strong> matching the <strong>CodeSystem</strong><em> name</em>.
                           </li>
                           <li><em>codeSystemDescription</em> - A description of the purpose and content of the <strong>CodeSystem</strong>. For systems that are registered in the HL7 CodeSystem vocabulary domain, <em>description</em> is the English <strong>ConceptDescription</strong> of the <strong>CodedConcept</strong> matching the <strong>CodeSystem</strong><em> name</em>.
                           </li>
                           <li><em>copyright</em> - An optional copyright notice that, if present, should be displayed whenever the code system is accessed or used.
                           </li>
                        </ul>
                        <p>
                           The following attributes carry additional metadata about a code system:
                        </p>
                        <ul style="margin-left:20px;">
                           <li><em>supportedLanguages</em> - The list of all of the languages that are fully or partially supported byr the code system.  A "supported" language is
                              recognized by the code system and at least some of the concept designations or properties are available in that language.
                              All code systems must support at least one language. While the service must list all of the primary language subtags that
                              it supports, it is optional whether it lists secondary languages.  (i.e., if it supports "en-UK", it must list "en" but may
                              or may not list "en-UK").
                           </li>
                           <li><em>supportedRelations</em> - The relations (roles) represented in the code system.  Note that the subtype relation is treated as a first-class relationship
                              in this model (code: hasSubtype). A relation code has both a code system identifier and a concept code, so it is possible
                              to draw relation codes from many sources.  For the purposes of interoperability, the relation codes should be drawn from the
                              HL7 ConceptRelationship code system - OID 2.16.840.1.113883.5.1088 - whenever possible.
                           </li>
                           <li><em>supportedProperties</em>        - The property codes supported by the code system.  Whenever possible, however, property codes should use the HL7
                              ConceptProperty code system (OID 2.16.840.1.113883.5.1087).  
                           </li>
                           <li><em>supportedMimeTypes</em> - A list of the MIME types used in designations, descriptions or properties in the code system.  These codes must be drawn
                              from the officially designated HL7 Media Type code system, which is currently OID 2.16.840.1.113883.5.79 - MediaType.  The
                              text/plain MIME type must be supported by all code systems.
                           </li>
                           <li>supportedRelationshipQualifiers - A list of the relationship qualifiers that are recognized by the code system.</li>
                        </ul>
                        <p>
                           A <strong>CodeSystem</strong> may <u>represent</u> zero or one <strong>CodeSystemVersion</strong> at any given point in time. <a name="fn-src9"></a><a href="#fn9"><sup style="font-size: smaller">9</sup></a></p>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabAPICodedConcept"></a>6.3 </span><span class="title">CodedConcept</span></div>
                     <div class="body">
                        <p>
                           A <strong>CodedConcept</strong> is unique within the <strong>CodeSystem</strong> that <u>defines</u> it. A <strong>CodedConcept</strong> must be <u>designatedBy</u>  at least one <strong>ConceptDesignation</strong>. A <strong>ConceptDesignation</strong> must <u>represent the intent of</u> one or more <strong>CodedConcepts. </strong><a name="fn-src10"></a><a href="#fn10"><sup style="font-size: smaller">10</sup></a><strong>CodedConcepts</strong> may be <u>characterizedBy</u> zero or more <strong>ConceptProperties</strong>. A <strong>ConceptProperty</strong> may <u>represent or define</u> one or more <strong>CodedConcepts</strong>.  
                        </p>
                        <p>A <strong>CodedConcept</strong> may be the <u>sourceFor</u>  and/or the <u>targetOf</u> zero or more <strong>ConceptRelationships</strong>.  Relationships are described in more detail in a following section.
                        </p>
                        <p>A <strong>CodedConcept</strong> has the following attributes:
                        </p>
                        <ul style="margin-left:20px;">
                           <li><em>code</em>  - an identifier that uniquely names the class or "concept" within the context of the defining <strong>CodeSystem</strong>.  Once assigned, the &#8216;meaning&#8217; of a concept code should never change. This document makes no assumptions one way or the other
                              regarding more than one <strong>CodedConcept</strong> being assigned the same &#8216;meaning&#8217; within a <strong>CodeSystem</strong>. 
                           </li>
                           <li><em>status</em> - represents the current status of the <strong>CodedConcept</strong> within the <strong>CodeSystem</strong>.  Concept status values are drawn from the HL7 ConceptStatus (OID: 2.16.840.1.113883.5.1086) code system. Possible status
                              values include &#8216;proposed&#8217;, &#8216;active&#8217;, &#8216;deleted&#8217; and &#8216;retired&#8217;.  This specification only recognizes the distinction between
                              &#8216;active&#8217; or &#8216;not active&#8217; at the moment.  Concept status and versioning will be more completely addressed in a subsequent version
                              of this specification.
                           </li>
                        </ul>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabAPIConceptDes"></a>6.4 </span><span class="title">ConceptDesignation</span></div>
                     <div class="body">
                        <p>
                           A <strong>ConceptDesignation</strong> is a name or other textual symbol that <u>represents the intent of</u> zero or more <strong>CodedConcepts</strong>.  <strong>ConceptDesignations</strong> are language dependent. 
                        </p>
                        <p><strong>ConceptDesignation</strong> has the following attributes:
                        </p>
                        <ul style="margin-left:20px;">
                           <li><em>designation</em>       - A string of text that provides an external representation of a CodedConcept.
                           </li>
                           <li><em>LanguageCode</em>             &#8211; a language code that follows the rules described in <a href="http://www.ietf.org/rfc/rfc3066.txt"> IETF RFC 3066 &#8211; Tag for Identification of Languages</a>.  This language code consists of multiple subtags separated by hyphens (&#8216;-&#8216;).  The first subtag identifies the major language
                              code.  It must be drawn from <a href="http://www.loc.gov/standards/iso639-2/">ISO 639.2 -Codes for the representation of names of languages--Part 1: Alpha-2 Code</a> whenever possible. If no two character code is available, it may be drawn from <a href="http://lcweb.loc.gov/standards/iso639-2/langhome.html">ISO 639.2 - Codes for the representation of names of languages--Part 2: Alpha-3 Code</a>.  There are also additional escape mechanisms that aren&#8217;t described further here.<br />
                              The second subtag is optional. If present, it must be 2-8 characters in length.  If two characters in length, it should contain
                              a country code drawn from <a href="http://www.iso.org/iso/en/prods-services/iso3166ma/02iso-3166-code-lists/index.html">ISO 3166-1 Two character country codes</a>. If the subtag is 3-8 characters long, it must come from the <a href="http://www.iana.org/assignments/language-tags">IANA language tag registry</a>.  Additional subtags serve to further refine the language.
                           </li>
                           <li><em>preferredForLanguage</em>      - TRUE means that this designation should be used to <em>represent the intent of</em> the <strong>CodedConcept</strong> in the specified language when no other contextual information is present. Only one designation may be identified as "preferred"
                              for any given language.
                           </li>
                        </ul>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabAPIConceptProp"></a>6.5 </span><span class="title">ConceptProperty</span></div>
                     <div class="body">
                        <p>A <strong>ConceptProperty</strong> is an "attribute", "facet" or some other characteristic that may <u>represent or help define</u>the intended meaning of zero or more <strong>CodedConcepts</strong>. <strong>ConceptProperty</strong> has the following attributes:
                        </p>
                        <ul style="margin-left:20px;">
                           <li><em>propertyCode</em>       - A combination of a code system id and concept code that identifies the type of property.  Whenever possible, property
                              codes should use the HL7 ConceptProperty code system (OID 2.16.840.1.113883.5.1087). 
                           </li>
                           <li><em>propertyValue</em>     - The textual value of the associated property.
                           </li>
                           <li><em>language_code</em>     - A language code drawn from the code system officially designated by HL7 for such purposes, which is currently OID
                              2.16.840.1.113883.6.84 - <a href="http://www.ietf.org/rfc/rfc3066.txt"> IETF RFC 3066 &#8211; Tag for Identification of Languages</a>.  Not all  <strong>ConceptProperties</strong> have language codes and, if omitted, it is presumed that the property is of a nature that no language applies. 
                           </li>
                           <li><em>mimeType_code</em>  - A code drawn from the officially designated HL7 Media Type code system, which is currently OID 2.16.840.1.113883.5.79
                              - MediaType. Not all <strong>ConceptProperties</strong> will have an associated MIME type, text/plain is the default.
                           </li>
                        </ul>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabAPIConceptRel"></a>6.6 </span><span class="title">ConceptRelationship</span></div>
                     <div class="body">
                        <p>
                           The <strong>ConceptRelationship</strong> class represents binary relationships over the set of <strong>CodedConcepts</strong><u> defined in</u> a single <strong>CodeSystem</strong>.<a name="fn-src11"></a><a href="#fn11"><sup style="font-size: smaller">11</sup></a>Each <strong>ConceptRelationship</strong> must <u>have</u> exactly one <strong>CodedConcept</strong> as a <u>source</u> and exactly one <strong>CodedConcept</strong> as a <u>target.</u>  The <em>relationship_code</em> attribute identifies a directed relation.  The HL7 ConceptCodeRelationship code system (OID 2.16.840.1.113883.5.1088) defines
                           the relations that are used within the HL7 Version 3 Vocabulary. The definitions within this code system determine which concept
                           code is the source and which the target, the transitivity, symmetry and reflexivity characteristics of the relation and the
                           term used to represent the inverse of the relationship. 
                        </p>
                        <p>
                           This list of relationship codes include:
                           
                        </p>
                        <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                           <caption align="BOTTOM"><a name="t21"> </a>
                              			Table
                              			21: Basic Relationship Codes
                           </caption>
                           <thead>
                              <tr>
                                 <th colspan="1">Concept Code</th>
                                 <th colspan="1">IDescription</th>
                                 <th colspan="1">Trans</th>
                                 <th colspan="1">Reflexive</th>
                                 <th colspan="1">Symmetric</th>
                                 <th colspan="1">Inverse</th>
                              </tr>
                           </thead>
                           <tr>
                              <td colspan="1">hasSubtype</td>
                              <td colspan="1">An otherwise unspecified subtype relationship.</td>
                              <td colspan="1">Yes</td>
                              <td colspan="1">No</td>
                              <td colspan="1">No</td>
                              <td colspan="1">isSubtypeOf</td>
                           </tr>
                           <tr>
                              <td colspan="1">hasPart</td>
                              <td colspan="1">An otherwise unspecified partitive relationship.</td>
                              <td colspan="1">Yes</td>
                              <td colspan="1">Yes</td>
                              <td colspan="1">No</td>
                              <td colspan="1">isPartOf</td>
                           </tr>
                           <tr>
                              <td colspan="1">smallerThan</td>
                              <td colspan="1">A generic ordering relationship.</td>
                              <td colspan="1">Yes</td>
                              <td colspan="1">No</td>
                              <td colspan="1">No</td>
                              <td colspan="1">greaterThan</td>
                           </tr>
                        </table>
                     </div>
                  </div>
               </div>
            </div>
            <div class="subSection">
               <!--divN/head-->
               <div class="header"><span class="icon"><img src="../../support/graphics/NormativeStandard.gif" alt="NormativeStandard" /></span><span class="number"><a name="CTSVocabAPISpec"></a>7 </span><span class="title">Vocabulary API Specification</span></div>
               <div class="body">
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabAPISpecIntro"></a>7.1 </span><span class="title">Introduction</span></div>
                     <div class="body">
                        <p>
                           The CTS Vocabulary API (CTSVAPI) is divided into two sections - the runtime section, which defines the set of functions that
                           are needed for everyday operation of HL7 Version 3 message software and the browsing section, which is used in the process
                           of defining and creating HL7 vocabulary and values set/vocabulary domain content.  The browsing section is presumed to have
                           access to the runtime API, so the functionality of the API is not reproduced in the browsing section.  Both sections share
                           the same set of basic type definitions described below.
                        </p>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabAPIBasicTypes"></a>7.2 </span><span class="title">Basic Types</span></div>
                     <div class="body">
                        <p>
                           The following table lists the basic data types that are used in the CTS Vocabulary Runtime, Vocabulary Browser  and Translation
                           APIs.
                        </p>
                        <table width="90%">
                           <tr>
                              <td class="codefragment"><pre></pre></td>
                           </tr>
                        </table>
                        <ul style="margin-left:20px;">
                           <li>OID    - An ISO Object Identifier (OID).
                              
                           </li>
                           <li>Description              - A textual description of an object or entity. Some descriptions can be quite lengthy and impelementations
                              will need to take this fact into account
                              
                           </li>
                           <li>CTSVersionId     - The version identifier of a Common Terminology Services (CTS) implementation.  Version 1.0 would be major: 1 minor:
                              0
                              
                           </li>
                           <li>CodeSystemId     - A unique code system identifier. In the HL7 context, this should be the ISO Object Identifier (OID) assigned by HL7,
                              if one exists.  This does not preclude, however, the use of other identifiers such as a DCE UUID in a non-HL7 contexts. In
                              this case, however, it is the responsibility of the implementor to reconcile any namespace conflicts.
                              
                           </li>
                           <li>CodeSystemName   - A short mnemonic or name for a code system.  CodeSystemName is unique within the HL7 Version 3 namespace, but this cannot
                              be counted on in situations outside of HL7 control.
                              
                           </li>
                           <li>ConceptCode              - A code that uniquely identifies a class or concept within the context of a code system.
                              
                           </li>
                           <li>ConceptId        - the combination of a CodeSystemId and a ConceptCode that is used to provide a globally unique identifier for a concept
                              
                           </li>
                           <li>VersionId        - a unique version identifier.  Typically, version identifiers have some sort of ordering that allows people and/or
                              software to determine which order identifiers come in.
                              
                           </li>
                           <li>CodeSystemVersion- a version identifier for a code system.
                              
                           </li>
                           <li>ExpansionContext - an opaque sequence of bytes used to transfer context between the service and the client.</li>
                        </ul>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabAPICodedDataElem"></a>7.2.1 </span><span class="title">Coded Data Elements</span></div>
                           <div class="body">
                              <p>This section describes the coded data elements used in the vocabulary API</p>
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <ul style="margin-left:20px;">
                                 <li>LanguageCode     &#8211; a code for a spoken or written language that follows the rules described in <a href="http://www.ietf.org/rfc/rfc3066.txt"> IETF RFC 3066 &#8211; Tag for Identification of Languages</a>.  This language code consists of multiple subtags separated by hyphens (&#8216;-&#8216;).  The first subtag identifies the major language
                                    code.  It must be drawn from <a href="http://www.loc.gov/standards/iso639-2/">ISO 639.2 -Codes for the representation of names of languages--Part 1: Alpha-2 Code</a> whenever possible. If no two character code is available, it may be drawn from <a href="http://lcweb.loc.gov/standards/iso639-2/langhome.html">ISO 639.2 - Codes for the representation of names of languages--Part 2: Alpha-3 Code</a>.  There are also additional escape mechanisms that aren&#8217;t described further here.<br />
                                    The second subtag is optional. If present, it must be 2-8 characters in length.  If two characters in length, it should contain
                                    a country code drawn from <a href="http://www.iso.org/iso/en/prods-services/iso3166ma/02iso-3166-code-lists/index.html">ISO 3166-1 Two character country codes</a>. If the subtag is 3-8 characters long, it must come from the <a href="http://www.iana.org/assignments/language-tags">IANA language tag registry</a>.  Additional subtags serve to further refine the language.
                                 </li>
                                 <li>MimeTypeCode - A mime type drawn from <a href="http://www.ietf.org/rfc/rfc2045.txt">IETF RFC2045 - Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies</a>.  HL7 also maintains a subset of the Mime type codes in the Media Type code system, OID 2.16.840.1.113883.5.79 - MediaType.
                                    
                                 </li>
                                 <li>ConceptStatusCode-  the status of a concept within a code system (active, retired, etc.)
                                    
                                 </li>
                                 <li>PropertyCode     - a property that may be associated with concepts in a code system.
                                    
                                 </li>
                                 <li>RelationshipCode - identifies a particular relation as it occurs in a code system.  Relationship codes must be drawn from the HL7 ConceptRelationship
                                    code system whenever possible.
                                    
                                 </li>
                                 <li>MapQualityCode   - the general "quality" of a concept mapping (exact, broader, narrower, etc.)
                                    
                                 </li>
                                 <li>RelationQualifierCode    - qualifier for a concept relationship.</li>
                                 <li>MatchAlgorithmCode	-a code for an algorithm used for string matching and comparison.</li>
                              </ul>
                              <p>The following table lists the code systems and OIDS that are used in the CTS VAPI messages.</p>
                              <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                                 <caption><a name="t22"> </a>
                                    			Table
                                    			22: Coded Data Element OIDS and Names
                                 </caption>
                                 <thead>
                                    <tr>
                                       <th colspan="1">VAPI Data Element</th>
                                       <th colspan="1">Code System OID</th>
                                       <th colspan="1">Code System Name</th>
                                    </tr>
                                 </thead>
                                 <tr>
                                    <td colspan="1">LanguageCode</td>
                                    <td colspan="1">2.16.840.1.113883.6.99</td>
                                    <td colspan="1">ISO639-1</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">LanguageCode</td>
                                    <td colspan="1">2.16.840.1.113883.6.100</td>
                                    <td colspan="1">ISO639-2</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">MimeTypeCode</td>
                                    <td colspan="1">2.16.840.1.113883.5.79</td>
                                    <td colspan="1">MediaType</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">ConceptStatusCode</td>
                                    <td colspan="1">2.16.840.1.113883.5.1086</td>
                                    <td colspan="1">ConceptStatusCode</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">PropertyCode        </td>
                                    <td colspan="1">2.16.840.1.113883.5.1087    </td>
                                    <td colspan="1">ConceptProperty</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">RelationshipCode    </td>
                                    <td colspan="1">2.16.840.1.113883.5.1088    </td>
                                    <td colspan="1">ConceptCodeRelationship</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">MapQualityCode      </td>
                                    <td colspan="1">2.16.840.1.113883.5.1093    </td>
                                    <td colspan="1">TranslationQuality</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">RelationQualifierCode</td>
                                    <td colspan="1">-</td>
                                    <td colspan="1">-</td>
                                 </tr>
                                 <tr>
                                    <td colspan="1">MatchAlgorithmCode</td>
                                    <td colspan="1">2.16.840.1.113883.5.1094</td>
                                    <td colspan="1">MatchAlgorithm</td>
                                 </tr>
                              </table>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabAPIServicesID"></a>7.2.2 </span><span class="title">Service Identification Section</span></div>
                           <div class="body">
                              <p>The vocabulary runtime and browsing API both inherit a common identification interface.</p>
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>The service identification describes the service implementation - its name, version, description and which CTS version it
                                 is implementing.  It is possible for any identification access call to raise an UnexpectedError exception.
                              </p>
                              <ul style="margin-left:20px;">
                                 <li>getServiceName - returns the name given to the service by the service provider.
                                    
                                 </li>
                                 <li>getServiceVersion- returns a version identifier specific to the service implementation
                                    
                                 </li>
                                 <li>getServiceDescription    - a  description of the service, author, purpose, etc.
                                    
                                 </li>
                                 <li>getCTSVersion   - the specific CTS version that the service implements (e.g. 1.0)</li>
                              </ul>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabAPIExceptions"></a>7.2.3 </span><span class="title">Exceptions</span></div>
                           <div class="body">
                              <p>The following table contains the exceptions that can be raised by one or more of the methods described in this section.  An
                                 exception is an abnormal condition that prevents a method invocation from completing.  Exceptions involving communications,
                                 operating system, database, etc. errors are not included in the list below, and it is assumed that the mechanisms for handling
                                 this type of error will already be addressed by the language and/or communications subsystem used in the implementation.
                              </p>
                              <p>
                                 The exceptions described below assume that the baseline exception includes a text field where the specific details of the
                                 exception can be spelled out.  The additional attributes below provide further information beyond this basic text.
                              </p>
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <ul style="margin-left:20px;"> - the code system identifier isn't recognized by the service. - the code system identifier was recognized, but the concept_code wasn&#8217;t defined in the code system.  - property_code isn&#8217;t supported by the code system
                                  - language_code isn&#8217;t supported by the code system
                                            - relationship_code isn&#8217;t supported by the code system
                                   - relationQualifier_code isn&#8217;t supported by the code system
                                              - mimeType_code isn&#8217;t  supported by the code system
                                       - no designation could be found for concept_id in language language_code
                                   - codeSystem_name doesn&#8217;t identify the same code system as codeSystem_id, or it doesn&#8217;t name a code system at all.
                                               - matchText can&#8217;t be parsed by the service
                              </ul>
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabRTAPI"></a>7.3 </span><span class="title">The CTS Vocabulary Runtime API</span></div>
                     <div class="body">
                        <p>This section describes the attributes and methods of the runtime section of the CTS Vocabulary API.</p>
                        <table width="90%">
                           <tr>
                              <td class="codefragment"><pre></pre></td>
                           </tr>
                        </table>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabRTAPICodeSys"></a>7.3.1 </span><span class="title">Code Systems Supported by the API</span></div>
                           <div class="body">
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <ul style="margin-left:20px;">
                                 <li>codeSystem_id     - the unique code system identifier, which is usually the ISO OID.
                                    
                                 </li>
                                 <li>codeSystem_name  - the official name of the code system.
                                    
                                 </li>
                                 <li>copyright        - copyright notice associated with code system, if any.
                                    
                                 </li>
                                 <li>codeSystem_versions- the version or versions of the code system that are supported by this service.  This list may be empty if the code system
                                    doesn&#8217;t support individual version identifiers.
                                 </li>
                              </ul>
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>getSupportedCodeSystems provides a list of all code systems and versions supported by the service. </p>
                              <p>Parameters:</p>
                              <ul style="margin-left:20px;">
                                 <li>timeout - The time, in milliseconds, that the client is willing to wait for this operation to be completed.  A timeout value of 0
                                    means that there is no time limit on the operation.
                                 </li>
                                 <li>sizeLimit - The maximum number of elements that the service may return.  If exactly sizeLimit items are returned, the client nust assume
                                    that there were additional items that weren't returned.  A sizeLimit of 0 indicates that the number of items that may be returned
                                    is unlimited.
                                 </li>
                              </ul>
                              <p>Exceptions:</p>
                              <ul style="margin-left:20px;">
                                 <li>TimeoutError</li>
                                 <li>UnexpectedError</li>
                              </ul>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabRTAPILookCodeSys"></a>7.3.2 </span><span class="title">Look up Identifying Information About a Code System</span></div>
                           <div class="body">
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <ul style="margin-left:20px;">
                                 <li>codeSystem               - the code system id, name and supported version(s)
                                    
                                 </li>
                                 <li>fullName- the complete name of the code system
                                    
                                 </li>
                                 <li>codeSystemDescription- the description of the code system contents
                                    
                                 </li>
                                 <li>supportedLanguages- a list of all of the languages supported by the service for the code system.  A "supported" language is recognized by the
                                    code system and at least some of the concept designations or properties are available in that language. All code systems must
                                    support at least one language. While the service must list all of the primary language subtags that it supports, it is optional
                                    whether it lists secondary languages.  (i.e., if it supports "en-UK", it must list "en" but may or may not list "en-UK").
                                    
                                 </li>
                                 <li>supportedRelations- a list of all of the relationship codes supported by the service for the code system.  A "supported" relationship is recognized
                                    by the code system and the code system is able to determine whether any two concept codes in the code system are or are not
                                    related to each other under this relationship.  A non-hierarchical code system doesn&#8217;t need to support any relationships.
                                    Subsumption is represented by the hasSubtype relationship code.
                                    
                                 </li>
                                 <li>supportedProperties- a list of all of the properties supported by the service for the code system.  A "supported" property means that the code
                                    system recognizes the property and at least one coded concept is associated with this property and an optional value.
                                    
                                 </li>
                                 <li>supportedMimeTypes- a list of the mime types supported by the code system.  All code systems must support the "text/plain" mime type, even if
                                    there are no properties associated with it.
                                    
                                 </li>
                                 <li>supportedRelationQualifiers- a list of the relationship qualifiers supported by the code system (if any).</li>
                              </ul>
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>
                                 lookupCodeSystemInfo takes a code system identifier (OID) and/or name and returns a detailed description of the code system
                                 and elements that are supported by the service.
                              </p>
                              <p>Parameters:</p>
                              <ul style="margin-left:20px;">
                                 <li>codeSystem_id    - the iso OID of the code system
                                    
                                 </li>
                                 <li>codeSystem_name  - the unique code system name   </li>
                              </ul>
                              <p>
                                 Exceptions:
                              </p>
                              <ul style="margin-left:20px;">
                                 <li>UnknownCodeSystem</li>
                                 <li>CodeSystemNameIdMismatch</li>
                                 <li>UnexpectedError</li>
                              </ul>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabRTAPIValiConcept"></a>7.3.3 </span><span class="title">Validate a Concept Identifier</span></div>
                           <div class="body">
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>
                                 isConceptIdValid determines whether the supplied concept identifier is valid.
                              </p>
                              <p>Parameters:</p>
                              <ul style="margin-left:20px;">
                                 <li>concept_id               - the code system and concept code to validate
                                    
                                 </li>
                                 <li>activeConceptsOnly- TRUE means that only active concepts are considered valid.  FALSE means that any concept code known to the code system is
                                    ok.
                                 </li>
                              </ul>
                              <p>
                                 Exceptions:
                              </p>
                              <ul style="margin-left:20px;">
                                 <li>UnknownCodeSystem</li>
                                 <li>UnexpectedError</li>
                              </ul>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabRTAPILookupDesigforcon"></a>7.3.4 </span><span class="title">Look up a Designation for a Concept Identifier</span></div>
                           <div class="body">
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>
                                 The StringAndLanguage structure contains both the text and associated language code.  The two part structure exists because
                                 it is possible for the language returned by lookupDesignation and other operations to be different than the requested language.
                                 As an example, the client may request the designation for a concept in the en-scouse (English Liverpudlian dialect) and the
                                 service may return a designation in unqualified English (en).  The client software may need to know that the returned value
                                 doesn&#8217;t exactly match the requested value.
                              </p>
                              <p>
                                 Some programming language bindings may already include the language code as part of the return value (e.g. XML/SOAP).  For
                                 the sake of consistency, the language_code field should be carried in those bindings even if it is redundant.
                              </p>
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>lookupDesignation returns the most appropriate designation for the supplied concept identifier in the specified language and
                                 context.  lookupDesignation will first attempt to find a designation that exactly matches the supplied language. If no matches
                                 are found, it will remove the rightmost subtag, if any and try again.  This process will be repeated until a matching designation
                                 is found or only the primary subtag remains.  As an example, "en-UK-south" would match "en-UK-south", "en-UK" and "en" in
                                 that order.  It would not match "en-US" or "fr".
                              </p>
                              <p>Parameters:</p>
                              <ul style="margin-left:20px;">
                                 <li>concept_id                - the code system id and concept code
                                    
                                 </li>
                                 <li>language_code     - the desired language of the returned designation</li>
                              </ul>
                              <p>
                                 Exceptions:
                              </p>
                              <ul style="margin-left:20px;">
                                 <li>UnknownLanguageCode</li>
                                 <li>UnknownCodeSystem</li>
                                 <li>UnknownConceptCode</li>
                                 <li>NoApplicableDesignationFound</li>
                                 <li>UnexpectedError</li>
                              </ul>
                              <div class="subSubSubSection">
                                 <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabRTAPIlookupDesigMatch"></a>7.3.4.1 </span><span class="title">lookupDesignation Matching Rules</span></div>
                                 <div class="body">
                                    <p><a href="http://www.ietf.org/rfc/rfc3066.txt">RFC 3066, Tags for the Identification of Languages</a> specifies a multipart language code.  The first part is derived from the two or three character language codes as specified
                                       in ISO 639, with two character codes taking precedence to three in the case of duplicates.  The second part of the language
                                       code, the subtag, specifies the country, region or other variant.
                                    </p>
                                    <ol>
                                       <li>Determine whether the primary language code is supported by the code system and, if not, raise UnknownLanguageCode
                                          
                                       </li>
                                       <li>If a designation with a exactly matching language code and preferredForLanguage set to true is located, return it.
                                          
                                       </li>
                                       <li>If there are any designations that exactly match the language code and preferredForLanguage is set to false return the alphabetically
                                          earliest of these designations.
                                          
                                       </li>
                                       <li>If the language code has one or more secondary subtags, remove the rightmost tag and repeat steps 1 and 2
                                          
                                       </li>
                                       <li>If the language code doesn&#8217;t have a second subtag raise NoApplicableDesignationFound.</li>
                                    </ol>
                                 </div>
                              </div>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabRTAPIDetWheterTwoConcodes"></a>7.3.5 </span><span class="title">Determine Whether Two Concept Codes are Related</span></div>
                           <div class="body">
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>
                                 Determine whether the supplied concept codes are related
                              </p>
                              <p>Parameters:</p>
                              <ul style="margin-left:20px;">
                                 <li>codeSystem_id    - the code system of the parent and child codes
                                    
                                 </li>
                                 <li>source_code              - the concept code that occurs as the source of the relationship
                                    
                                 </li>
                                 <li>target_code               - the concept code that occurs as the target of the relationship
                                    
                                 </li>
                                 <li>relationship_code - the concept code that identifies the relationship
                                    
                                 </li>
                                 <li>relationQualifiers - an optional list of relationship qualifier codes.  If the relationQualifiers list contains one or more qualifier codes,
                                    only relationship entries that that have qualifiers that match all of the qualifiers in the list will be considered.
                                    
                                 </li>
                                 <li>directRelationsOnly- TRUE means test direct relationships only, FALSE means that the transitive closure of the relationship is to be tested if
                                    the relationship is transitive.  If the relationship is not transitive, the result is the same no matter the setting of this
                                    flag.
                                 </li>
                              </ul>
                              <p>areCodesRelated returns TRUE if one of the following conditions holds:
                                 
                              </p>
                              <ol>
                                 <li>There is a direct relationship of type relationship_code between source_code and target_code according to the specified code
                                    system.
                                    
                                 </li>
                                 <li>There is a direct relationship of type relationship_code between target_code and source_code according to the specified code
                                    system and the relationship is defined as symmetric.
                                    
                                 </li>
                                 <li>Source_code equals target code and the relationship is reflexive.
                                    
                                 </li>
                                 <li>directRelationsOnly is FALSE, relationship_code is transitive and there is a relationship of type relationship_code between
                                    source_code and target_code in the forward transitive closure of relationship_code starting at source_code.
                                    
                                 </li>
                                 <li>directRelationsOnly is FALSE, relationship_code is transitive and symmetric and there is a relationship of type relationship_code
                                    between target_code and source_code in the backwards transitive closure of relationship_code starting at source_code
                                 </li>
                              </ol>
                              <p>
                                 Exceptions:
                              </p>
                              <ul style="margin-left:20px;">
                                 <li>UnknownConceptCode</li>
                                 <li>UnknownCodeSystem</li>
                                 <li>UnknownRelationshipCode</li>
                                 <li>UnknownRelationQualifier</li>
                                 <li>UnexpectedError</li>
                              </ul>
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabBrowsingAPI"></a>7.4 </span><span class="title">The CTS Vocabulary Browsing API</span></div>
                     <div class="body">
                        <p>
                           The CTS Vocabulary Browser module may be implemented separately or in combination with the CTS Vocabulary Messaging module.
                           The browsing functions are designed to provide additional capabilities that are more appropriate in an authoring and browsing
                           environment where performance isn&#8217;t an absolutely critical requirement.
                        </p>
                        <p>
                           The CTS Vocabulary Browsing API uses the same basic types as the runtime API, which are defined in <a href="#CTSVocabAPIBasicTypes">Basic Types
                              			(§
                              			7.2 )</a>.
                           This section describes the attributes and methods of the browser section of the CTS Vocabulary API.
                        </p>
                        <table width="90%">
                           <tr>
                              <td class="codefragment"><pre></pre></td>
                           </tr>
                        </table>
                        <p>The browser inherits the basic attributes of the Identification section, which is described in <a href="#CTSVocabAPIServicesID">Service Identification Section
                              			(§
                              			7.2.2 )</a></p>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabBrowsingAPICodeSystSupt"></a>7.4.1 </span><span class="title">Code Systems Supported by the API</span></div>
                           <div class="body">
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>getSupportedCodeSystems provides a list of all code systems and versions supported by the service.  The CodeSsytemIdAndVersionsList
                                 structure is defined in <a href="#CTSVocabRTAPICodeSys">Code Systems Supported by the API
                                    			(§
                                    			7.3.1 )</a></p>
                              <ul style="margin-left:20px;">
                                 <li>timeout - The time, in milliseconds, that the client is willing to wait for this operation to be completed.  A timeout value of 0
                                    means that there is no time limit on the operation.
                                 </li>
                                 <li>sizeLimit - The maximum number of elements that the service may return.  If exactly sizeLimit items are returned, the client assume
                                    that there were additional itemes that weren't returned.  A sizeLimit of 0 indicates that the number of items that may be
                                    returned is unlimited.
                                 </li>
                              </ul>
                              <p>Exceptions:</p>
                              <ul style="margin-left:20px;">
                                 <li>TimeoutError</li>
                                 <li>UnexpectedError</li>
                              </ul>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabBrowsingAPISearchConCodesbyTxt"></a>7.4.2 </span><span class="title">Search for Concept Codes by Designation Text</span></div>
                           <div class="body">
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>
                                 Return a list of concept identifiers having matching designation(s)and criteria
                              </p>
                              <ul style="margin-left:20px;">
                                 <li>codeSystem_id - code system to be searched.
                                    
                                 </li>
                                 <li>matchText - If present and non-null, only vocabulary domains having names that match the text.  If matchtext absent or null, all vocabulary
                                    domains will be returned.
                                 </li>
                                 <li>matchAlgorithm_code - If the matchText is present and non-null, the matchAlgorithm_code determines how the match text is applied. See <a href="#CTSMatchAlgorithm">Text Match Algorithms
                                       			(§
                                       			5.2.2.1 )</a> for details.
                                 </li>
                                 <li>language_code     - if supplied, restrict the search to designations with this language only.  (Default: Search all languages).  Language
                                    code matches will not be more general than the supplied language_code.  If, for example, "en" is passed as the language code,
                                    it will match designations with a language of "en", "en-UK", "en-UK-south", etc.  If, however, "en-UK-south" is passed as
                                    the language code, only concepts having designations in that specific language will be returned.
                                    
                                 </li>
                                 <li>activeConceptsOnly- TRUE means match active concept codes only, FALSE means match any concept code in the code system (Default: TRUE)
                                    
                                 </li>
                                 <li>timeout - The time, in milliseconds, that the client is willing to wait for this operation to be completed.  A timeout value of 0
                                    means that there is no time limit on the operation.
                                 </li>
                                 <li>sizeLimit - The maximum number of elements that the service may return.  If exactly sizeLimit items are returned, the client assume
                                    that there were additional itemes that weren't returned.  A sizeLimit of 0 indicates that the number of items that may be
                                    returned is unlimited.
                                 </li>
                              </ul>
                              <p>Exceptions:</p>
                              <ul style="margin-left:20px;">
                                 <li>UnknownCodeSystem</li>
                                 <li>BadlyFormedMatchText</li>
                                 <li>UnknownMatchCode</li>
                                 <li>UnknownLanguageCode</li>
                                 <li>TimeoutError</li>
                                 <li>UnexpectedError</li>
                              </ul>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabBrowsingAPISearchConCodesbyProp"></a>7.4.3 </span><span class="title">Search for Concept Codes by Property</span></div>
                           <div class="body">
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>Return a list of concept identifiers having one or more properties with values that match the supplied match text string and
                                 other criteria:
                              </p>
                              <ul style="margin-left:20px;">
                                 <li>codeSystem_id - code system to be searched.
                                    
                                 </li>
                                 <li>matchText - the text to search for.  The format and syntax of matchText depends upon the matchAlgorithmCode.</li>
                                 <li>matchAlgorithm_code - The match algorithm to use when comparing the match text with the target designations. See <a href="#CTSMatchAlgorithm">Text Match Algorithms
                                       			(§
                                       			5.2.2.1 )</a> for details.
                                 </li>
                                 <li>language_code     - if supplied, restrict the search to designations with this language only.  (Default: Search all languages).  Language
                                    code matches will not be more general than the supplied language_code.  If, for example, "en" is passed as the language code,
                                    it will match designations with a language of "en", "en-UK", "en-UK-south", etc.  If, however, "en-UK-south" is passed as
                                    the language code, only concepts having designations in that specific language will be returned.
                                    
                                 </li>
                                 <li>activeConceptsOnly- TRUE means match active concept codes only, FALSE means match any concept code in the code system (Default: TRUE)
                                    
                                 </li>
                                 <li>properties- list of properties codes to be searched.  (Default: search all properties)
                                    
                                 </li>
                                 <li>mimeTypes- list of mime types to search.  (Default: search all MIME types)</li>
                                 <li>timeout - The time, in milliseconds, that the client is willing to wait for this operation to be completed.  A timeout value of 0
                                    means that there is no time limit on the operation.
                                 </li>
                                 <li>sizeLimit - The maximum number of elements that the service may return.  If exactly sizeLimit items are returned, the client assume
                                    that there were additional itemes that weren't returned.  A sizeLimit of 0 indicates that the number of items that may be
                                    returned is unlimited.
                                 </li>
                              </ul>
                              <p>Exceptions:</p>
                              <ol>
                                 <li>UnknownCodeSystem</li>
                                 <li>BadlyFormedMatchText</li>
                                 <li>UnknownMatchCode</li>
                                 <li>UnknownLanguageCode</li>
                                 <li>UnknownPropertyCode</li>
                                 <li>UnknownMimeTypeCode</li>
                                 <li>TimeoutError</li>
                                 <li>UnexpectedError</li>
                              </ol>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabBrowsingAPIRetComplDesc"></a>7.4.4 </span><span class="title">Return a Complete Description of a Coded Concept</span></div>
                           <div class="body">
                              <p>The following structures are all used to build the complete coded concept description return structure</p>
                              <div class="subSubSubSection">
                                 <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabBrowsingAPIConceptDesignation"></a>7.4.4.1 </span><span class="title">ConceptDesignation Structure</span></div>
                                 <div class="body">
                                    <table width="90%">
                                       <tr>
                                          <td class="codefragment"><pre></pre></td>
                                       </tr>
                                    </table>
                                    <ul style="margin-left:20px;">
                                       <li>designation              - a designation for a coded concept
                                          
                                       </li>
                                       <li>language_code    - the language of the designation
                                          
                                       </li>
                                       <li>preferredForLanguage- TRUE means that this designation should be used for the supplied language unless other criteria apply. At most, one designation
                                          may be marked as preferred for a given concept and language.
                                       </li>
                                    </ul>
                                 </div>
                              </div>
                              <div class="subSubSubSection">
                                 <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabBrowsingAPIConceptProperty"></a>7.4.4.2 </span><span class="title">ConceptProperty Structure</span></div>
                                 <div class="body">
                                    <table width="90%">
                                       <tr>
                                          <td class="codefragment"><pre></pre></td>
                                       </tr>
                                    </table>
                                    <ul style="margin-left:20px;">
                                       <li>property_code     - a concept code that identifies a particular property
                                          
                                       </li>
                                       <li>propertyValue    - the value of this property for a given concept
                                          
                                       </li>
                                       <li>language_code     - the language of the propertyValue (optional)
                                          
                                       </li>
                                       <li>mimeTypeCode     - the MIME type of the propertyValue (default: text/plain)</li>
                                    </ul>
                                 </div>
                              </div>
                              <div class="subSubSubSection">
                                 <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabBrowsingAPICompCodedCon"></a>7.4.4.3 </span><span class="title">CompleteCodedConceptDescription Structure</span></div>
                                 <div class="body">
                                    <table width="90%">
                                       <tr>
                                          <td class="codefragment"><pre></pre></td>
                                       </tr>
                                    </table>
                                    <ul style="margin-left:20px;">
                                       <li>sourceConcept_id- the concept identifier (code system id and concept code) of the source concept in the relationship.</li>
                                       <li>relationship_code- the relationship code.</li>
                                       <li>relationQualifiers-an optional list of qualifier codes that further refine or otherwise qualify the relationship entry.
                                          
                                       </li>
                                       <li>targetConcept_id - concept identifier (code system id and concept code) of the target of the relationship.</li>
                                    </ul>
                                    <table width="90%">
                                       <tr>
                                          <td class="codefragment"><pre></pre></td>
                                       </tr>
                                    </table>
                                    <ul style="margin-left:20px;">
                                       <li>concept_id                - the code system identifier and concept code being retrieved.
                                          
                                       </li>
                                       <li>conceptStatus_code- the status of the concept in the given code system version.
                                          
                                       </li>
                                       <li>codeSystem_version- the version of the code system that the description was drawn from.
                                          
                                       </li>
                                       <li>designatedBy      - a list of all of the designations for the coded concept.
                                          
                                       </li>
                                       <li>hasProperties     - a list of all of the properties of the coded concept excluding the ConceptDesignation properties.
                                          
                                       </li>
                                       <li>sourceFor                - a list of all of the relationships in which this concept plays the role of "source".
                                          
                                       </li>
                                       <li>targetOf         - a list of all of the relationships in which this concept plays the role of "target".</li>
                                    </ul>
                                    <table width="90%">
                                       <tr>
                                          <td class="codefragment"><pre></pre></td>
                                       </tr>
                                    </table>
                                    <p>lookupCompleteCodedConcept returns a structure containing everything that is known about a given concept code (from the CTS
                                       perspective).
                                    </p>
                                    <p>Parameters:</p>
                                    <ul style="margin-left:20px;">
                                       <li>concept_id- a code system identifier and concept code</li>
                                    </ul>
                                    <p>
                                       Exceptions:
                                    </p>
                                    <ul style="margin-left:20px;">
                                       <li>UnknownCodeSystem</li>
                                       <li>UnknownConceptCode</li>
                                       <li>UnexpectedError</li>
                                    </ul>
                                 </div>
                              </div>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabBrowsingAPILkupDesigConCode"></a>7.4.5 </span><span class="title">Look up Designations for a Specific Concept Code</span></div>
                           <div class="body">
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>
                                 lookupDesignations returns selected designations for the supplied concept.  The matching rules for lookupDesignations are
                                 identical to those defined in <a href="#CTSVocabBrowsingAPISearchConCodesbyTxt">Search for Concept Codes by Designation Text
                                    			(§
                                    			7.4.2 )</a>. The ConceptDesignationList return structure is described in <a href="#CTSVocabBrowsingAPIConceptDesignation">ConceptDesignation Structure
                                    			(§
                                    			7.4.4.1 )</a>.
                              </p>
                              <ul style="margin-left:20px;">
                                 <li>concept_id                - the code system identifier and concept code to look up
                                    
                                 </li>
                                 <li>matchText - the text to search for.  The format and syntax of matchText depends upon the matchAlgorithmCode.</li>
                                 <li>matchAlgorithm_code - The match algorithm to use when comparing the match text with the target designations. See <a href="#CTSMatchAlgorithm">Text Match Algorithms
                                       			(§
                                       			5.2.2.1 )</a> for details.
                                 </li>
                                 <li>language_code     - if supplied, restrict the search to this language only.  (Default: Search all languages)</li>
                              </ul>
                              <p>Exceptions:</p>
                              <ul style="margin-left:20px;">
                                 <li>UnknownCodeSystem</li>
                                 <li>UnknownConceptCode</li>
                                 <li>BadlyFormedMatchText</li>
                                 <li>UnknownMatchAlgorithm</li>
                                 <li>UnknownLanguageCode</li>
                                 <li>UnexpectedError</li>
                              </ul>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabBrowsingAPILkupPropConCode"></a>7.4.6 </span><span class="title">Look up Properties for a Concept Code</span></div>
                           <div class="body">
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>lookupProperties returns selected properties for the supplied concept. Properties, matchText language_code and mimeTypes properties
                                 follow the same rules as those in lookupConceptCodesByProperty. The ConceptPropertyList return structure is described in <a href="#CTSVocabBrowsingAPIConceptProperty">ConceptProperty Structure
                                    			(§
                                    			7.4.4.2 )</a>.
                              </p>
                              <ul style="margin-left:20px;">
                                 <li>concept_id- the code system identifier and concept code to get the properties for
                                    
                                 </li>
                                 <li>properties- a list of properties to search.  If omitted or empty, all properties are searched.
                                    
                                 </li>
                                 <li>matchText - the text to search for.  The format and syntax of matchText depends upon the matchAlgorithmCode.</li>
                                 <li>matchAlgorithm_code - The match algorithm to use when comparing the match text with the target designations. See <a href="#CTSMatchAlgorithm">Text Match Algorithms
                                       			(§
                                       			5.2.2.1 )</a> for details.
                                 </li>
                                 <li>language_code     - if supplied, restrict the search to this language only.  (Default: Search all languages)</li>
                                 <li>mimeTypes - list of mime types to search.  (Default: search all MIME types)</li>
                              </ul>
                              <p>Exceptions:</p>
                              <ul style="margin-left:20px;">
                                 <li>UnknownCodeSystem</li>
                                 <li>UnknownConceptCode</li>
                                 <li>BadlyFormedMatchText</li>
                                 <li>UnknownMatchAlgorithm</li>
                                 <li>UnknownLanguageCode</li>
                                 <li>UnknownPropertyCode</li>
                                 <li>UnknownMimeTypeCode</li>
                                 <li>UnexpectedError</li>
                              </ul>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabBrowsingAPIRetListConCode"></a>7.4.7 </span><span class="title">Return a List of Related ConceptCodes</span></div>
                           <div class="body">
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>Parameters:</p>
                              <ul style="margin-left:20px;">
                                 <li>pathLength      - an integer that defines the distance from the codeToExpand in hops.  The root node will always have a path length
                                    of 0.
                                 </li>
                                 <li>concept_code     - related concept code
                                    
                                 </li>
                                 <li>designation              - the preferred designation for code in the appropriate language and usage context, or the default designation
                                    if none is stated explicitly as being preferred
                                    
                                 </li>
                                 <li>relationQualifiers               - list of relationship qualifiers that apply to this node
                                    
                                 </li>
                                 <li>canExpand         - TRUE means that there are additional concept codes directly related to concept_code that can be further expanded.
                                    
                                 </li>
                                 <li>expansionContext- if canExpand is true, this field contains an opaque context that can be used to further expand the code in this node.</li>
                              </ul>
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <!--divN/text()-->
                              
                              lookupCodeExpansion returns a flattened list of codes that have relationship relationship_code to expandConcept_id.concept_code
                              in the code system named by expandConcept_id.codeSystem_id.
                              
                              <ul style="margin-left:20px;">
                                 <li>expandConcept_id  - code system identifier and concept code to be expanded.  If the relationship_code is "hasSubtype" and souceToTarget is
                                    true, the concept code can be omitted, meaning that we want all "root" concepts in the subtype relationship - all concepts
                                    that do not appear as the target of one or more hasSubtype relationships.
                                    
                                 </li>
                                 <li>relationship_code - relationship to be expanded
                                    
                                 </li>
                                 <li>sourceToTarget- TRUE means expand from source to target.  FALSE means expand from target to source.
                                    
                                 </li>
                                 <li>directRelationsOnly- if TRUE or relationship_code is not transitive, only the direct targets (or sources if sourceToTarget is FALSE) of expandConcept_id
                                    are returned.  If FALSE and relationship_code is transitive, descendants or ancestors are returned as well.
                                    
                                 </li>
                                 <li>designationlanguage_code    - language that the returned concept designations should be in
                                    
                                 </li>
                                 <li>timeout - The time, in milliseconds, that the client is willing to wait for this operation to be completed.  A timeout value of 0
                                    means that there is no time limit on the operation.
                                 </li>
                                 <li>sizeLimit - The maximum number of elements that the service may return.  If exactly sizeLimit items are returned, the client assume
                                    that there were additional itemes that weren't returned.  A sizeLimit of 0 indicates that the number of items that may be
                                    returned is unlimited.
                                 </li>
                              </ul>
                              <p>A depth-first tree-walk is used to return the descendants or ancestors of the node. if a node occurs in more than one branch,
                                 it is replicated for the return structure.  If directRelationsOnly is false, the relationship is transitive, and there is
                                 a cycle in the relationship structure, expansion will stop at the last non-repeating node.  canExpand will be set to true
                                 for this node which will allow the client to manually descend the cyclic structure if it chooses, one cycle at a time.
                              </p>
                              <p>language_code and usageContext_code are used to determine which designation to return in the RelatedCode structure. The rules
                                 for determining the correct designation are the same as in the lookupDesignation method, except that this method doesn't throw
                                 a NoApplicableDesignationFound exception.  If there isn't an applicable designation for a particular node, the designation
                                 field will contain an empty string.
                              </p>
                              <p>Exceptions:</p>
                              <ul style="margin-left:20px;">
                                 <li>UnknownCodeSystem</li>
                                 <li>UnknownConceptCode</li>
                                 <li>UnknownRelationshipCode</li>
                                 <li>UnknownLanguageCode</li>
                                 <li>TimeoutError</li>
                                 <li>UnexpectedError</li>
                              </ul>
                              <div class="subSubSubSection">
                                 <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabBrowsingAPILkupCodeExpansion"></a>7.4.7.1 </span><span class="title">lookupCodeExpansion detail</span></div>
                                 <div class="body">
                                    <p>In the diagram below, the vertices represent an arbitrary transitive relationship with the arrows pointing from the source
                                       concepts to the target concepts.
                                    </p>
                                    <p>
                                       <table width="90%">
                                          <tr>
                                             <td class="figure"><pre><br /><img class="graphic" src="graphics/ctsFig7.gif" alt="ctsFig7.gif" /><br /><br /></pre></td>
                                          </tr>
                                       </table>
                                    </p>
                                    <p>
                                       
                                       The following tables show the values that would be returned from lookupCodeExpansion using the information described in the
                                       figure above and the supplied parameters.
                                    </p>
                                    <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                                       <caption align="BOTTOM"><a name="t21"> </a>
                                          			Table
                                          			23: lookupCodeExpansion(expandConcept_id=D, sourceToTarget=TRUE, directRelationsOnly=TRUE)
                                       </caption>
                                       <thead>
                                          <tr>
                                             <th colspan="1">pathLength</th>
                                             <th colspan="1">concept_code</th>
                                             <th colspan="1">canExpand</th>
                                             <th colspan="1">expansionContext</th>
                                          </tr>
                                       </thead>
                                       <tr>
                                          <td colspan="1">1</td>
                                          <td colspan="1">E</td>
                                          <td colspan="1">TRUE</td>
                                          <td colspan="1">(ecE)</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">1</td>
                                          <td colspan="1">F</td>
                                          <td colspan="1">TRUE</td>
                                          <td colspan="1">(ecF)</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">1</td>
                                          <td colspan="1">I</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">1</td>
                                          <td colspan="1">J</td>
                                          <td colspan="1">TRUE</td>
                                          <td colspan="1">(ecJ)</td>
                                       </tr>
                                    </table>
                                    <p><br /><br /></p>
                                    <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                                       <caption align="BOTTOM"><a name="t22"> </a>
                                          			Table
                                          			24: lookupCodeExpansion (expandConcept_id=D, sourceToTarget=TRUE, directRelationsOnly=FALSE)
                                       </caption>
                                       <thead>
                                          <tr>
                                             <th colspan="1">pathLength</th>
                                             <th colspan="1">concept_code</th>
                                             <th colspan="1">canExpand</th>
                                             <th colspan="1">expansionContext</th>
                                          </tr>
                                       </thead>
                                       <tr>
                                          <td colspan="1">1</td>
                                          <td colspan="1">E</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">2</td>
                                          <td colspan="1">G</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">3</td>
                                          <td colspan="1">H</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">1</td>
                                          <td colspan="1">F</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">2</td>
                                          <td colspan="1">G</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">3</td>
                                          <td colspan="1">H</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">1</td>
                                          <td colspan="1">I</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">1</td>
                                          <td colspan="1">J</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">2</td>
                                          <td colspan="1">K</td>
                                          <td colspan="1">TRUE</td>
                                          <td colspan="1">(ecK)</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">3</td>
                                          <td colspan="1">M</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                    </table>
                                    <p>Note that node 2K was returned in the example above as expandable because a cycle was detected.</p>
                                    <p><br /><br /></p>
                                    <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                                       <caption align="BOTTOM"><a name="t23"> </a>
                                          			Table
                                          			25: lookupCodeExpaionsion (expandConcept_id=D, sourceToTarget=FALSE, directRelationsOnly=FALSE)
                                       </caption>
                                       <thead>
                                          <tr>
                                             <th colspan="1">pathLength</th>
                                             <th colspan="1">concept_code</th>
                                             <th colspan="1">canExpand</th>
                                             <th colspan="1">expansionContext</th>
                                          </tr>
                                       </thead>
                                       <tr>
                                          <td colspan="1">1</td>
                                          <td colspan="1">B</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">2</td>
                                          <td colspan="1">A</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">1</td>
                                          <td colspan="1">C</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">2</td>
                                          <td colspan="1">K</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">1</td>
                                          <td colspan="1">J</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">2</td>
                                          <td colspan="1">D</td>
                                          <td colspan="1">TRUE</td>
                                          <td colspan="1">(ecD)</td>
                                       </tr>
                                    </table>
                                    <p><br /><br /></p>
                                    <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                                       <caption align="BOTTOM"><a name="t24"> </a>
                                          			Table
                                          			26: lookupCodeExpansion (expandConcept_id=, sourceToTarget=TRUE, directRelationsOnly=TRUE)
                                       </caption>
                                       <thead>
                                          <tr>
                                             <th colspan="1">pathLength</th>
                                             <th colspan="1">concept_code</th>
                                             <th colspan="1">canExpand</th>
                                             <th colspan="1">expansionContext</th>
                                          </tr>
                                       </thead>
                                       <tr>
                                          <td colspan="1">1</td>
                                          <td colspan="1">A</td>
                                          <td colspan="1">TRUE</td>
                                          <td colspan="1">(ecA)</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">1</td>
                                          <td colspan="1">L</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                    </table>
                                    <p><br /><br /></p>
                                    <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                                       <caption align="BOTTOM"><a name="t25"> </a>
                                          			Table
                                          			27: lookupCodeExpansion (expandConcept_id =, sourceToTarget=TRUE, directRelationsOnly=FALSE)
                                       </caption>
                                       <thead>
                                          <tr>
                                             <th colspan="1">pathLength</th>
                                             <th colspan="1">concept_code</th>
                                             <th colspan="1">canExpand</th>
                                             <th colspan="1">expansionContext</th>
                                          </tr>
                                       </thead>
                                       <tr>
                                          <td colspan="1">1</td>
                                          <td colspan="1">L</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">1</td>
                                          <td colspan="1">A</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">2</td>
                                          <td colspan="1">B</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">3</td>
                                          <td colspan="1">D</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">4</td>
                                          <td colspan="1">E</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">5</td>
                                          <td colspan="1">G</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">6</td>
                                          <td colspan="1">H</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">4</td>
                                          <td colspan="1">F</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">5</td>
                                          <td colspan="1">G</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">6</td>
                                          <td colspan="1">H</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">4</td>
                                          <td colspan="1">I</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">4</td>
                                          <td colspan="1">J</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">5</td>
                                          <td colspan="1">K</td>
                                          <td colspan="1">TRUE</td>
                                          <td colspan="1">(ecK)</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">6</td>
                                          <td colspan="1">M</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">2</td>
                                          <td colspan="1">C</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">3</td>
                                          <td colspan="1">D</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">4</td>
                                          <td colspan="1">E</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">5</td>
                                          <td colspan="1">G</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">6</td>
                                          <td colspan="1">H</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">4</td>
                                          <td colspan="1">F</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">5</td>
                                          <td colspan="1">G</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">6</td>
                                          <td colspan="1">H</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">4</td>
                                          <td colspan="1">I</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">4</td>
                                          <td colspan="1">J</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">5</td>
                                          <td colspan="1">K</td>
                                          <td colspan="1">TRUE</td>
                                          <td colspan="1">(ecK)</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">6</td>
                                          <td colspan="1">M</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">2</td>
                                          <td colspan="1">C</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                    </table>
                                    <p><br /><br /></p>
                                    <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                                       <caption align="BOTTOM"><a name="t26"> </a>
                                          			Table
                                          			28: lookupCodeExpansion (expandConcept_id =, sourceToTarget=FALSE, directRelationsOnly=FALSE)
                                       </caption>
                                       <thead>
                                          <tr>
                                             <th colspan="1">pathLength</th>
                                             <th colspan="1">concept_code</th>
                                             <th colspan="1">canExpand</th>
                                             <th colspan="1">expansionContext</th>
                                          </tr>
                                       </thead>
                                       <tr>
                                          <td colspan="1">1</td>
                                          <td colspan="1">H</td>
                                          <td colspan="1">TRUE</td>
                                          <td colspan="1">(ecH)</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">1</td>
                                          <td colspan="1">I</td>
                                          <td colspan="1">TRUE</td>
                                          <td colspan="1">(ecI)</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">1</td>
                                          <td colspan="1">M</td>
                                          <td colspan="1">TRUE</td>
                                          <td colspan="1">(ecM)</td>
                                       </tr>
                                       <tr>
                                          <td colspan="1">1</td>
                                          <td colspan="1">L</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                    </table>
                                    <p><br /><br /></p>
                                    <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                                       <caption align="BOTTOM"><a name="t27"> </a>
                                          			Table
                                          			29: lookupCodeExpansion (expandConcept_id=L, sourceToTarget=TRUE, directRelationsOnly=FALSE)
                                       </caption>
                                       <thead>
                                          <tr>
                                             <th colspan="1">pathLength</th>
                                             <th colspan="1">concept_code</th>
                                             <th colspan="1">canExpand</th>
                                             <th colspan="1">expansionContext</th>
                                          </tr>
                                       </thead>
                                       <tr>
                                          <td colspan="1">-   </td>
                                          <td colspan="1">-   </td>
                                          <td colspan="1">-   </td>
                                          <td colspan="1">-</td>
                                       </tr>
                                    </table>
                                 </div>
                              </div>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabBrowsingAPIFurtExpRetNode"></a>7.4.8 </span><span class="title">Further Expand a Returned Node</span></div>
                           <div class="body">
                              <table width="90%">
                                 <tr>
                                    <td class="codefragment"><pre></pre></td>
                                 </tr>
                              </table>
                              <p>
                                 expandCodeExpansionContext further expands a RelatedCodeList node that was returned by a previous lookupCodeExpansion or expandCodeExpansionContext
                                 call. 
                              </p>
                              <ul style="margin-left:20px;">
                                 <li>contextToExpand- an opaque identifier that was returned in an expansionContext attribute of a RelatedCodeList node in a previous lookupCodeExpansion
                                    or expandCodeExpansionContext call
                                 </li>
                              </ul>
                              <p>Exceptions:</p>
                              <ul style="margin-left:20px;">
                                 <li>InvalidExpansionContext
                                    <p>Note: expansion contexts are not necessarily permanent.  The temporal validity of an expansion context is a function of the
                                       specific service implementation.
                                    </p>
                                 </li>
                                 <li>NoApplicableDesignationFound</li>
                                 <li>TimeoutError</li>
                                 <li>UnexpectedError</li>
                              </ul>
                              <div class="subSubSubSection">
                                 <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVocabBrowsingAPIexpandCodeExpDet"></a>7.4.8.1 </span><span class="title">expandCodeExpansionContext  Detail</span></div>
                                 <div class="body">
                                    <p>
                                       Extending the examples in <a href="#CTSVocabBrowsingAPIRetListConCode">Return a List of Related ConceptCodes
                                          			(§
                                          			7.4.7 )</a>.
                                    </p>
                                    <p>
                                       1)      expandCodeExpansionContext( (expandContext=ecE) using ecE returned by example one in the previous section
                                    </p>
                                    <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                                       <thead>
                                          <tr>
                                             <th colspan="1">pathLength</th>
                                             <th colspan="1">concept_code</th>
                                             <th colspan="1">canExpand</th>
                                             <th colspan="1">expansionContext</th>
                                          </tr>
                                       </thead>
                                       <tr>
                                          <td colspan="1">1</td>
                                          <td colspan="1">G</td>
                                          <td colspan="1">TRUE</td>
                                          <td colspan="1">(ecG)</td>
                                       </tr>
                                    </table>
                                    <p>     Note that the path length is continued from the previous call.</p>
                                    <p>2)   expandCodeExpansionContext( (expandContext=ecG) using ecG returned by the immediately preceeding call</p>
                                    <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                                       <thead>
                                          <tr>
                                             <th colspan="1">pathLength</th>
                                             <th colspan="1">concept_code</th>
                                             <th colspan="1">canExpand</th>
                                             <th colspan="1">expansionContext</th>
                                          </tr>
                                       </thead>
                                       <tr>
                                          <td colspan="1">1</td>
                                          <td colspan="1">H</td>
                                          <td colspan="1">FALSE</td>
                                          <td colspan="1">-</td>
                                       </tr>
                                    </table>
                                    <p>3)   expandCodeExpansionContext (expandContext=ecK) following example 2 in the previous section would yield:</p>
                                    <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                                       <thead>
                                          <tr>
                                             <th colspan="1">pathLength</th>
                                             <th colspan="1">concept_code</th>
                                             <th colspan="1">canExpand</th>
                                             <th colspan="1">expansionContext</th>
                                          </tr>
                                          <tr>
                                             <td colspan="1">3</td>
                                             <td colspan="1">D</td>
                                             <td colspan="1">FALSE</td>
                                             <td colspan="1">-</td>
                                          </tr>
                                          <tr>
                                             <td colspan="1">4</td>
                                             <td colspan="1">E</td>
                                             <td colspan="1">FALSE</td>
                                             <td colspan="1">-</td>
                                          </tr>
                                          <tr>
                                             <td colspan="1">5</td>
                                             <td colspan="1">G</td>
                                             <td colspan="1">FALSE</td>
                                             <td colspan="1">-</td>
                                          </tr>
                                          <tr>
                                             <td colspan="1">6</td>
                                             <td colspan="1">H</td>
                                             <td colspan="1">FALSE</td>
                                             <td colspan="1">-</td>
                                          </tr>
                                          <tr>
                                             <td colspan="1">4</td>
                                             <td colspan="1">F</td>
                                             <td colspan="1">FALSE</td>
                                             <td colspan="1">-</td>
                                          </tr>
                                          <tr>
                                             <td colspan="1">5</td>
                                             <td colspan="1">G</td>
                                             <td colspan="1">FALSE</td>
                                             <td colspan="1">-</td>
                                          </tr>
                                          <tr>
                                             <td colspan="1">6</td>
                                             <td colspan="1">H</td>
                                             <td colspan="1">FALSE</td>
                                             <td colspan="1">-</td>
                                          </tr>
                                          <tr>
                                             <td colspan="1">4</td>
                                             <td colspan="1">I</td>
                                             <td colspan="1">FALSE</td>
                                             <td colspan="1">-</td>
                                          </tr>
                                          <tr>
                                             <td colspan="1">4</td>
                                             <td colspan="1">J</td>
                                             <td colspan="1">FALSE</td>
                                             <td colspan="1">-</td>
                                          </tr>
                                          <tr>
                                             <td colspan="1">5</td>
                                             <td colspan="1">K</td>
                                             <td colspan="1">TRUE</td>
                                             <td colspan="1">(ecK)</td>
                                          </tr>
                                          <tr>
                                             <td colspan="1">6</td>
                                             <td colspan="1">M</td>
                                             <td colspan="1">FALSE</td>
                                             <td colspan="1">-</td>
                                          </tr>
                                       </thead>
                                    </table>
                                 </div>
                              </div>
                           </div>
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="subSection">
               <!--divN/head-->
               <div class="header"><span class="icon"><img src="../../support/graphics/NormativeStandard.gif" alt="NormativeStandard" /></span><span class="number"><a name="CTScodeTranMod"></a>8 </span><span class="title">Code Mapping Model</span></div>
               <div class="body">
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTScodeTransModIntro"></a>8.1 </span><span class="title">Introduction</span></div>
                     <div class="body">
                        <p>HL7 messaging software may need to map from local concepts to the standardized codes used in the HL7 messaging environment,
                           or between different standardized code sets. The Code Mapping API provides an interface for performing these mappings.  Note
                           that the mapping model in this version of the specification is quite limited, and there is no way to map one source code into
                           multiple target codes.  It is anticipated that the mapping functionality will be expanded in a later version of this specification.
                        </p>
                        <p>
                           <table width="90%">
                              <tr>
                                 <td class="figure"><pre><br /><img class="graphic" src="graphics/ctsFig8.gif" alt="ctsFig8.gif" /><br /><br /></pre></td>
                              </tr>
                           </table>
                        </p>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTScodeTransCodeSysTrans"></a>8.2 </span><span class="title">CTS Code Mapping</span></div>
                     <div class="body">
                        <p>
                           A <strong>CodeMap</strong> maps some or all of the concept codes <u>from</u> a source <strong>CodeSystem</strong><u> to</u> the closest corresponding concept code in the target <strong>CodeSystem</strong>. A <strong>CodeMap</strong> is unidirectional - mapping from the source to the target does not imply the ability to map from the target back to the source.
                           A <strong>CodeMap</strong> may optionally identify the <u>from</u> or <u>to</u> versions of the code systems being translated. 
                        </p>
                        <p>A <strong>CodeMap</strong> '<u>contains</u>' one or more <strong>MapEntries</strong>.  Note that the representation of this in this document is strictly symbolic and is not intended to specify how code mappings
                           are actually performed.
                        </p>
                        <p>Each <strong>CodeMap</strong> is identified by a unique<em> map_name</em>. It is possible for there to be more than one <strong>CodeMap</strong> between the same source and target <strong>CodeSystems</strong>. Each <strong>CodeMap</strong> has an optional<em> mapDescription</em> attribute that describes the source of the translation, when it was created, how it was done, etc.
                        </p>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTScodeTransTransEntry"></a>8.3 </span><span class="title">MapEntry</span></div>
                     <div class="body">
                        <p>
                           A <strong>TranslationEntry</strong> represents a translation from the <em>fromCode</em> concept code in the source <strong>CodeSystem</strong> to a corresponding <em>toCode</em> concept code in the target <strong>CodeSystem</strong>. <em>mapQuality_code</em> signifies the 'quality' of the translation from the source code to the target code, and can be one of "exact", "narrower",
                           "broader" or "partial overlap".  
                        </p>
                     </div>
                  </div>
               </div>
            </div>
            <div class="subSection">
               <!--divN/head-->
               <div class="header"><span class="icon"><img src="../../support/graphics/NormativeStandard.gif" alt="NormativeStandard" /></span><span class="number"><a name="CTScodeTranSpec"></a>9 </span><span class="title">Code Mapping Specification</span></div>
               <div class="body">
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTScodeTransSpecIntro"></a>9.1 </span><span class="title">Introduction</span></div>
                     <div class="body">
                        <p>
                           The Code Mapping Interface supports the map of concept codes in one or more source code systems into their equivalent codes
                           in a target system.
                           
                        </p>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTScodeTransSpecId"></a>9.2 </span><span class="title">Mapping Service Identification</span></div>
                     <div class="body">
                        <table width="90%">
                           <tr>
                              <td class="codefragment"><pre></pre></td>
                           </tr>
                        </table>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTScodeTranSpecSupTrans"></a>9.3 </span><span class="title">Code Map</span></div>
                     <div class="body">
                        <table width="90%">
                           <tr>
                              <td class="codefragment"><pre></pre></td>
                           </tr>
                        </table>
                        <p>
                           a CodeMap identifies a particular mapping
                        </p>
                        <ul style="margin-left:20px;">
                           <li>map_name			-the unique name of the particular code map.</li>
                           <li>fromCodeSystem_id        - the ISO OID of the source code system .
                              
                           </li>
                           <li>fromCodeSystem_name      - the name of the source code system.
                              
                           </li>
                           <li>fromCodeSystem_version   - the version of the source code system used in the map (optional).
                              
                           </li>
                           <li>toCodeSystem_id           - the ISO OID of the target code system.
                              
                           </li>
                           <li>toCodeSystem_name         - the name of the target code system.
                              
                           </li>
                           <li>toCodeSystem_version     - the version of the target code system used in the map (optional).
                              
                           </li>
                           <li>description               - a description of the map (source, version, date, location, etc.)
                              
                           </li>
                        </ul>
                        <table width="90%">
                           <tr>
                              <td class="codefragment"><pre></pre></td>
                           </tr>
                        </table>
                        <p>getSupportedMaps returns the set of code maps that are supported by this particular service.  Note that code maps are not
                           symmetric.  The fact that a service supports a map from code system A to code system B does not imply that it also supports
                           a map in the reverse direction.
                           
                        </p>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTScodeTranExceptions"></a>9.4 </span><span class="title">Exceptions</span></div>
                     <div class="body">
                        <p>The following table contains the exceptions that can be raised by one or more of the methods described in this chapter.  An
                           exception is an abnormal condition that prevents a method invocation from completing.  Exceptions involving communications,
                           operating system, database, etc. errors are not included in the list below, and it is assumed that the mechanisms for handling
                           this type of error will already be addressed by the language and/or communications subsystem used in the implementation.
                        </p>
                        <p>
                           The exceptions described below assume that the baseline exception includes a text field where the specific details of the
                           exception can be spelled out.  The additional attributes below provide further information beyond this basic text.
                        </p>
                        <table width="90%">
                           <tr>
                              <td class="codefragment"><pre></pre></td>
                           </tr>
                        </table>
                        <ul style="margin-left:20px;"> -  the service doesn&#8217;t support translation between fromCodeSystem_id and toCodeSystem_id. - the service wasn&#8217;t able to perform the requested mapping. - the supplied map name isn't recognized by the service. - there is more than one possible code map between the supplied source and target code systems.  <em>possible_maps</em> contains the list of applicable map names. - the code system id supplied in the fromConcept_id parameter didn't match the source code system id in the map named in
                           map_name. - the code system id supplied in the toCodeSystem_id parameter didn't match the target code system id in the map named in
                           map_name.
                        </ul>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTScodeTranSpecTranConCode"></a>9.5 </span><span class="title">Map a Concept Code</span></div>
                     <div class="body">
                        <table width="90%">
                           <tr>
                              <td class="codefragment"><pre></pre></td>
                           </tr>
                        </table>
                        <ul style="margin-left:20px;">
                           <li>mappedConcept_id- a code system identifier and concept code.
                              
                           </li>
                           <li>mapQuality_code- a code representing the &#8216;quality&#8217; of the mapping operation, such as exact, broader, narrower, etc.
                              
                           </li>
                        </ul>
                        <table width="90%">
                           <tr>
                              <td class="codefragment"><pre></pre></td>
                           </tr>
                        </table>
                        <p>mapConceptCode maps the supplied code system id and concept code to the corresponding code (if any) in the target system.
                           fromConcept_id must be supplied. Either toCodeSystem_id, map_name or both may be specified. If only map_name is supplied,
                           toCodeSystem_id is determined by the name.  If both parameters are supplied, they must be in agreement.
                        </p>
                        <p>Parameters:</p>
                        <ul style="margin-left:20px;">
                           <li>fromConcept_id   - code system id and concept code to be mapped
                              
                           </li>
                           <li>toCodeSystem_id  - code system id of the mapping target
                              
                           </li>
                           <li>map_name - name of the map to use</li>
                        </ul>
                        <p>Exceptions:</p>
                        <ul style="margin-left:20px;">
                           <li>UnknownCodeSystem</li>
                           <li>UnknownConceptCode</li>
                           <li>MappingNotAvailable</li>
                           <li>UnknownMapName</li>
                           <li>AmbiguousMapRequest</li>
                           <li>MapNameSourceMismatch</li>
                           <li>MapNameTargetMismatch</li>
                           <li>UnableToMap</li>
                           <li>UnexpectedError</li>
                        </ul>
                     </div>
                  </div>
               </div>
            </div>
            <div class="subSection">
               <!--divN/head-->
               <div class="header"><span class="icon"><img src="../../support/graphics/Reference.gif" alt="Reference" /></span><span class="number"><a name="CTSLangBind"></a>10 </span><span class="title">CTS Programming Language Bindings (Informative)</span></div>
               <div class="body">
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSLangBindIDLJava"></a>10.1 </span><span class="title">Translating from IDL into Java</span></div>
                     <div class="body">
                        <p>
                           The interface signatures for CTS have been specified using the interface definition language as specified in <em>ISO/IEC 14750:1999 -- Open Distributed Processing -- Interface Definition Language (IDL)</em>. The Object Management Group (OMG) has specified mappings between IDL and many common programming languages, including ADA,
                           C, C++, COBOL, Java, Lisp, PL/1, Python, and Smalltalk. Bindings also exist between IDL and the Microsoft Common Object Model
                           (COM).
                        </p>
                        <p>
                           Unfortunately, these language mappings are not completely independent of the underlying CORBA architecture.  As an example,
                           in the Java language mapping:
                        </p>
                        <ul style="margin-left:20px;">
                           <li>Exception classes extend org.omg.CORBA.UserException and invoke it as a superclass with [class]Helper.id() as an argument.
                              
                           </li>
                           <li>Struct classes implement org.omg.CORBA.portable.IDLEntity
                              
                           </li>
                           <li>Interface classes are named [class]Operations.java
                              
                           </li>
                           <li>Many additional support files are created ( [class]Holder.java, [class]Helper.java., _[class]Stub.java, [class]POA.java, [class]POATie.java</li>
                        </ul>
                        <p>It isn&#8217;t a difficult task, however, to remove these CORBA remnants, yielding an implementation-neutral interface specification.
                           
                        </p>
                        <p>The steps used to get from IDL to the target languages of SOAP and Java are:</p>
                        <ol>
                           <li>Transform the IDL into Java:<br />
                              java com.sun.tools.corba.se.idl.toJavaPortable.Compile -fallTIE -pkgPrefix types org.hl7 -pkgPrefix CTSMAPI org.hl7 -pkgPrefix
                              CTSVAPI org.hl7  CTSVAPI.idl
                           </li>
                           <li>Remove the baseline interface files - those with corresponding &#8216;xxxOperations.java&#8217;.  As an example, the file &#8216;Browser.java&#8217;
                              is removed because there is a corresponding &#8216;BrowserOperations.java&#8217;.
                           </li>
                           <li>Remove all of the output files that end in  &#8216;Holder.java&#8217;, &#8216;Helper.java&#8217;, &#8216;Stub.java&#8217;,  &#8216;POA.java&#8217; and &#8216;POATie.java&#8217;
                              
                           </li>
                           <li>Replace "extends org.omg.CORBA.UserException" with "extends java.lang.Exception" and remove all super invocations from the
                              exception class constructors.
                           </li>
                           <li>Change the comments from /* to /** so that they are included in the Java doc.<br />
                              The references to org.omg.CORBA.portable.IDLEntity are not removed, as they reference an empty class that may still be useful
                              to distinguish different types.
                           </li>
                        </ol>
                        <p>
                           The Figures below show samples of these transformations:
                        </p>
                        <table width="90%">
                           <caption>Example 1. Structure Declaration in IDL</caption>
                           <tr>
                              <td class="example"><pre><pre>
/* CTS Specification Version Identifier */
        struct CTSVersionId {
                short   major;
                short   minor;
        };
</pre></pre></td>
                           </tr>
                        </table>
                        <table width="90%">
                           <caption>Example 2. Structure Declaration in Java</caption>
                           <tr>
                              <td class="example"><pre><pre>
package org.hl7.CTSVAPI;


/**
* org/hl7/CTSVAPI/CTSVersionId.java .
* Generated by the IDL-to-Java compiler (portable), version "3.1"
* from idl/CTSVAPI.idl
* Monday, March 8, 2004 11:17:26 PM CST
*/


/**
 *$lt;PRE&gt;CTS Specification Version Identifier &lt;/PRE&gt;
 */
public final class CTSVersionId implements org.omg.CORBA.portable.IDLEntity
{
  public short major = (short)0;
  public short minor = (short)0;

  public CTSVersionId ()
  {
  } // ctor

  public CTSVersionId (short _major, short _minor)
  {
    major = _major;
    minor = _minor;
  } // ctor

} // class CTSVersionId

</pre></pre></td>
                           </tr>
                        </table>
                        <table width="90%">
                           <caption>Example 3. Exception Declaration in IDL</caption>
                           <tr>
                              <td class="example"><pre><pre>

/*
 * A property code was used that wasn't valid for the code system
 */
        exception UnknownPropertyCode {
                PropertyCode            property_code;
        };
</pre></pre></td>
                           </tr>
                        </table>
                        <table width="90%">
                           <caption>Example 4. Exception Declaration in Java</caption>
                           <tr>
                              <td class="example"><pre><pre>
package org.hl7.CTSVAPI;


/**
* org/hl7/CTSVAPI/UnknownPropertyCode.java .
* Generated by the IDL-to-Java compiler (portable), version "3.1"
* from idl/CTSVAPI.idl
* Monday, March 8, 2004 11:17:26 PM CST
*/

public final class UnknownPropertyCode extends java.lang.Exception
{
  public String property_code = null;

  public UnknownPropertyCode ()
  {
    // super(UnknownPropertyCodeHelper.id());
  } // ctor

  public UnknownPropertyCode (String _property_code)
  {
    // super(UnknownPropertyCodeHelper.id());
    property_code = _property_code;
  } // ctor


  public UnknownPropertyCode (String $reason, String _property_code)
  {
    // super(UnknownPropertyCodeHelper.id() + "  " + $reason);
    property_code = _property_code;
  } // ctor

} // class UnknownPropertyCode
</pre></pre></td>
                           </tr>
                        </table>
                        <table width="90%">
                           <caption>Example 5. Interface Declaration in IDL</caption>
                           <tr>
                              <td class="example"><pre><pre>
/*************************************************
 *      Code mapping interface                   *
 *                                               *
 * The code mapping interface represents one     *
 * or more mappings between code systems         *
 *************************************************/
        interface CodeMapping : Identification {

/* List of mappings supported by the service */
                CodeMapList getSupportedMaps() raises (UnexpectedError);


/* Map a concept code from one code system into the closest equivalent (if any)
 * in the target code system
 *      fromConcept_id                   - The code system / concept code to map
 *      toCodeSystem_id                  - The target code system
 *	map_name			 - Name of the map to use.  Can be omitted if there is only one possible map
 *					   from the fromConcept_id code system to the toCodeSystem_id.
 *
 *      Returns                         - Mapped concept in target system
 *
 *      Exceptions
 *              UnknownCodeSystem       - Either the from or the to code system isn't supported
 *                                        by this map service
 *              UnknownConceptCode      - The concept code to be mapped isn't part of the code system
 *              MappingNotAvailable     - There is not a map from the supplied concept code to the
 *                                        target code system.
 *
 *		UnableToMap      	- The requested concept code could not be mapped
 *		UnknownMapName		- mapping_name is not understood by the service
 *		MapSourceMismatch	- source code system id in map didn't match fromConcept_id code system
 *		MapTargetMismatch	- target code system id in map didn't match targetCodeSystem_id in call
 *		AmbiguousMapRequest	- There is more than one possible map between the source concept and target
 *		UnexpectedError		- An unspecified error occurred that prevented successful completion
 *					  of the request
 */
                MappedConceptCode mapConceptCode(
                        in ConceptId                    fromConcept_id,
                        in CodeSystemId                 toCodeSystem_id,
                        in string			map_name
                        )
                        raises ( UnknownCodeSystem,
                                 UnknownConceptCode,
                                 MappingNotAvailable,
                                 UnknownMapName,
                                 AmbiguousMapRequest,
                                 MapNameSourceMismatch,
                                 MapNameTargetMismatch,
                                 UnableToMap,
                                 UnexpectedError);
        };
</pre></pre></td>
                           </tr>
                        </table>
                        <table width="90%">
                           <caption>Example 6. Interface Declaration in Java</caption>
                           <tr>
                              <td class="example"><pre><pre>
package org.hl7.CTSVAPI;


/**
* org/hl7/CTSVAPI/CodeMappingOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.1"
* from idl/CTSVAPI.idl
* Monday, March 8, 2004 11:17:27 PM CST
*/


/*************************************************
 *      Code mapping interface                   *
 *                                               *
 * The code mapping interface represents one     *
 * or more mappings between code systems         *
 *************************************************/
public interface CodeMappingOperations  extends org.hl7.CTSVAPI.IdentificationOperations
{

  /**
 *&lt;PRE&gt;List of mappings supported by the service &lt;/PRE&gt;
 */
  org.hl7.CTSVAPI.CodeMap[] getSupportedMaps () throws org.hl7.CTSVAPI.UnexpectedError;

  /**
 *&lt;PRE&gt;Map a concept code from one code system into the closest equivalent (if any)
   * in the target code system
   *      fromConcept_id                   - The code system / concept code to map
   *      toCodeSystem_id                  - The target code system
   *	map_name			 - Name of the map to use.  Can be omitted if there is only one possible map
   *					   from the fromConcept_id code system to the toCodeSystem_id.
   *
   *      Returns                         - Mapped concept in target system
   *
   *      Exceptions
   *              UnknownCodeSystem       - Either the from or the to code system isn't supported
   *                                        by this map service
   *              UnknownConceptCode      - The concept code to be mapped isn't part of the code system
   *              MappingNotAvailable     - There is not a map from the supplied concept code to the
   *                                        target code system.
   *
   *		UnableToMap      	- The requested concept code could not be mapped
   *		UnknownMapName		- mapping_name is not understood by the service
   *		MapSourceMismatch	- source code system id in map didn't match fromConcept_id code system
   *		MapTargetMismatch	- target code system id in map didn't match targetCodeSystem_id in call
   *		AmbiguousMapRequest	- There is more than one possible map between the source concept and target
   *		UnexpectedError		- An unspecified error occurred that prevented successful completion
   *					  of the request
   &lt;/PRE&gt;
 */
  org.hl7.CTSVAPI.MappedConceptCode mapConceptCode (org.hl7.CTSVAPI.ConceptId fromConcept_id, String toCodeSystem_id, String map_name)
  		throws org.hl7.CTSVAPI.UnknownCodeSystem, org.hl7.CTSVAPI.UnknownConceptCode, org.hl7.CTSVAPI.MappingNotAvailable,
  		       org.hl7.CTSVAPI.UnknownMapName, org.hl7.CTSVAPI.AmbiguousMapRequest, org.hl7.CTSVAPI.MapNameSourceMismatch,
  		       org.hl7.CTSVAPI.MapNameTargetMismatch, org.hl7.CTSVAPI.UnableToMap, org.hl7.CTSVAPI.UnexpectedError;
} // interface CodeMappingOperations

</pre></pre></td>
                           </tr>
                        </table>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSLangBindIDLWSDL"></a>10.2 </span><span class="title">Translating from IDL to WSDL</span></div>
                     <div class="body">
                        <p>
                           The Apache Axis 1.1 java2wsdl compiler is used to transform the Java into WSDL.  An example invocation method for CTSVAPI
                           would be:
                        </p>
                        <table width="90%">
                           <caption>Example 7. </caption>
                           <tr>
                              <td class="example"><pre>
java org.apache.axis.wsdl.Java2WSDL -n urn://HL7.org/CTSVAPI -i org.hl7.refImpl.CTSVAPI -lhttp://localhost:8080/axis/services/CTSVAPIService org.hl7.CTSVAPI
</pre></td>
                           </tr>
                        </table>
                        <table width="90%">
                           <caption>Example 8. Interface Declaration in WSDL</caption>
                           <tr>
                              <td class="example"><pre><pre>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsdl:definitions targetNamespace="urn://hl7.org/CTSVAPI" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:apachesoap="http://xml.apache.org/xml-soap"
                     xmlns:impl="urn://hl7.org/CTSVAPI" xmlns:intf="urn://hl7.org/CTSVAPI" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/
                     xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/"
                     xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;
	&lt;wsdl:types&gt;
		&lt;schema targetNamespace="urn://hl7.org/CTSVAPI" xmlns="http://www.w3.org/2001/XMLSchema"&gt;
			&lt;import namespace="http://schemas.xmlsoap.org/soap/encoding/"/&gt;
			&lt;complexType name="SupportedMap"&gt;
				&lt;sequence&gt;
					&lt;element name="map_name" nillable="true" type="xsd:string"/&gt;
					&lt;element name="mapDescription" nillable="true" type="xsd:string"/&gt;
					&lt;element name="fromCodeSystem_id" nillable="true" type="xsd:string"/&gt;
					&lt;element name="fromCodeSystem_name" nillable="true" type="xsd:string"/&gt;
					&lt;element name="fromCodeSystem_version" nillable="true" type="xsd:string"/&gt;
					&lt;element name="toCodeSystem_id" nillable="true" type="xsd:string"/&gt;
					&lt;element name="toCodeSystem_name" nillable="true" type="xsd:string"/&gt;
					&lt;element name="toCodeSystem_version" nillable="true" type="xsd:string"/&gt;
				&lt;/sequence&gt;
			&lt;/complexType&gt;
			&lt;complexType name="ArrayOfSupportedMap"&gt;
				&lt;complexContent&gt;
					&lt;restriction base="soapenc:Array"&gt;
						&lt;attribute ref="soapenc:arrayType" wsdl:arrayType="impl:SupportedMap[]"/&gt;
					&lt;/restriction&gt;
				&lt;/complexContent&gt;
			&lt;/complexType&gt;
			&lt;complexType name="UnexpectedError"&gt;
				&lt;sequence&gt;
					&lt;element name="possible_cause" nillable="true" type="xsd:string"/&gt;
				&lt;/sequence&gt;
			&lt;/complexType&gt;
			&lt;complexType name="ConceptId"&gt;
				&lt;sequence&gt;
					&lt;element name="codeSystem_id" nillable="true" type="xsd:string"/&gt;
					&lt;element name="concept_code" nillable="true" type="xsd:string"/&gt;
				&lt;/sequence&gt;
			&lt;/complexType&gt;
			&lt;complexType name="MappedConceptCode"&gt;
				&lt;sequence&gt;
					&lt;element name="mappedConcept_id" nillable="true" type="impl:ConceptId"/&gt;
					&lt;element name="mapQuality_code" nillable="true" type="xsd:string"/&gt;
				&lt;/sequence&gt;
			&lt;/complexType&gt;
			&lt;complexType name="MappingNotAvailable"&gt;
				&lt;sequence&gt;
					&lt;element name="fromCodeSystem_id" nillable="true" type="xsd:string"/&gt;
					&lt;element name="toCodeSystem_id" nillable="true" type="xsd:string"/&gt;
				&lt;/sequence&gt;
			&lt;/complexType&gt;
			&lt;complexType name="UnableToMap"&gt;
				&lt;sequence/&gt;
			&lt;/complexType&gt;
			&lt;complexType name="UnknownConceptCode"&gt;
				&lt;sequence&gt;
					&lt;element name="concept_code" nillable="true" type="xsd:string"/&gt;
				&lt;/sequence&gt;
			&lt;/complexType&gt;
			&lt;complexType name="UnknownCodeSystem"&gt;
				&lt;sequence&gt;
					&lt;element name="codeSystem_id" nillable="true" type="xsd:string"/&gt;
				&lt;/sequence&gt;
			&lt;/complexType&gt;
			&lt;complexType name="UnknownMapName"&gt;
				&lt;sequence&gt;
					&lt;element name="map_name" nillable="true" type="xsd:string"/&gt;
				&lt;/sequence&gt;
			&lt;/complexType&gt;
			&lt;complexType name="AmbiguousMapRequest"&gt;
				&lt;sequence&gt;
					&lt;element maxOccurs="unbounded" name="possible_maps" nillable="true" type="xsd:string"/&gt;
				&lt;/sequence&gt;
			&lt;/complexType&gt;
			&lt;complexType name="CTSVersionId"&gt;
				&lt;sequence&gt;
					&lt;element name="major" type="xsd:short"/&gt;
					&lt;element name="minor" type="xsd:short"/&gt;
				&lt;/sequence&gt;
			&lt;/complexType&gt;
		&lt;/schema&gt;
	&lt;/wsdl:types&gt;
	&lt;wsdl:message name="UnknownMapName"&gt;
		&lt;wsdl:part name="fault" type="impl:UnknownMapName"/&gt;
	&lt;/wsdl:message&gt;
	&lt;wsdl:message name="AmbiguousMapRequest"&gt;
		&lt;wsdl:part name="fault" type="impl:AmbiguousMapRequest"/&gt;
	&lt;/wsdl:message&gt;
	&lt;wsdl:message name="getServiceDescriptionResponse"&gt;
		&lt;wsdl:part name="getServiceDescriptionReturn" type="xsd:string"/&gt;
	&lt;/wsdl:message&gt;
	&lt;wsdl:message name="MappingNotAvailable"&gt;
		&lt;wsdl:part name="fault" type="impl:MappingNotAvailable"/&gt;
	&lt;/wsdl:message&gt;
	&lt;wsdl:message name="getServiceVersionRequest"&gt;

   &lt;/wsdl:message&gt;
	&lt;wsdl:message name="getSupportedMapsResponse"&gt;
		&lt;wsdl:part name="getSupportedMapsReturn" type="impl:ArrayOfSupportedMap"/&gt;
	&lt;/wsdl:message&gt;
	&lt;wsdl:message name="UnknownConceptCode"&gt;
		&lt;wsdl:part name="fault" type="impl:UnknownConceptCode"/&gt;
	&lt;/wsdl:message&gt;
	&lt;wsdl:message name="UnexpectedError"&gt;
		&lt;wsdl:part name="fault" type="impl:UnexpectedError"/&gt;
	&lt;/wsdl:message&gt;
	&lt;wsdl:message name="UnknownCodeSystem"&gt;
		&lt;wsdl:part name="fault" type="impl:UnknownCodeSystem"/&gt;
	&lt;/wsdl:message&gt;
	&lt;wsdl:message name="UnableToMap"&gt;
		&lt;wsdl:part name="fault" type="impl:UnableToMap"/&gt;
	&lt;/wsdl:message&gt;
	&lt;wsdl:message name="getCTSVersionRequest"&gt;

   &lt;/wsdl:message&gt;
	&lt;wsdl:message name="getServiceNameResponse"&gt;
		&lt;wsdl:part name="getServiceNameReturn" type="xsd:string"/&gt;
	&lt;/wsdl:message&gt;
	&lt;wsdl:message name="getServiceNameRequest"&gt;

   &lt;/wsdl:message&gt;
	&lt;wsdl:message name="getServiceDescriptionRequest"&gt;

   &lt;/wsdl:message&gt;
	&lt;wsdl:message name="mapConceptCodeRequest"&gt;
		&lt;wsdl:part name="fromConcept_id" type="impl:ConceptId"/&gt;
		&lt;wsdl:part name="toCodeSystem_id" type="xsd:string"/&gt;
		&lt;wsdl:part name="map_name" type="xsd:string"/&gt;
	&lt;/wsdl:message&gt;
	&lt;wsdl:message name="mapConceptCodeResponse"&gt;
		&lt;wsdl:part name="mapConceptCodeReturn" type="impl:MappedConceptCode"/&gt;
	&lt;/wsdl:message&gt;
	&lt;wsdl:message name="getSupportedMapsRequest"&gt;

   &lt;/wsdl:message&gt;
	&lt;wsdl:message name="getCTSVersionResponse"&gt;
		&lt;wsdl:part name="getCTSVersionReturn" type="impl:CTSVersionId"/&gt;
	&lt;/wsdl:message&gt;
	&lt;wsdl:message name="getServiceVersionResponse"&gt;
		&lt;wsdl:part name="getServiceVersionReturn" type="xsd:string"/&gt;
	&lt;/wsdl:message&gt;
	&lt;wsdl:portType name="CodeMappingOperations"&gt;
		&lt;wsdl:operation name="getSupportedMaps"&gt;
			&lt;wsdl:input message="impl:getSupportedMapsRequest" name="getSupportedMapsRequest"/&gt;
			&lt;wsdl:output message="impl:getSupportedMapsResponse" name="getSupportedMapsResponse"/&gt;
			&lt;wsdl:fault message="impl:UnexpectedError" name="UnexpectedError"/&gt;
		&lt;/wsdl:operation&gt;
		&lt;wsdl:operation name="mapConceptCode" parameterOrder="fromConcept_id toCodeSystem_id map_name"&gt;
			&lt;wsdl:input message="impl:mapConceptCodeRequest" name="mapConceptCodeRequest"/&gt;
			&lt;wsdl:output message="impl:mapConceptCodeResponse" name="mapConceptCodeResponse"/&gt;
			&lt;wsdl:fault message="impl:AmbiguousMapRequest" name="AmbiguousMapRequest"/&gt;
			&lt;wsdl:fault message="impl:UnexpectedError" name="UnexpectedError"/&gt;
			&lt;wsdl:fault message="impl:UnableToMap" name="UnableToMap"/&gt;
			&lt;wsdl:fault message="impl:MappingNotAvailable" name="MappingNotAvailable"/&gt;
			&lt;wsdl:fault message="impl:UnknownMapName" name="UnknownMapName"/&gt;
			&lt;wsdl:fault message="impl:UnknownConceptCode" name="UnknownConceptCode"/&gt;
			&lt;wsdl:fault message="impl:UnknownCodeSystem" name="UnknownCodeSystem"/&gt;
		&lt;/wsdl:operation&gt;
		&lt;wsdl:operation name="getCTSVersion"&gt;
			&lt;wsdl:input message="impl:getCTSVersionRequest" name="getCTSVersionRequest"/&gt;
			&lt;wsdl:output message="impl:getCTSVersionResponse" name="getCTSVersionResponse"/&gt;
			&lt;wsdl:fault message="impl:UnexpectedError" name="UnexpectedError"/&gt;
		&lt;/wsdl:operation&gt;
		&lt;wsdl:operation name="getServiceDescription"&gt;
			&lt;wsdl:input message="impl:getServiceDescriptionRequest" name="getServiceDescriptionRequest"/&gt;
			&lt;wsdl:output message="impl:getServiceDescriptionResponse" name="getServiceDescriptionResponse"/&gt;
			&lt;wsdl:fault message="impl:UnexpectedError" name="UnexpectedError"/&gt;
		&lt;/wsdl:operation&gt;
		&lt;wsdl:operation name="getServiceName"&gt;
			&lt;wsdl:input message="impl:getServiceNameRequest" name="getServiceNameRequest"/&gt;
			&lt;wsdl:output message="impl:getServiceNameResponse" name="getServiceNameResponse"/&gt;
			&lt;wsdl:fault message="impl:UnexpectedError" name="UnexpectedError"/&gt;
		&lt;/wsdl:operation&gt;
		&lt;wsdl:operation name="getServiceVersion"&gt;
			&lt;wsdl:input message="impl:getServiceVersionRequest" name="getServiceVersionRequest"/&gt;
			&lt;wsdl:output message="impl:getServiceVersionResponse" name="getServiceVersionResponse"/&gt;
			&lt;wsdl:fault message="impl:UnexpectedError" name="UnexpectedError"/&gt;
		&lt;/wsdl:operation&gt;
	&lt;/wsdl:portType&gt;
	&lt;wsdl:binding name="CodeMappingServiceSoapBinding" type="impl:CodeMappingOperations"&gt;
		&lt;wsdlsoap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/&gt;
		&lt;wsdl:operation name="getSupportedMaps"&gt;
			&lt;wsdlsoap:operation soapAction=""/&gt;
			&lt;wsdl:input name="getSupportedMapsRequest"&gt;
				&lt;wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn://hl7.org/CTSVAPI" use="encoded"/&gt;
			&lt;/wsdl:input&gt;
			&lt;wsdl:output name="getSupportedMapsResponse"&gt;
				&lt;wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn://hl7.org/CTSVAPI" use="encoded"/&gt;
			&lt;/wsdl:output&gt;
			&lt;wsdl:fault name="UnexpectedError"&gt;
				&lt;wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn://hl7.org/CTSVAPI" use="encoded"/&gt;
			&lt;/wsdl:fault&gt;
		&lt;/wsdl:operation&gt;
		&lt;wsdl:operation name="mapConceptCode"&gt;
			&lt;wsdlsoap:operation soapAction=""/&gt;
			&lt;wsdl:input name="mapConceptCodeRequest"&gt;
				&lt;wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn://hl7.org/CTSVAPI" use="encoded"/&gt;
			&lt;/wsdl:input&gt;
			&lt;wsdl:output name="mapConceptCodeResponse"&gt;
				&lt;wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn://hl7.org/CTSVAPI" use="encoded"/&gt;
			&lt;/wsdl:output&gt;
			&lt;wsdl:fault name="AmbiguousMapRequest"&gt;
				&lt;wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn://hl7.org/CTSVAPI" use="encoded"/&gt;
			&lt;/wsdl:fault&gt;
			&lt;wsdl:fault name="UnexpectedError"&gt;
				&lt;wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn://hl7.org/CTSVAPI" use="encoded"/&gt;
			&lt;/wsdl:fault&gt;
			&lt;wsdl:fault name="MapNameSourceMismatch"&gt;
				&lt;wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn://hl7.org/CTSVAPI" use="encoded"/&gt;
			&lt;/wsdl:fault&gt;
			&lt;wsdl:fault name="MapNameTargetMismatch"&gt;
				&lt;wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn://hl7.org/CTSVAPI" use="encoded"/&gt;
			&lt;/wsdl:fault&gt;
			&lt;wsdl:fault name="UnableToMap"&gt;
				&lt;wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn://hl7.org/CTSVAPI" use="encoded"/&gt;
			&lt;/wsdl:fault&gt;
			&lt;wsdl:fault name="MappingNotAvailable"&gt;
				&lt;wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn://hl7.org/CTSVAPI" use="encoded"/&gt;
			&lt;/wsdl:fault&gt;
			&lt;wsdl:fault name="UnknownMapName"&gt;
				&lt;wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn://hl7.org/CTSVAPI" use="encoded"/&gt;
			&lt;/wsdl:fault&gt;
			&lt;wsdl:fault name="UnknownConceptCode"&gt;
				&lt;wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn://hl7.org/CTSVAPI" use="encoded"/&gt;
			&lt;/wsdl:fault&gt;
			&lt;wsdl:fault name="UnknownCodeSystem"&gt;
				&lt;wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn://hl7.org/CTSVAPI" use="encoded"/&gt;
			&lt;/wsdl:fault&gt;
		&lt;/wsdl:operation&gt;
		&lt;wsdl:operation name="getCTSVersion"&gt;
			&lt;wsdlsoap:operation soapAction=""/&gt;
			&lt;wsdl:input name="getCTSVersionRequest"&gt;
				&lt;wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn://hl7.org/CTSVAPI" use="encoded"/&gt;
			&lt;/wsdl:input&gt;
			&lt;wsdl:output name="getCTSVersionResponse"&gt;
				&lt;wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn://hl7.org/CTSVAPI" use="encoded"/&gt;
			&lt;/wsdl:output&gt;
			&lt;wsdl:fault name="UnexpectedError"&gt;
				&lt;wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn://hl7.org/CTSVAPI" use="encoded"/&gt;
			&lt;/wsdl:fault&gt;
		&lt;/wsdl:operation&gt;
		&lt;wsdl:operation name="getServiceDescription"&gt;
			&lt;wsdlsoap:operation soapAction=""/&gt;
			&lt;wsdl:input name="getServiceDescriptionRequest"&gt;
				&lt;wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn://hl7.org/CTSVAPI" use="encoded"/&gt;
			&lt;/wsdl:input&gt;
			&lt;wsdl:output name="getServiceDescriptionResponse"&gt;
				&lt;wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn://hl7.org/CTSVAPI" use="encoded"/&gt;
			&lt;/wsdl:output&gt;
			&lt;wsdl:fault name="UnexpectedError"&gt;
				&lt;wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn://hl7.org/CTSVAPI" use="encoded"/&gt;
			&lt;/wsdl:fault&gt;
		&lt;/wsdl:operation&gt;
		&lt;wsdl:operation name="getServiceName"&gt;
			&lt;wsdlsoap:operation soapAction=""/&gt;
			&lt;wsdl:input name="getServiceNameRequest"&gt;
				&lt;wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn://hl7.org/CTSVAPI" use="encoded"/&gt;
			&lt;/wsdl:input&gt;
			&lt;wsdl:output name="getServiceNameResponse"&gt;
				&lt;wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn://hl7.org/CTSVAPI" use="encoded"/&gt;
			&lt;/wsdl:output&gt;
			&lt;wsdl:fault name="UnexpectedError"&gt;
				&lt;wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn://hl7.org/CTSVAPI" use="encoded"/&gt;
			&lt;/wsdl:fault&gt;
		&lt;/wsdl:operation&gt;
		&lt;wsdl:operation name="getServiceVersion"&gt;
			&lt;wsdlsoap:operation soapAction=""/&gt;
			&lt;wsdl:input name="getServiceVersionRequest"&gt;
				&lt;wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn://hl7.org/CTSVAPI" use="encoded"/&gt;
			&lt;/wsdl:input&gt;
			&lt;wsdl:output name="getServiceVersionResponse"&gt;
				&lt;wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn://hl7.org/CTSVAPI" use="encoded"/&gt;
			&lt;/wsdl:output&gt;
			&lt;wsdl:fault name="UnexpectedError"&gt;
				&lt;wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn://hl7.org/CTSVAPI" use="encoded"/&gt;
			&lt;/wsdl:fault&gt;
		&lt;/wsdl:operation&gt;
	&lt;/wsdl:binding&gt;
	&lt;wsdl:service name="CodeMappingOperationsService"&gt;
		&lt;wsdl:port binding="impl:CodeMappingServiceSoapBinding" name="CodeMappingService"&gt;
			&lt;wsdlsoap:address location="http://localhost:8080/axis/services/CodeMappingService"/&gt;
		&lt;/wsdl:port&gt;
	&lt;/wsdl:service&gt;
&lt;/wsdl:definitions&gt;

</pre></pre></td>
                           </tr>
                        </table>
                     </div>
                  </div>
               </div>
            </div>
            <hr title="Separator from footer" />
            <div class="subSection">
               <!--divN/head-->
               <div class="header"><span class="icon"><img src="../../support/graphics/Reference.gif" alt="Reference" /></span><span class="number"><a name="annexA"></a>A </span><span class="title">Annex A:   Summary of Service Requirements (Informative)</span></div>
               <div class="body">
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="AppendIntro"></a>A.1 </span><span class="title">Introduction</span></div>
                     <div class="body">
                        <p>
                           This section summarizes the broad scope of terminology services which draws on material and experience from the other relevant
                           work identified in section 2.
                        </p>
                        <p>The detailed proposals in this document address a limited subset of these services which are of most immediate relevance to
                           assist implementation of HL7 Version 3.
                        </p>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="ServerInfoServices"></a>A.2 </span><span class="title">Server information services</span></div>
                     <div class="body">
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="ServerInfoServicesIntro"></a>A.2.1 </span><span class="title">Introduction</span></div>
                           <div class="body">
                              <p>This section is concerned with services that provide information about the terminology server and the terminologies it supports.</p>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="ServerInfoservRetInfoCap"></a>A.2.2 </span><span class="title">Retrieve information about the capabilities and version of the server</span></div>
                           <div class="body">
                              <p>Use case: To enable a client application to interact appropriately with servers supporting different versions of a terminology
                                 server specification.
                              </p>
                              <p>
                                 All specifications are subject to evolution and particular implementations may provide additional features. Therefore, a version
                                 independent means of establishing the capabilities of a server is essential.
                              </p>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="ServerInfoservRetInfoTerm"></a>A.2.3 </span><span class="title">Retrieve information about terminologies accessible via the server</span></div>
                           <div class="body">
                              <p>Use case: To enable a client application to establish whether a server can be used to access a specified terminology. </p>
                              <p>A single instance of the server may provide access to one or more terminologies and a client application may have access to
                                 several alternative terminology servers. 
                              </p>
                              <p>This service could be provided either in the form of a test for a specific terminology (E.g. does server support terminology
                                 X) or a request for a list of supported terminologies.
                              </p>
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="TermMetaServ"></a>A.3 </span><span class="title">Terminology metadata services</span></div>
                     <div class="body">
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="TermMetaServIntro"></a>A.3.1 </span><span class="title">Introduction</span></div>
                           <div class="body">
                              <p>
                                 This section is concerned with services which access the  information about a terminology as supported by the server. 
                              </p>
                              <p>
                                 All use cases envisaged in this section require access to a single specified terminology each time a service is invoked. Each
                                 request for a service specifies one identified terminology that is available on the server. 
                              </p>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="TermMetaServRetInfo"></a>A.3.2 </span><span class="title">Retrieve information about a terminology accessible via the server</span></div>
                           <div class="body">
                              <p>
                                 Use case: To allow the client application to determine whether the server provides data that is sufficiently complete, up-to-date
                                 and authoritative.
                              </p>
                              <p>
                                 The client application must able to access various properties of the available terminologies (e.g. version numbers, release
                                 date, authorized source and whether it&#8217;s available in its entirety or is limited in some way).
                              </p>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="TermMetaServRetProps"></a>A.3.3 </span><span class="title">Retrieve details of properties of concepts or terms in this terminology</span></div>
                           <div class="body">
                              <p>
                                 Use case: To allow the client application to determine the properties available for each concept or term in the terminology
                                 in order to process or display them in an appropriate way.
                              </p>
                              <p>
                                 Some terminologies have more extensive sets of properties associated with each concept or term. A server may provide access
                                 to all these properties or to a limited set of properties. The client application needs to be aware of the properties of a
                                 terminology that are accessible via the server.
                              </p>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="TermMetaServRetRela"></a>A.3.4 </span><span class="title">Retrieve details of relationship types used in this terminology</span></div>
                           <div class="body">
                              <p>
                                 Use case: To allow the client application to determine the relationship types that are supported by this terminology so that
                                 it can make valid requests for relationship information.
                              </p>
                              <p>
                                 Some terminologies support a variety of types of relationships between term and/or concepts. For example:
                              </p>
                              <ul style="margin-left:20px;">
                                 <li>several terms may be synonyms representing the same concept. </li>
                                 <li>a concept may be related to other more general supertype concepts (e.g. "pneumonia" as a subtype of  "lung disease" and also
                                    a subtype of "infection")
                                 </li>
                                 <li>a concept may be defined in terms of several other concepts.
                                    
                                 </li>
                                 <li>a concept may be associated with other concepts which can be used to qualify it.</li>
                              </ul>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="TermMetaServRetSerCri"></a>A.3.5 </span><span class="title">Retrieve details of search criteria supported for this terminology</span></div>
                           <div class="body">
                              <p>
                                 Use case: To allow the client application to determine the permissible search criteria that are supported by the server in
                                 respect of a particular accessible terminology.
                              </p>
                              <p>
                                 There are a variety of potential search criteria that may be applied to locate a concept or term. Servers may vary in the
                                 types of criteria they can support and the criteria appropriate for searching particular accessible terminologies may also
                                 vary.
                              </p>
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="TermContServ"></a>A.4 </span><span class="title">Terminology content services</span></div>
                     <div class="body">
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="TermContServRetInfo"></a>A.4.1 </span><span class="title">Introduction</span></div>
                           <div class="body">
                              <p>
                                 This section is concerned with services which access the  information content of a terminology.
                              </p>
                              <p>
                                 Most use cases envisaged here require access to a single specified terminology each time a service is invoked. Each request
                                 for a service specifies one identified terminology that is available on the server.  An alternative approach would be to instantiate
                                 a session for a particular terminology in which all subsequent service  requests apply.
                              </p>
                              <p>
                                 Some use cases may arguably benefit from an option to apply the same service request across all or a selected set of terminologies
                                 supported by a server. For example, to search for all terms in all supported terminologies containing a specified phrase.
                                 However, this imposes a significant set of complications:
                              </p>
                              <ul style="margin-left:20px;">
                                 <li>The server would need to integrate results from various source terminologies</li>
                                 <li>The terminologies may not share a common structure and may not be searchable in the same ways.</li>
                                 <li>It requires each retrieved item to identify the terminology at </li>
                              </ul>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="TermContServRetProps"></a>A.4.2 </span><span class="title">Retrieve the properties of a concept or term</span></div>
                           <div class="body">
                              <p>
                                 A service is required which returns the accessible properties of a single concept or term. The required concept or term is
                                 selected using it&#8217;s a unique identifier. The result returned  is a set of properties of the selected item.  All the properties
                                 may be returned or a selected set of properties could be specified in the request.
                              </p>
                              <p>
                                 Use case: To enable a client application to display or validate the textual meaning of a concept or term represented by a
                                 unique identifier.
                              </p>
                              <p>
                                 If an identifier is stored or communicated without its associated textual description, this service is essential to enable
                                 the client to render the information in a human-readable form. If the text is stored or communicated with the identifier,
                                 this service provides a means of validation that the identifier (which is presumable subject to machine processing or retrieval)
                                 has the same meaning as the accompanying text.
                              </p>
                              <p>
                                 Use case: To enable the client application to display alternative textual translations of the meaning of the identified concept.
                                 
                              </p>
                              <p>
                                 Some terminologies allow multiple terms associated with one concept as synonyms or language/dialect translations. The server
                                 should provide the client application with access to these term variants and where they exist.
                              </p>
                              <p>
                                 Use case: To enable the client application to access additional properties related to a concept or term so that it can be
                                 processed and/or rendered appropriately.
                              </p>
                              <p>
                                 Some terminologies recognize additional properties associated with each concept and/or term. For example a concept may have
                                 a property which indicates if it is intended for current use or retained to support legacy data. A term may have a properties
                                 indicate its language and whether it is a preferred term or a synonym. 
                              </p>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="TermContServRetCon"></a>A.4.3 </span><span class="title">Retrieve a set of concepts or terms matching specified text criteria</span></div>
                           <div class="body">
                              <div class="subSubSubSection">
                                 <div class="header"><span class="icon"> </span><span class="number"><a name="TermContServRetConGenUse"></a>A.4.3.1 </span><span class="title">General use case</span></div>
                                 <div class="body">
                                    <p>
                                       Use case: To allow a concept or term to be found by entering one or more words. Modes of entry for a search may include typing,
                                       speech recognition and parsing of selected text in an electronic document. The results should be a set of matches that may
                                       be used to populate a menu, list or other user interface control in a client application.
                                    </p>
                                    <p>
                                       The range of useful search criteria is likely to vary according to the size, structure and richness of the terminology. Criteria
                                       are identified below in relation to different use cases. 
                                    </p>
                                    <p>
                                       Performance is critical issue for this service as it may return many terms and concepts for real time display. Return of the
                                       complete concept or term with all its associated properties and relationships is unnecessary and may impact performance. By
                                       default this service should therefore return only the text of the matching term and the associated unique identifier. 
                                    </p>
                                 </div>
                              </div>
                              <div class="subSubSubSection">
                                 <div class="header"><span class="icon"> </span><span class="number"><a name="TermContServRetConTextRet"></a>A.4.3.2 </span><span class="title">Text criteria for retrievals</span></div>
                                 <div class="body">
                                    <p>
                                       Various types of text criteria may be valuable according to the size of the terminology (the larger the terminology the more
                                       extensive and selective the criteria need to be) and the mode of entry. The list below outlines the main types of text criteria
                                       that may be required: 
                                    </p>
                                    <p>Phrase matches</p>
                                    <ul style="margin-left:20px;">
                                       <li>Phrase match complete - complete verbatim match between phrase and term</li>
                                       <li>Phrase match start - a match between phrase and start of term</li>
                                       <li>Phrase match in term - a match between phrase and any part of the term</li>
                                    </ul>
                                    <p>Word matches</p>
                                    <ul style="margin-left:20px;">
                                       <li>Word match complete - the complete word appears somewhere in the term</li>
                                       <li>Word match start - the (part) word matches the start of a word in the term</li>
                                       <li>Pattern extended word (the pattern is tested only in the context of a word</li>
                                       <li>Word form matches (e.g. "tuberculosis" for "tuberculosis")</li>
                                    </ul>
                                    <p>Multiple words matches</p>
                                    <ul style="margin-left:20px;">
                                       <li>Apply one of the word match criteria for each word. Variations on multiple word matches</li>
                                       <li>Multiple word order independent match - All words typed appear somewhere in the term.</li>
                                       <li>Word order dependent - All words typed appear somewhere in the term.
                                          
                                       </li>
                                    </ul>
                                    <p>Pattern matches</p>
                                    <ul style="margin-left:20px;">
                                       <li>Phrase pattern matches - the term matches a regular expression.
                                          
                                       </li>
                                       <li>Word pattern matches - as for word matches but the word is represented by a regular expression.</li>
                                    </ul>
                                    <p>Modifications applicable to most types of text search</p>
                                    <ul style="margin-left:20px;">
                                       <li>Case dependent/independent searching</li>
                                       <li>Accent and special character handling in searches</li>
                                       <li>Defining word breaks for word searches</li>
                                       <li>Soundex matching</li>
                                       <li>Match words/phrases/abbreviations with similar meanings (e.g. "renal" for "kidney", "MI" for "myocardial infarction" or "mitral
                                          incompetence") 
                                       </li>
                                    </ul>
                                    <p>Text searches may need to be moderated by other criteria noted in the next section.</p>
                                 </div>
                              </div>
                              <div class="subSubSubSection">
                                 <div class="header"><span class="icon"> </span><span class="number"><a name="TermContServRetConModText"></a>A.4.3.3 </span><span class="title">Additional criteria modifying text retrieval</span></div>
                                 <div class="body">
                                    <p>To meet some use cases for text based retrieval additional criteria need to be applied. The following three types of additional
                                       criteria may be applicable to some or all terminologies supported by the server.
                                    </p>
                                    <p>Status criteria</p>
                                    <p>Use case: To allow a client application to retrieve only concepts or terms in current use.</p>
                                    <p>A terminology may contain concepts or terms that are no longer intended for current use but which are retained to support
                                       interpretation of legacy data.
                                       Vocabulary domain criteria 
                                    </p>
                                    <p>Use case: To allow a client application to limit a requested retrieval to concepts or terms in a specified vocabulary domain.
                                       For example, to limit the search to values that are permissible in a particular attribute of an HL7 message.
                                    </p>
                                    <p>A terminology may contain values applicable to different contexts and these may be permitted for use in different attributes
                                       of particular HL7 messages. 
                                    </p>
                                    <p>Support for these criteria requires the server to have access to the appropriate HL7 vocabulary domain tables.</p>
                                    <p>Relationship criteria</p>
                                    <p>Use case: To allow a client application to limit a requested retrieval to terms or concepts that have a particular relationship
                                       between another concept. For example, limit retrieval for the word "appendix" to concepts that have a  subtype relationship
                                       with "surgical procedure".
                                    </p>
                                    <p>A terminology may contain relationships which provide a useful mechanism for refining a search. Support for this type of search
                                       will only be available for some terminologies and the degree of sophistication of the criteria will vary according to the
                                       nature of the supported relationships.
                                    </p>
                                 </div>
                              </div>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="TermContServRetRel"></a>A.4.4 </span><span class="title">Retrieve a set of concepts or terms specified by relationships</span></div>
                           <div class="body">
                              <div class="subSubSubSection">
                                 <div class="header"><span class="icon"> </span><span class="number"><a name="TermContServRetRelAll"></a>A.4.4.1 </span><span class="title">Retrieve all relationships for an identified concept or term</span></div>
                                 <div class="body">
                                    <p>Use case: To allow the client application to display the relationships, make semantic deduction or offer choices of valid
                                       qualifiers that can be applied to a concept.
                                    </p>
                                    <p>This complete retrieval option may be efficient when many relationships need to be reviewed by the client application. However,
                                       the following pair of more selective relationship retrieval services may be more efficient for specific review and navigation.
                                    </p>
                                 </div>
                              </div>
                              <div class="subSubSubSection">
                                 <div class="header"><span class="icon"> </span><span class="number"><a name="TermContServRetRelId"></a>A.4.4.2 </span><span class="title">Retrieve the relationship types available for an identified concept or term</span></div>
                                 <div class="body">
                                    <p>Use case: To allow the client application to determine which relationships are available prior to selective retrieval of concepts
                                       with a specified relationship (see below)
                                    </p>
                                    <p>This offers no additional functionality compared with retrieving all relationships (see above). However, it may be more efficient
                                       for identifying relationship types to be processed in more individually (see below).
                                    </p>
                                    <p>Relationship types may include some that are specific to a terminology. However, some general types of relationship should
                                       be represented in a common way by this service if they are supported by the terminology:
                                    </p>
                                    <ul style="margin-left:20px;">
                                       <li>The subtype relationship </li>
                                       <li>The relationship between a concept and its synonymous terms. </li>
                                    </ul>
                                 </div>
                              </div>
                              <div class="subSubSubSection">
                                 <div class="header"><span class="icon"> </span><span class="number"><a name="TermContServRetSpecRel"></a>A.4.4.3 </span><span class="title">Retrieve concepts/terms with a specified relationship type to a concept/term</span></div>
                                 <div class="body">
                                    <p>Use case: To allow the client application to offer the user options to navigate across specified semantic links, for example,
                                       to refine a concept  or to generalize a concept.
                                    </p>
                                    <p>Use case: To allow the client application to display synonyms associated with a concept.</p>
                                    <p>Use case: To allow the client application to make semantic deductions <u>based on</u> subtype relationships, for example, to count instances of "pneumonia" as instances of "lung disease" and "infection".
                                    </p>
                                    <p>This offers no additional functionality compared with retrieving all relationships (see above). However, this selective service
                                       may be more efficient  for specific review and navigation.
                                    </p>
                                    <p>By default this service should return the unique identifier and term for each concept or term.</p>
                                 </div>
                              </div>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="TermContServAll"></a>A.4.5 </span><span class="title">Retrieve all concepts or terms in a particular vocabulary domain</span></div>
                           <div class="body">
                              <p>Use case: To allow the client application to access the complete set of values that may be applicable to a specified attribute
                                 in an HL7 message.
                              </p>
                              <p>
                                 This service is closely related to the text search with additional vocabulary domain criteria. However, in this case all concepts
                                 in the vocabulary domain are returned without any attempt at text matching.  
                              </p>
                              <p>
                                 By default this service should return the unique identifier and term for each concept or term.
                              </p>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="TermContServValUni"></a>A.4.6 </span><span class="title">Validate a unique identifier</span></div>
                           <div class="body">
                              <div class="subSubSubSection">
                                 <div class="header"><span class="icon"> </span><span class="number"><a name="TermContServValUniCheck"></a>A.4.6.1 </span><span class="title">Check that a unique identifier is valid in the terminology</span></div>
                                 <div class="body">
                                    <p>Use case: To allow a client application to validate the content of a message by ensuring that identifiers (or codes) in the
                                       message are valid in the referenced terminology.  
                                    </p>
                                    <p>This use case can also be met by attempting to retrieve the required concept or term. However, requesting retrieval created
                                       a processing and data overhead when compared with a simple test. Validation may be required for many messages each containing
                                       many identifiers so a light and efficient validation service is required.  
                                    </p>
                                 </div>
                              </div>
                              <div class="subSubSubSection">
                                 <div class="header"><span class="icon"> </span><span class="number"><a name="TermContServValAddCrit"></a>A.4.6.2 </span><span class="title">Additional criteria applicable to identifier validation</span></div>
                                 <div class="body">
                                    <p>Status criteria</p>
                                    <p>Use case: To allow a client application to test if an identifier in a message or record is in current use.</p>
                                    <p>A terminology may contain concepts or terms that are no longer intended for current use but which are retained to support
                                       interpretation of legacy data.
                                       Vocabulary domain criteria 
                                    </p>
                                    <p>Use case: To allow a client application to conform that an identifier in a message is a value within the appropriate vocabulary
                                       domain for that message. For example, to limit the search to values that are permissible in a particular attribute of an HL7
                                       message.
                                    </p>
                                    <p>A terminology may contain values applicable to different contexts and these may be permitted for use in different attributes
                                       of particular HL7 messages.
                                    </p>
                                    <p>Support for these criteria requires the server to have access to the appropriate HL7 vocabulary domain tables.</p>
                                    <p>Relationship criteria</p>
                                    <p>Use case: To allow a client application to test whether a concept should be counted as a subtype of another concept (e.g.
                                       a concept used in a decision support algorithm or as a criteria for analysis).
                                    </p>
                                    <p>A terminology may contain relationships which can be used to determine whether a concept is a subtype of another concept.</p>
                                 </div>
                              </div>
                           </div>
                        </div>
                        <div class="subSubSubSection">
                           <div class="header"><span class="icon"> </span><span class="number"><a name="MapAndTransCodesA"></a>A.4.7 </span><span class="title">Mapping and transformation of codes and code phrases</span></div>
                           <div class="body">
                              <div class="subSubSubSection">
                                 <div class="header"><span class="icon"> </span><span class="number"><a name="MapAndTransCodesA1"></a>A.4.7.1 </span><span class="title">Retrieve identifier with the same meaning in another terminology</span></div>
                                 <div class="body">
                                    <p>Use case: To allow a client application to translate an identifier used in its native environment into the terminology required
                                       in a message (and vice versa).
                                    </p>
                                    <p>
                                       In many cases this is a non-trivial task as maps may be one-to-many and may require other contextual information to select
                                       a specific value. However, for vocabulary domains with a relatively small number or possible values with know one-to-one (or
                                       many-to-one) maps lists this is a useful and service.
                                    </p>
                                 </div>
                              </div>
                              <div class="subSubSubSection">
                                 <div class="header"><span class="icon"> </span><span class="number"><a name="MapAndTransCodesA2"></a>A.4.7.2 </span><span class="title">Decompose a concept into a post-coordinated expression</span></div>
                                 <div class="body">
                                    <p>Use case: To allow a client application to break down a complex concept into constituent codes which represent different aspect
                                       of the meaning of that concept. For example, to represent  "appendectomy" as "surgical removal" applied to the "vermiform
                                       appendix".
                                    </p>
                                    <p>
                                       Some terminologies which include both complex and simple concepts provide relationships that support this transformation.
                                       This service may be useful for populating messages which represent different aspects on a complex concept in separated coded
                                       elements. The end result of this service is an expression (or code phrase) consisting of attribute value pairs (possibly nested).
                                       The client application then has to select which elements are represented in which message attributes. 
                                    </p>
                                    <p>
                                       This service may not be strictly necessary in this form. An alternative approach is to retrieve specific relationship types
                                       for each message attribute to be populated. 
                                    </p>
                                 </div>
                              </div>
                              <div class="subSubSubSection">
                                 <div class="header"><span class="icon"> </span><span class="number"><a name="MapAndTransCodesA3"></a>A.4.7.3 </span><span class="title">Compose a post-coordinated expression into a pre-coordinated concept</span></div>
                                 <div class="body">
                                    <p>Use case: To allow a client application to convert a collection of identifiers representing different parts of a more complex
                                       concept into a single concept identifier.
                                    </p>
                                    <p>
                                       This is the inverse of the decomposition service. It may not be possible to compose an expression into a single concept as
                                       there may be no single concept that represents the full meaning of the post-coordinated expression. Therefore the result of
                                       this may be the same post-coordinated expression or another post-coordinated expression with fewer sub-elements. For example,
                                       "surgical removal" or "vermiform appendix" as an "emergency" might be composed into "appendectomy" as and "emergency".
                                    </p>
                                 </div>
                              </div>
                           </div>
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="subSection">
               <!--divN/head-->
               <div class="header"><span class="icon"><img src="../../support/graphics/Reference.gif" alt="Reference" /></span><span class="number"><a name="CodeSysUsed"></a>B </span><span class="title">Annex B: Code Systems Used in the CTS API (Informative)</span></div>
               <div class="body">
                  <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                     <caption><a name="t40"> </a>
                        			Table
                        			30: 
                     </caption>
                     <thead>
                        <tr>
                           <th colspan="1">OID</th>
                           <th colspan="1">Code System Name</th>
                           <th colspan="1">Description</th>
                           <th colspan="1">Sample Values</th>
                        </tr>
                     </thead>
                     <tr>
                        <td colspan="1">
                           CodeSystem      
                        </td>
                        <td colspan="1">2.16.840.1.113883.5.22</td>
                        <td colspan="1">The set of code systems known to HL7</td>
                        <td colspan="1">CAS (Chemical abstract codes)<br />
                           IETF1766 (Language identifiers)<br />
                           CodeSystem (Code System)
                           
                        </td>
                     </tr>
                     <tr>
                        <td colspan="1">
                           ConceptStatus   
                        </td>
                        <td colspan="1">2.16.840.1.113883.5.1086</td>
                        <td colspan="1">The status of a domain entry as pertains to its review and incorporation into the HL7 domain specification database.</td>
                        <td colspan="1">A (Active)<br />
                           D (Deleted)<br />
                           P (Proposed)<br />
                           R (Retired)
                           
                        </td>
                     </tr>
                     <tr>
                        <td colspan="1">
                           VocabularyDomainQualifier
                        </td>
                        <td colspan="1">2.16.840.1.113883.5.147 </td>
                        <td colspan="1">The extensibility of coding determines whether or not exceptions are allowed in the domain of a coded attribute</td>
                        <td colspan="1">CWE ( coded with exceptions)<br />
                           CNE  (coded no exceptions)
                           
                        </td>
                     </tr>
                     <tr>
                        <td colspan="1">
                           Language
                        </td>
                        <td colspan="1">2.16.840.1.113883.6.99</td>
                        <td colspan="1">The human language that is used in textual descriptions or communications. From ISO 639.    </td>
                        <td colspan="1">EN (English)<br />
                           DE (German)<br />
                           EN-US (English - US dialect)<br />
                           EN-GB (English - GB dialect)
                           
                        </td>
                     </tr>
                     <tr>
                        <td colspan="1">
                           TranslationQuality
                        </td>
                        <td colspan="1">2.16.840.1.113883.5.1093</td>
                        <td colspan="1">The relationship between concepts between two code systems.</td>
                        <td colspan="1">Exact<br />
                           Broader Than<br />
                           Narrower Than<br />
                           Different
                           
                        </td>
                     </tr>
                     <tr>
                        <td colspan="1">
                           ConceptProperty
                        </td>
                        <td colspan="1">2.16.840.1.113883.5.1087</td>
                        <td colspan="1">Concept property identifiers</td>
                        <td colspan="1">openIssue<br />
                           appliesTo<br />
                           howApplies<br />
                           OID
                           
                        </td>
                     </tr>
                     <tr>
                        <td colspan="1">
                           ConceptCodeRelationship
                        </td>
                        <td colspan="1">2.16.840.1.113883.5.1088</td>
                        <td colspan="1">The relationship between two concepts in the same code system.</td>
                        <td colspan="1">hasSubtype<br />
                           hasPart<br />
                           smallerThan
                           
                        </td>
                     </tr>
                     <tr>
                        <td colspan="1">
                           MatchAlgorithm
                        </td>
                        <td colspan="1">2.16.840.1.113883.5.1094</td>
                        <td colspan="1">The match algorithm to use when searching text.</td>
                        <td colspan="1">Identical<br />
                           IdenticalIgnoreCase<br />
                           StartsWith<br />
                           StartsWithIgnoreCase<br />
                           EndsWith<br />
                           EndsWithIgnoreCase<br />
                           ContainsPhrase<br />
                           ContainsPhraseIgnoreCase<br />
                           WordsAnyOrder<br />
                           WordsAnyOrderIgnoreCase<br />
                           WildCards<br />
                           WildCardsIgnoreCase<br />
                           RegularExpression
                           
                        </td>
                     </tr>
                  </table>
                  <table width="90%" cellspacing="0" cellpadding="5" border="1" style="border-color:blue">
                     <caption align="BOTTOM"><a name="t50"> </a>
                        			Table
                        			31: VocabularyConceptRelationship Domain
                     </caption>
                     <thead>
                        <tr>
                           <th colspan="1">Concept Code</th>
                           <th colspan="1">Designation</th>
                           <th colspan="1">Description</th>
                           <th colspan="1">Transitive</th>
                           <th colspan="1">Inverse</th>
                        </tr>
                     </thead>
                     <tr>
                        <td colspan="1">hasSubtype</td>
                        <td colspan="1">has subtype</td>
                        <td colspan="1">A generic subsumption relationship.  This relationship includes both exhaustive and non-exhaustive subtypes as well as mutually
                           exclusive vs. overlapping.
                        </td>
                        <td colspan="1">True</td>
                        <td colspan="1">isSubtypeOf</td>
                     </tr>
                     <tr>
                        <td colspan="1">hasPart</td>
                        <td colspan="1">has part</td>
                        <td colspan="1">A generic partitive relationship with no further details specified.  </td>
                        <td colspan="1">True</td>
                        <td colspan="1">isPartOf</td>
                     </tr>
                     <tr>
                        <td colspan="1">smallerThan</td>
                        <td colspan="1">is smaller than</td>
                        <td colspan="1">A type of ordering relationship indicating quantitatively fewer entities</td>
                        <td colspan="1">True</td>
                        <td colspan="1">greaterThan</td>
                     </tr>
                  </table>
               </div>
            </div>
            <div class="subSection">
               <!--divN/head-->
               <div class="header"><span class="icon"><img src="../../support/graphics/Reference.gif" alt="Reference" /></span><span class="number"><a name="IDLRendering"></a>C </span><span class="title">Annex C: IDL Specification for the CTS API (Normative)</span></div>
               <div class="body">
                  <p> The following listings contain the complete IDL used to generate the CTS API </p>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="TypesIDL"></a>C.1 </span><span class="title">Basic HL7 Data Types</span></div>
                     <div class="body">
                        <ul style="margin-left:20px;">
                           <li><a href="idl/types.idl">types.idl</a> - IDL for Basic HL7 Data Types used by CTS
                           </li>
                        </ul>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSMAPIIdl"></a>C.2 </span><span class="title">IDL Definition of CTS Message API</span></div>
                     <div class="body">
                        <ul style="margin-left:20px;">
                           <li><a href="idl/CTSMAPI.idl">CTSMAPI.idl</a> - IDL Definition of CTS Message API
                           </li>
                        </ul>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="CTSVAPIIdl"></a>C.3 </span><span class="title">IDL Definition of CTS Vocabulary API</span></div>
                     <div class="body">
                        <ul style="margin-left:20px;">
                           <li><a href="idl/CTSVAPI.idl">CTSVAPI.idl</a> - IDL Definition of CTS Vocabulary and Code Mapping API
                           </li>
                        </ul>
                     </div>
                  </div>
               </div>
            </div>
            <div class="subSection">
               <!--divN/head-->
               <div class="header"><span class="icon"><img src="../../support/graphics/Reference.gif" alt="Reference" /></span><span class="number"><a name="XMLRendering"></a>D </span><span class="title">Annex D: XML Binding of the CTS API (Normative)</span></div>
               <div class="body">
                  <p>The following sections containn the WSDL binding of the 5 CTS API modules. Both the IDL description of the API and the WSDL
                     binding are normative descriptions of the CTS API
                  </p>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="MessageRuntimeWSDL"></a>D.1 </span><span class="title">WSDL Binding for the CTS Message Runtime API</span></div>
                     <div class="body">
                        <ul style="margin-left:20px;">
                           <li><a href="wsdl/MessageRuntime.wsdl">MessageRuntime.wsdl</a> - CTS Message Runtime Service
                           </li>
                        </ul>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="MessageBrowserWSDL"></a>D.2 </span><span class="title">WSDL Binding for the CTS Message Browser API</span></div>
                     <div class="body">
                        <ul style="margin-left:20px;">
                           <li><a href="wsdl/MessageBrowser.wsdl">MessageBrowser.wsdl</a> - CTS Message Browser Service
                           </li>
                        </ul>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="MessageBrowserWSDL"></a>D.3 </span><span class="title">WSDL Binding for the CTS Vocabulary Runtime API</span></div>
                     <div class="body">
                        <ul style="margin-left:20px;">
                           <li><a href="wsdl/VocabRuntime.wsdl">VocabRuntime.wsdl</a> - CTS Vocabulary Runtime Service
                           </li>
                        </ul>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="MessageBrowserWSDL"></a>D.4 </span><span class="title">WSDL Binding for the CTS Vocabulary Browser API</span></div>
                     <div class="body">
                        <ul style="margin-left:20px;">
                           <li><a href="wsdl/VocabBrowser.wsdl">VocabBrowser.wsdl</a> - CTS Vocabulary Browser Service
                           </li>
                        </ul>
                     </div>
                  </div>
                  <div class="subSubSection">
                     <div class="header"><span class="icon"> </span><span class="number"><a name="MessageBrowserWSDL"></a>D.5 </span><span class="title">WSDL Binding for the CTS Code Mapping API</span></div>
                     <div class="body">
                        <ul style="margin-left:20px;">
                           <li><a href="wsdl/CodeMapping.wsdl">CodeMapping.wsdl</a> - CTS Code Mapping Service
                           </li>
                        </ul>
                     </div>
                  </div>
               </div>
            </div>
            <h2>Endnotes</h2>
            <ol>
               <li><a name="fn1"></a>
                  							[<a href="#fn-src1">source</a>]
                  							While it is intended to be generic, it represents a distinct subset of the sort of capabilities that a generalized vocabulary
                  API should provide.  In addition, much of the nomenclature used in the CTS Vocabulary API is HL7-centric and would have to
                  under go translation were it to be put into more generalized use.
               </li>
               <li><a name="fn2"></a>
                  							[<a href="#fn-src2">source</a>]
                  							When used in this context, the word "terminology" is intended to describe any organized set of codes, including the entities
                  commonly referred to as "code sets", "ontologies", "vocabularies", "classification systems", etc.
               </li>
               <li><a name="fn3"></a>
                  							[<a href="#fn-src3">source</a>]
                  							Within this document, the term "code system" refers to a system of codes, descriptions, designations, properties and relationships.
                  Other common names for this entity include "vocabulary", "terminology", "coding scheme", "classification scheme" and "ontology".
               </li>
               <li><a name="fn4"></a>
                  							[<a href="#fn-src4">source</a>]
                  							Note: In this context, constraint refers to constraints on model itself, not attribute domains.
               </li>
               <li><a name="fn5"></a>
                  							[<a href="#fn-src5">source</a>]
                  							This will most likely be an ISO OID, rooted at 2.16.840.1.113883.1.11, but this decision has not be finalized.
               </li>
               <li><a name="fn6"></a>
                  							[<a href="#fn-src6">source</a>]
                  							It is possible for a constructed value set to reference other value sets that are drawn from more than one code system.  A
                  given value set may, howver, only directly reference concepts drawn from a single code system.
               </li>
               <li><a name="fn7"></a>
                  							[<a href="#fn-src7">source</a>]
                  							This document doesn&#8217;t address the issue of how to reference a specific version of a code system or the state of a value set
                  at a particular point in time.  These topics will be covered in a subsequent release of the specification.
               </li>
               <li><a name="fn8"></a>
                  							[<a href="#fn-src8">source</a>]
                  							Within this document, the term "code system" is used to designate a system of codes, descriptions, designations, properties
                  and relationships.  Other terms that are often used to designate this entity include "vocabulary", "terminology", "coding
                  scheme", "classification scheme" and "ontology".
               </li>
               <li><a name="fn9"></a>
                  							[<a href="#fn-src9">source</a>]
                  							The ability to access past release versions of a code system will be implemented in a subsequent revision of this specification.
               </li>
               <li><a name="fn10"></a>
                  							[<a href="#fn-src10">source</a>]
                  							The reason that a designation is shown as associated with more than one coded concept is to stress the fact that it is possible
                  for more than one coded concept to share the same designation <em>text</em>.  The model does not making any assertions about whether a designation is a "first class object" - that is whether it has
                  an identity beyond the textual portion.
               </li>
               <li><a name="fn11"></a>
                  							[<a href="#fn-src11">source</a>]
                  							This model is not complete and does not fully represent of the semantics of ontology and terminology systems.  The assertion
                  of a relationship between two coded terms is obviously not sufficient to describe the semantic implication of the relationship
                  to either the associated coded terms or instances thereof.  It is also important to note that this document makes no statement
                  on the implications of the absence of an asserted relationship between two codes.  It is left to the discretion of the individual
                  terminology providers to fill in the additional semantics as is appropriate for their own model and content.
               </li>
            </ol>
         </div>
         <p>
            <table>
               <tbody>
                  <tr>
                     <td><a class="custombutton" href="#top">Return to top of page</a></td>
                  </tr>
               </tbody>
            </table>
         </p>
      </div>
   </body>
</html>